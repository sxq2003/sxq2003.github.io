<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>sxq • Posts by &#34;coppersmith&#34; tag</title>
        <link>https://sxq2003.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Mon, 11 Nov 2024 17:48:58 +0800</pubDate>
        <lastBuildDate>Mon, 11 Nov 2024 17:48:58 +0800</lastBuildDate>
        <category>crypto</category>
        <category>coppersmith</category>
        <category>-sage -crypto</category>
        <category>lwe</category>
        <category>格</category>
        <category>伪随机</category>
        <item>
            <guid isPermalink="true">https://sxq2003.github.io/2024/11/11/Coppersmith%E7%9B%B8%E5%85%B3%E6%94%BB%E5%87%BB/</guid>
            <title>Coppersmith相关攻击</title>
            <link>https://sxq2003.github.io/2024/11/11/Coppersmith%E7%9B%B8%E5%85%B3%E6%94%BB%E5%87%BB/</link>
            <category>crypto</category>
            <category>coppersmith</category>
            <pubDate>Mon, 11 Nov 2024 17:48:58 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;factoring-with-high-bits-known已知p的高位&#34;&gt;Factoring with High Bits Known(已知p的高位)&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/11/Coppersmith%E7%9B%B8%E5%85%B3%E6%94%BB%E5%87%BB/1.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;经典例子&#34;&gt;经典例子&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=&lt;span class=&#34;number&#34;&gt;0x5894f869d1aecee379e2cb60ff7314d18dbd383e0c9f32e7f7b4dc8bd47535d4f3512ce6a23b0251049346fede745d116ba8d27bcc4d7c18cfbd86c7d065841788fcd600d5b3ac5f6bb1e111f265994e550369ddd86e20f615606bf21169636d153b6dfee4472b5a3cb111d0779d02d9861cc724d389eb2c07a71a7b3941da7dL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=random.getrandbits(&lt;span class=&#34;number&#34;&gt;512&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(m,e,n)=&lt;span class=&#34;number&#34;&gt;0x284a601c3321fd882d3b64ae27fb587d1714bc18aecc3293169861bcf17678a6e83947aba4f165f22a712ed42e43c66cf70eb1df4d73dd3adf1754f627b1b3ca25b76b3a595369c36b1f5635cd3efe5924539757e74840224eec238534ead0bcbdce26eb018aa33516d22790240c7576cb5a09d3f69bcf2795a3a353db7c8bedL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((p&amp;gt;&amp;gt;&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;)=&lt;span class=&#34;number&#34;&gt;0x5d33504b4e3bd2ffb628b5c447c4a7152a9f37dc4bcc8f376f64000fa96eb97c0af445e3b2c03926a4aa4542918c601000000000000000000000000000000000L&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解题脚本&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;0x5894f869d1aecee379e2cb60ff7314d18dbd383e0c9f32e7f7b4dc8bd47535d4f3512ce6a23b0251049346fede745d116ba8d27bcc4d7c18cfbd86c7d065841788fcd600d5b3ac5f6bb1e111f265994e550369ddd86e20f615606bf21169636d153b6dfee4472b5a3cb111d0779d02d9861cc724d389eb2c07a71a7b3941da7dL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p_fake = &lt;span class=&#34;number&#34;&gt;0x5d33504b4e3bd2ffb628b5c447c4a7152a9f37dc4bcc8f376f64000fa96eb97c0af445e3b2c03926a4aa4542918c601000000000000000000000000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pbits = p_fake.nbits()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kbits = &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;#p失去的低位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pbar = p_fake &amp;amp; (&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;^pbits-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;^kbits)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;upper %d bits (of %d bits) is given&amp;quot;&lt;/span&gt; % (pbits-kbits, pbits))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = x + pbar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x0 = f.small_roots(X=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;^kbits, beta=&lt;span class=&#34;number&#34;&gt;0.4&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# find root &amp;lt; 2^kbits with factor &amp;gt;= n^0.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (x0 + pbar)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;差几位的情况&#34;&gt;差几位的情况&lt;/h2&gt;
&lt;p&gt;爆破&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; tqdm &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pbits =  	&lt;span class=&#34;comment&#34;&gt;#p原本的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phigh =     &lt;span class=&#34;comment&#34;&gt;#p的已知高位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; trange(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;**&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;#trange和range的作用相同，但是trange可以显示进度条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p4 = phigh&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p4 = p4 + i        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kbits = pbits - p4.nbits()  &lt;span class=&#34;comment&#34;&gt;#未知位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p4 = p4 &amp;lt;&amp;lt; kbits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n)) &lt;span class=&#34;comment&#34;&gt;#套脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = x + p4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    roots = f.small_roots(X=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;^kbits, beta=&lt;span class=&#34;number&#34;&gt;0.4&lt;/span&gt;, epsilon=&lt;span class=&#34;number&#34;&gt;0.01&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; roots:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = p4 + &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(roots[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;p:&amp;quot;&lt;/span&gt;,p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;已知p的高位与部分中间位的情况&#34;&gt;已知p的高位与部分中间位的情况&lt;/h2&gt;
&lt;p&gt;例题&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import getStrongPrime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from gmpy import next_prime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from random import getrandbits&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from flag import flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=getStrongPrime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=next_prime(p^((1&amp;lt;&amp;lt;900)-1)^getrandbits(300))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=int(flag.encode(&amp;#x27;hex&amp;#x27;),16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;assert m&amp;lt;n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#0xe78ab40c343d4985c1de167e80ba2657c7ee8c2e26d88e0026b68fe400224a3bd7e2a7103c3b01ea4d171f5cf68c8f00a64304630e07341cde0bc74ef5c88dcbb9822765df53182e3f57153b5f93ff857d496c6561c3ddbe0ce6ff64ba11d4edfc18a0350c3d0e1f8bd11b3560a111d3a3178ed4a28579c4f1e0dc17cb02c3ac38a66a230ba9a2f741f9168641c8ce28a3a8c33d523553864f014752a04737e555213f253a72f158893f80e631de2f55d1d0b2b654fc7fa4d5b3d95617e8253573967de68f6178f78bb7c4788a3a1e9778cbfc7c7fa8beffe24276b9ad85b11eed01b872b74cdc44959059c67c18b0b7a1d57512319a5e84a9a0735fa536f1b3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hex(c))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#0xd7f6c90512bc9494370c3955ff3136bb245a6d1095e43d8636f66f11db525f2063b14b2a4363a96e6eb1bea1e9b2cc62b0cae7659f18f2b8e41fca557281a1e859e8e6b35bd114655b6bf5e454753653309a794fa52ff2e79433ca4bbeb1ab9a78ec49f49ebee2636abd9dd9b80306ae1b87a86c8012211bda88e6e14c58805feb6721a01481d1a7031eb3333375a81858ff3b58d8837c188ffcb982a631e1a7a603b947a6984bd78516c71cfc737aaba479688d56df2c0952deaf496a4eb3f603a46a90efbe9e82a6aef8cfb23e5fcb938c9049b227b7f15c878bd99b61b6c56db7dfff43cd457429d5dcdb5fe314f1cdf317d0c5202bad6a9770076e9b25b1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from tqdm import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from libnum import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = 0xe78ab40c343d4985c1de167e80ba2657c7ee8c2e26d88e0026b68fe400224a3bd7e2a7103c3b01ea4d171f5cf68c8f00a64304630e07341cde0bc74ef5c88dcbb9822765df53182e3f57153b5f93ff857d496c6561c3ddbe0ce6ff64ba11d4edfc18a0350c3d0e1f8bd11b3560a111d3a3178ed4a28579c4f1e0dc17cb02c3ac38a66a230ba9a2f741f9168641c8ce28a3a8c33d523553864f014752a04737e555213f253a72f158893f80e631de2f55d1d0b2b654fc7fa4d5b3d95617e8253573967de68f6178f78bb7c4788a3a1e9778cbfc7c7fa8beffe24276b9ad85b11eed01b872b74cdc44959059c67c18b0b7a1d57512319a5e84a9a0735fa536f1b3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 0xd7f6c90512bc9494370c3955ff3136bb245a6d1095e43d8636f66f11db525f2063b14b2a4363a96e6eb1bea1e9b2cc62b0cae7659f18f2b8e41fca557281a1e859e8e6b35bd114655b6bf5e454753653309a794fa52ff2e79433ca4bbeb1ab9a78ec49f49ebee2636abd9dd9b80306ae1b87a86c8012211bda88e6e14c58805feb6721a01481d1a7031eb3333375a81858ff3b58d8837c188ffcb982a631e1a7a603b947a6984bd78516c71cfc737aaba479688d56df2c0952deaf496a4eb3f603a46a90efbe9e82a6aef8cfb23e5fcb938c9049b227b7f15c878bd99b61b6c56db7dfff43cd457429d5dcdb5fe314f1cdf317d0c5202bad6a9770076e9b25b1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hight_124 = gmpy2.iroot(n,2)[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hight_124 &amp;gt;&amp;gt;= 900&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hight_124)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# p = ((hight_124 &amp;lt;&amp;lt; 900) ^ (1&amp;lt;&amp;lt;900)-1) ^ ((1&amp;lt;&amp;lt;300)-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# q = (hight_124 &amp;lt;&amp;lt; 900)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# for i in range(899,299,-1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     tmp = 1 &amp;lt;&amp;lt; i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     tmp_p = p ^ tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     tmp_q = q ^ tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#     if tmp_p * tmp_q &amp;lt; n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#         p,q = tmp_p,tmp_q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = 170966211863977623201944075700366958395158791305775637137148430402719914596268969449870561801896130406088025694634815584789789278534177858182071449441084789053688828370314062664371344767976558822028720769455584351917209508431456012727131938700513852456800512509515671651181190792109543581556171983224752308224&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in trange(300,600):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h_p = (p &amp;gt;&amp;gt; i)&amp;lt;&amp;lt;i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = h_p + x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    root = f.small_roots(X=2^i,beta=0.4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if len(root) &amp;gt; 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = int(h_p + root[0])#这里要转化为int，我也不知道为啥&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        print(p,i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = n // p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi = (p - 1) * (q - 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = gmpy2.invert(e,phi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = pow(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;已知p的高位p或q的低位&#34;&gt;已知p的高位，p或q的低位&lt;/h2&gt;
&lt;p&gt;例题&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import getPrime, bytes_to_long&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from secret import flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = getPrime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = getPrime(1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 65537&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hint1 = p &amp;gt;&amp;gt; 724&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hint2 = q % (2 ** 265)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ct = pow(bytes_to_long(flag), e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hint1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(hint2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(ct)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#hint: 1514296530850131082973956029074258536069144071110652176122006763622293335057110441067910479&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#hint2: 40812438243894343296354573724131194431453023461572200856406939246297219541329623&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#n: 21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#ct: 19073695285772829730103928222962723784199491145730661021332365516942301513989932980896145664842527253998170902799883262567366661277268801440634319694884564820420852947935710798269700777126717746701065483129644585829522353341718916661536894041337878440111845645200627940640539279744348235772441988748977191513786620459922039153862250137904894008551515928486867493608757307981955335488977402307933930592035163126858060189156114410872337004784951228340994743202032248681976932591575016798640429231399974090325134545852080425047146251781339862753527319093938929691759486362536986249207187765947926921267520150073408188188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#知道p的高300位，和q的低265位&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; gmpy2 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1 = &lt;span class=&#34;number&#34;&gt;1514296530850131082973956029074258536069144071110652176122006763622293335057110441067910479&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q0 = &lt;span class=&#34;number&#34;&gt;40812438243894343296354573724131194431453023461572200856406939246297219541329623&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mod=&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;265&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p0=n*invert(q0,mod)%mod &lt;span class=&#34;comment&#34;&gt;#q低位推导出p的低位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pbar=(p1&amp;lt;&amp;lt;&lt;span class=&#34;number&#34;&gt;724&lt;/span&gt;)+p0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f=pbar+x*mod*&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f=f.monic()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pp=f.small_roots(X=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;^&lt;span class=&#34;number&#34;&gt;454&lt;/span&gt;,beta=&lt;span class=&#34;number&#34;&gt;0.4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(pp):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pbar+=mod&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=pbar+pp[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;*mod&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt; n%p==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q=n//p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phi=(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=&lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=invert(e,phi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=&lt;span class=&#34;number&#34;&gt;19073695285772829730103928222962723784199491145730661021332365516942301513989932980896145664842527253998170902799883262567366661277268801440634319694884564820420852947935710798269700777126717746701065483129644585829522353341718916661536894041337878440111845645200627940640539279744348235772441988748977191513786620459922039153862250137904894008551515928486867493608757307981955335488977402307933930592035163126858060189156114410872337004784951228340994743202032248681976932591575016798640429231399974090325134545852080425047146251781339862753527319093938929691759486362536986249207187765947926921267520150073408188188&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c,d,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(m))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;nA2YA&#34;&gt;
&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;Stereotyped messages(已知m的高位)&lt;/font&gt;
&lt;/h1&gt;
&lt;h1 id=&#34;stereotyped-messages已知m的高位&#34;&gt;Stereotyped messages(已知m的高位)&lt;/h1&gt;
&lt;p&gt;其实就是解个模方程，e需要很小&lt;/p&gt;
&lt;h2 id=&#34;例题&#34;&gt;例题&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=0x2519834a6cc3bf25d078caefc5358e41c726a7a56270e425e21515d1b195b248b82f4189a0b621694586bb254e27010ee4376a849bb373e5e3f2eb622e3e7804d18ddb897463f3516b431e7fc65ec41c42edf736d5940c3139d1e374aed1fc3b70737125e1f540b541a9c671f4bf0ded798d727211116eb8b86cdd6a29aefcc7L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=random.getrandbits(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)=0x1f6f6a8e61f7b5ad8bef738f4376a96724192d8da1e3689dec7ce5d1df615e0910803317f9bafb6671ffe722e0292ce76cca399f2af1952dd31a61b37019da9cf27f82c3ecd4befc03c557efe1a5a29f9bb73c0239f62ed951955718ac0eaa3f60a4c415ef064ea33bbd61abe127c6fc808c0edb034c52c45bd20a219317fb75L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;((m&amp;gt;&amp;gt;72)&amp;lt;&amp;lt;72)=0xb11ffc4ce423c77035280f1c575696327901daac8a83c057c453973ee5f4e508455648886441c0f3393fe4c922ef1c3a6249c12d21a000000000000000000L&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n = 0x2519834a6cc3bf25d078caefc5358e41c726a7a56270e425e21515d1b195b248b82f4189a0b621694586bb254e27010ee4376a849bb373e5e3f2eb622e3e7804d18ddb897463f3516b431e7fc65ec41c42edf736d5940c3139d1e374aed1fc3b70737125e1f540b541a9c671f4bf0ded798d727211116eb8b86cdd6a29aefcc7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = randrange(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = pow(m, e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;beta = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;epsilon = beta^2/7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nbits = n.nbits()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kbits = floor(nbits*(beta^2/e-epsilon))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mbar = 0xb11ffc4ce423c77035280f1c575696327901daac8a83c057c453973ee5f4e508455648886441c0f3393fe4c922ef1c3a6249c12d21a000000000000000000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 0x1f6f6a8e61f7b5ad8bef738f4376a96724192d8da1e3689dec7ce5d1df615e0910803317f9bafb6671ffe722e0292ce76cca399f2af1952dd31a61b37019da9cf27f82c3ecd4befc03c557efe1a5a29f9bb73c0239f62ed951955718ac0eaa3f60a4c415ef064ea33bbd61abe127c6fc808c0edb034c52c45bd20a219317fb75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (&amp;quot;upper %d bits (of %d bits) is given&amp;quot; % (nbits-kbits, nbits))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = (mbar + x)^e - c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x0 = f.small_roots(X=2^kbits, beta=1)[0]  # find root &amp;lt; 2^kbits with factor = n1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print (mbar + x0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;partial-key-exposure-attack已知d的低位&#34;&gt;Partial Key Exposure Attack(已知d的低位)&lt;/h1&gt;
&lt;p&gt;如果知道d的低位，低位约为n的位数的1/4就可以恢复d&lt;/p&gt;
&lt;h2 id=&#34;例题-1&#34;&gt;例题&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=0xd463feb999c9292e25acd7f98d49a13413df2c4e74820136e739281bb394a73f2d1e6b53066932f50a73310360e5a5c622507d8662dadaef860b3266222129fd645eb74a0207af9bd79a9794f4bd21f32841ce9e1700b0b049cfadb760993fcfc7c65eca63904aa197df306cad8720b1b228484629cf967d808c13f6caef94a9L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=random.getrandbits(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=pow(m,e,n)=0xcaeeb38516d642a19550fa863173f4695c3b44bd5a5554b1e93cfb690d5c1de531b7f1187f7d8c8c11da38af025f19d393033d0ca801e15d6d8441098485f13ab988d09ef1f4f5a735e19780c823cf77415884c33a1f7908cf4229874c082eb7ceb776bafb182b86fdabd29b07bcb8e3f2f50ee4cc0f323e8d9ce320139bcd27L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d=invmod(e,(p-1)*(q-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d&amp;amp;((1&amp;lt;&amp;lt;512)-1)=0x603d033f2ef6c759aec839f132a45215fc8a635b757f3951a731fe60bc6729b3bcf819b57abfcaba3a93e9edef766c0d499cad3f7adb306bcf1645cfb63400e3L&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;long_to_bytes(m).encode(&amp;#x27;hex&amp;#x27;)=???&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#此函数用于在求出p的低位后求出p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def partial_p(p0, kbits, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nbits = n.nbits()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = 2^kbits*x + p0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f = f.monic()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    roots = f.small_roots(X=2^(nbits//2-kbits), beta=0.3)  # find root &amp;lt; 2^(nbits//2-kbits) with factor &amp;gt;= n^0.3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if roots:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x0 = roots[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = gcd(2^kbits*x0 + p0, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return ZZ(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#先通过推导出的公式，由d的低位求得p的低位，再通过上面那个函数求得p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def find_p(d0, kbits, e, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    X = var(&amp;#x27;X&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for k in xrange(1, e+1):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        results = solve_mod([e*d0*X - k*X*(n-X+1) + k*n == X], 2^kbits)#公式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for x in results:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p0 = ZZ(x[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = partial_p(p0, kbits, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if p:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                return p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if __name__ == &amp;#x27;__main__&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    e = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    beta = 0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    epsilon = beta^2/7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    nbits = n.nbits()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    kbits = nbits - d.nbits()-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d0 = d &amp;amp; (2^kbits-1)#题目给的d的低位的一般产生形式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = find_p(d0, kbits, e, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    q = n//p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def getFullP(low_p, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    R.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n), implementation=&amp;#x27;NTL&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    p = x*2^512 + low_p&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    root = (p-n).monic().small_roots(X = 2^128, beta = 0.4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if root:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return p(root[0])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return None&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def phase4(low_d, n, c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    maybe_p = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for k in range(1, 4):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p = var(&amp;#x27;p&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p0 = solve_mod([3*p*low_d  == p + k*(n*p - p^2 - n + p)], 2^512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        maybe_p += [int(x[0]) for x in p0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(maybe_p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for x in maybe_p:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        P = getFullP(x, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if P: break&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    P = int(P)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Q = n // P&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    assert P*Q == n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = inverse_mod(3, (P-1)*(Q-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    print(hex(power_mod(c, d, n))[2:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = 92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c = 56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;low_d = 787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;phase4(low_d, n, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 464c41477b325e3872736135616230383637343566366563373435363139613862363566653465633536307d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;原理&#34;&gt;原理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/2024/11/11/Coppersmith%E7%9B%B8%E5%85%B3%E6%94%BB%E5%87%BB/2.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;related-message-attack&#34;&gt;Related Message Attack&lt;/h1&gt;
&lt;p&gt;两条信息满足线性关系&lt;/p&gt;
&lt;p&gt;在实际情况中，我们遇到更多的是先对flag{xxxx}进行加密，在对xxxx进行加密，这两次加密的内容是呈线性的&lt;/p&gt;
&lt;p&gt;即m与a+m+b，其中m=&#39;xxxx&#39;，a=flag{，b=}&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;m1 = bytes_to_long(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2 = a * m1 + b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1 = pow(m1,e,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = pow(a * m1 + b,e,n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;例题-2&#34;&gt;例题&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from secret import flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from Crypto.Util.number import *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m1 = bytes_to_long(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;N = getPrime(512)*getPrime(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = 17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1 = pow(m1, e, N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a = getRandomNBitInteger(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = getRandomNBitInteger(512)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m2 = a * m1 + b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2 = pow(m2, e, N)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(N, a, b, c1, c2, sep=&amp;quot;\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 51296885372346449295388453471330409021784141081351581975478435681552082076338697136130122011636685327781785488670769096434920591920054441921039812310126089859349902066456998315283909435249794317277620588552441456327265553018986591779396701680997794937951231970194353001576159809798153970829987274504038146741&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 13256631249970000274738888132534852767685499642889351632072622194777502848070957827974250425805779856662241409663031192870528911932663995606616763982320967&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 12614470377409090738391280373352373943201882741276992121990944593827605866548572392808272414120477304486154096358852845785437999246453926812759725932442170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 18617698095122597355752178584860764221736156139844401400942959000560180868595058572264330257490645079792321778926462300410653970722619332098601515399526245808718518153518824404167374361098424325296872587362792839831578589407441739040578339310283844080111189381106274103089079702496168766831316853664552253142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 14091361528414093900688440242152327115109256507133728799758289918462970724109343410464537203689727409590796472177295835710571700501895484300979622506298961999001641059179449655629481072402234965831697915939034769804437452528921599125823412464950939837343822566667533463393026895985173157447434429906021792720&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;题解&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n=51296885372346449295388453471330409021784141081351581975478435681552082076338697136130122011636685327781785488670769096434920591920054441921039812310126089859349902066456998315283909435249794317277620588552441456327265553018986591779396701680997794937951231970194353001576159809798153970829987274504038146741&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=13256631249970000274738888132534852767685499642889351632072622194777502848070957827974250425805779856662241409663031192870528911932663995606616763982320967&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=12614470377409090738391280373352373943201882741276992121990944593827605866548572392808272414120477304486154096358852845785437999246453926812759725932442170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=18617698095122597355752178584860764221736156139844401400942959000560180868595058572264330257490645079792321778926462300410653970722619332098601515399526245808718518153518824404167374361098424325296872587362792839831578589407441739040578339310283844080111189381106274103089079702496168766831316853664552253142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=14091361528414093900688440242152327115109256507133728799758289918462970724109343410464537203689727409590796472177295835710571700501895484300979622506298961999001641059179449655629481072402234965831697915939034769804437452528921599125823412464950939837343822566667533463393026895985173157447434429906021792720&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def franklinReiter(n,e,c1,c2,a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    R.&amp;lt;X&amp;gt; = Zmod(n)[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f1 = X^e - c1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    f2 = (X*a+ b)^e - c2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # coefficient 0 = -m, which is what we wanted!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return Integer(n-(compositeModulusGCD(f1,f2)).coefficients()[0]) # 系数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # GCD is not implemented for rings over composite modulus in Sage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # so we do our own implementation. Its the exact same as standard GCD, but with&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  # the polynomials monic representation&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def compositeModulusGCD(a, b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(b == 0):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return a.monic()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return compositeModulusGCD(b, a % b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=franklinReiter(n,e,c1,c2,a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# flag&amp;#123;a593591a-3749-cc52-0c27-e897fac2c967&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import libnum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=51296885372346449295388453471330409021784141081351581975478435681552082076338697136130122011636685327781785488670769096434920591920054441921039812310126089859349902066456998315283909435249794317277620588552441456327265553018986591779396701680997794937951231970194353001576159809798153970829987274504038146741&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a=13256631249970000274738888132534852767685499642889351632072622194777502848070957827974250425805779856662241409663031192870528911932663995606616763982320967&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=12614470377409090738391280373352373943201882741276992121990944593827605866548572392808272414120477304486154096358852845785437999246453926812759725932442170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c1=18617698095122597355752178584860764221736156139844401400942959000560180868595058572264330257490645079792321778926462300410653970722619332098601515399526245808718518153518824404167374361098424325296872587362792839831578589407441739040578339310283844080111189381106274103089079702496168766831316853664552253142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2=14091361528414093900688440242152327115109256507133728799758289918462970724109343410464537203689727409590796472177295835710571700501895484300979622506298961999001641059179449655629481072402234965831697915939034769804437452528921599125823412464950939837343822566667533463393026895985173157447434429906021792720&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e=17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def franklinReiter(n,e,c1,c2,a,b):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PR.&amp;lt;x&amp;gt; = PolynomialRing(Zmod(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    g1 = (x)^e - c1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    g2 = (a*x+b)^e - c2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def gcd(g1, g2):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while g2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            g1, g2 = g2, g1 % g2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return g1.monic() # &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return -gcd(g1, g2)[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m=franklinReiter(n,e,c1,c2,a,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(libnum.n2s(int(m)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# flag&amp;#123;a593591a-3749-cc52-0c27-e897fac2c967&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;boneh-and-durfee-attack&#34;&gt;Boneh and Durfee attack&lt;/h1&gt;
&lt;h1 id=&#34;rsa-padding-attack&#34;&gt;RSA Padding Attack&lt;/h1&gt;
 ]]></description>
        </item>
    </channel>
</rss>
