<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sxq2003.github.io</id>
    <title>sxq • Posts by &#34;crypto&#34; category</title>
    <link href="https://sxq2003.github.io" />
    <updated>2024-04-07T01:16:12.000Z</updated>
    <category term="-sage -crypto" />
    <category term="crypto" />
    <category term="lwe" />
    <category term="格" />
    <entry>
        <id>https://sxq2003.github.io/2024/04/07/%E4%B8%80%E9%81%93%E7%BB%8F%E5%85%B8%E7%9A%84LWE/</id>
        <title>一道经典的LWE</title>
        <link rel="alternate" href="https://sxq2003.github.io/2024/04/07/%E4%B8%80%E9%81%93%E7%BB%8F%E5%85%B8%E7%9A%84LWE/"/>
        <content type="html">&lt;h1 id=&#34;problem&#34;&gt;Problem&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; secret &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gravity&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n,d=&lt;span class=&#34;number&#34;&gt;0.25&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A=np.zeros([n,n])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            A[i,j]=d/n*(d**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+((i-j)/n)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)**(-&lt;span class=&#34;number&#34;&gt;1.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n=&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A=gravity(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x=np.array(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(flag))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b=A@x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;np.savetxt(&lt;span class=&#34;string&#34;&gt;&amp;#x27;b.txt&amp;#x27;&lt;/span&gt;,b)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看似很简单，&lt;span class=&#34;math inline&#34;&gt;\(b=A*x\)&lt;/span&gt;，不就是个矩阵乘法嘛&lt;span class=&#34;math inline&#34;&gt;\(A、b\)&lt;/span&gt;都已知，直接&lt;span class=&#34;math inline&#34;&gt;\(x=b*A^{-1}\)&lt;/span&gt;不就好了。实则没这么简单。&lt;/p&gt;
&lt;p&gt;原因就在于&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;中的元素全都是浮点数，你回去会有精度损失，无法还原flag。这就需要我们把&lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt;中的元素放大(乘上一个很大的数，如&lt;span class=&#34;math inline&#34;&gt;\(10^{20}\)&lt;/span&gt;)，去掉小数点，但是这样处理之后会有误差，还要误差考虑进去，经典的LWE问题。&lt;/p&gt;
&lt;p&gt;设误差为&lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;，则&lt;span class=&#34;math inline&#34;&gt;\(b+s=Ax\)&lt;/span&gt;，将LWE问题转换为SVP问题，因为&lt;span class=&#34;math inline&#34;&gt;\(A,b\)&lt;/span&gt;已知，&lt;span class=&#34;math inline&#34;&gt;\(s,x\)&lt;/span&gt;未知&lt;/p&gt;
&lt;p&gt;构造矩阵&lt;span class=&#34;math inline&#34;&gt;\(\begin{pmatrix}A &amp;amp; 0 \\ -b &amp;amp; 1 \end{pmatrix}\)&lt;/span&gt;作为基向量，有&lt;span class=&#34;math inline&#34;&gt;\(\begin{pmatrix}x&amp;amp;1 \end{pmatrix}\begin{pmatrix}A &amp;amp; 0 \\ -b &amp;amp; 1 \end{pmatrix}=\begin{pmatrix}s &amp;amp; 1 \end{pmatrix}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;对&lt;span class=&#34;math inline&#34;&gt;\(\begin{pmatrix}A &amp;amp; 0 \\ -b &amp;amp; 1 \end{pmatrix}\)&lt;/span&gt;格基规约，利用LLL算法得到&lt;span class=&#34;math inline&#34;&gt;\(\begin{pmatrix}s&amp;amp; 1 \end{pmatrix}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;因此&lt;span class=&#34;math inline&#34;&gt;\(x=\begin{pmatrix}s&amp;amp; 1 \end{pmatrix}\begin{pmatrix}A &amp;amp; 0 \\ -b &amp;amp; 1 \end{pmatrix}^{-1}\)&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gravity&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;n,d=&lt;span class=&#34;number&#34;&gt;0.25&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    A=np.zeros([n,n])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            A[i,j]=d/n*(d**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+((i-j)/n)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)**(-&lt;span class=&#34;number&#34;&gt;1.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = np.loadtxt(&lt;span class=&#34;string&#34;&gt;&amp;#x27;b.txt&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;85&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;multiple = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; ^ &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = gravity(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A = [[&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(j * multiple) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; i] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; A] &lt;span class=&#34;comment&#34;&gt;# 乘上一个大数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = [&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i * (-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * multiple) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; b] &lt;span class=&#34;comment&#34;&gt;#把b转换成-b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M = [A[i] + [&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(n)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M.append(b + [&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M = Matrix(ZZ, n + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, M) &lt;span class=&#34;comment&#34;&gt;#构造基向量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ans = M.LLL()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;# 格基规约&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(ans)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = M.solve_left(ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(bytes(flag))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(flag[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="crypto" />
        <category term="lwe" />
        <category term="格" />
        <updated>2024-04-07T01:16:12.000Z</updated>
    </entry>
    <entry>
        <id>https://sxq2003.github.io/2024/03/08/Sage%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/</id>
        <title>Sage常见函数用法</title>
        <link rel="alternate" href="https://sxq2003.github.io/2024/03/08/Sage%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;solve_mod&#34;&gt;solve_mod&lt;/h1&gt;
&lt;p&gt;作用：解同余方程&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x = var(&amp;#x27;x&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;solve_mod([方程],模数)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x, y = var(&lt;span class=&#34;string&#34;&gt;&amp;#x27;x,y&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mod = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(solve_mod(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x + y == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, mod))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(solve_mod(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x + y == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, mod, solution_dict = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(solve_mod((&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x + y == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, x + &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;*y == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), mod))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(solve_mod((&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x + y == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, x + &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;*y == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;), mod, solution_dict = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;discrete_log&#34;&gt;discrete_log&lt;/h1&gt;
&lt;p&gt;作用：求解离散对数问题&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c =g^m(mod\,p)\)&lt;/span&gt;，其中&lt;span class=&#34;math inline&#34;&gt;\(c,g,p\)&lt;/span&gt;已知，&lt;span class=&#34;math inline&#34;&gt;\(m\)&lt;/span&gt;未知&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;m = discrete_log(mod(c,p),mod(g,p))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;nth_root&#34;&gt;nth_root&lt;/h1&gt;
&lt;p&gt;作用：模数下开根&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c = m^e(mod\,n)\)&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;m=Mod(c,n).nth_root(e, &lt;span class=&#34;built_in&#34;&gt;all&lt;/span&gt;=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;p.x-zz&#34;&gt;P.&amp;lt;x&amp;gt; = ZZ[]&lt;/h1&gt;
&lt;p&gt;作用：整数域下设未知数x&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;44538727182858207226040251762322467288176239968967952269350336889655421753182750730773886813281253762528207970314694060562016861614492626112150259048393048617529867598499261392152098087985858905944606287003243&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc = &lt;span class=&#34;number&#34;&gt;37578889436345667053409195986387874079577521081198523844555524501835825138236698001996990844798291201187483119265306641889824719989940722147655181198458261772053545832559971159703922610578530282146835945192532&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;P.&amp;lt;k&amp;gt; = ZZ[] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = k** &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;114&lt;/span&gt; *k + &lt;span class=&#34;number&#34;&gt;31377&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = k** &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;313&lt;/span&gt; *k** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt; *k + &lt;span class=&#34;number&#34;&gt;14011&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = p * q - n &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k = f.roots()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = ZZ(p(k)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = ZZ(q(k)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = inverse_mod( &lt;span class=&#34;number&#34;&gt;31337&lt;/span&gt;, (p- &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q- &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m = power_mod(enc, d, n) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(m))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;h2 id=&#34;facx&#34;&gt;fac(x)&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x!\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;modcn&#34;&gt;Mod(c,n)&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt;在模&lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt;下的值&lt;/p&gt;
&lt;h2 id=&#34;euler_phix&#34;&gt;euler_phi(x)&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;的欧拉函数&lt;/p&gt;
</content>
        <category term="-sage -crypto" />
        <updated>2024-03-08T03:42:14.000Z</updated>
    </entry>
</feed>
